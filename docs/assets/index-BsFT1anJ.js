var cc=Object.defineProperty;var hc=(n,t,e)=>t in n?cc(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var M=(n,t,e)=>hc(n,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=e(i);fetch(i.href,r)}})();var Pi=(n=>(n.onDownloadStateChange="on-download-state-change",n.updateScript="update-script",n))(Pi||{});const lc=["update-script"];class uc extends CustomEvent{constructor(){super("on-download-state-change")}}class dc extends CustomEvent{constructor(t){super("update-script",{detail:t})}}const pc={script:""},Cs=class Cs{static reduce(t,e){return Cs.map[e.type]?Cs.map[e.type](t,e):[null,null]}};M(Cs,"map",{[Pi.updateScript]:(t,e)=>(t.script=e.detail,[t,null])});let xi=Cs;class At{static listenTo(t){return new fc(t)}static dispatch(t){window.dispatchEvent(t)}}class fc{constructor(t){M(this,"eventName");M(this,"callback",()=>{});M(this,"abortController",new AbortController);this.eventName=t}publish(t){this.callback(t.detail,t.type)}subscribe(t){return this.callback=t,window.addEventListener(this.eventName,this.publish.bind(this),{signal:this.abortController.signal}),this}destroy(){this.abortController.abort()}}const wt=class wt{static init(){Object.values(lc).forEach(t=>{window.addEventListener(t,wt.commit)}),wt.loadStateFromLocalStorage()}static commit(t){const[e,s]=xi.reduce(wt.state,t);e&&(wt.state={...e},wt.saveStateInLocalStorage(),wt.log("STATE UPDATED",wt.state)),s&&At.dispatch(s)}static select(t){return t(wt.state)}static saveStateInLocalStorage(){window.localStorage.setItem(wt.key,JSON.stringify(wt.state))}static loadStateFromLocalStorage(){const t=window.localStorage.getItem(wt.key);t&&(wt.state=JSON.parse(t),wt.log("LOADED",wt.state))}static log(t,e){if(e){console.log(`[STORE] ${t}`,e);return}console.log(`[STORE] ${t}`)}};M(wt,"key","store-state"),M(wt,"state",pc);let mn=wt;mn.init();class qt extends HTMLElement{static waitFor(t){return customElements.whenDefined(t)}}M(qt,"tag");const Do=document.createElement("template");Do.innerHTML=`
<style>
:host {
  position: relative;
  top: -2px; 

  height: 20px;

  color: var(--blue);
  font-size: 20px;
  font-family: 'Bebas Neue', serif;
  font-weight: 400;
  font-style: normal;

  transition: all 0.1s ease-in-out;
  cursor: pointer;
}

:host(:hover) {
    color: var(--dark);
}
</style>`;const mc=()=>Do.content.cloneNode(!0),Vn=class Vn extends qt{static create(){return document.createElement(Vn.tag)}constructor(){super(),this.attachShadow({mode:"closed"}).append(mc(),"BL!TZAMPLE")}connectedCallback(){this.title="Zur Startseite"}};M(Vn,"tag","bb-logo");let hs=Vn;class nt{static createElement({tag:t,part:e,slot:s,textContent:i,innerHTML:r}={tag:"div"}){const o=document.createElement(t??"div");return e&&o.setAttribute("part",e),s&&(o.slot=s),i&&(o.textContent=i),r&&(o.innerHTML=r),o}}const Oo=document.createElement("template");Oo.innerHTML=`
<style>
:host {
  --size: 100%;

  display: flex;
  height: var(--size);
  width: var(--size);

  padding: 2px;
  border-radius: 2px;

  background: transparent;
  box-sizing: border-box;
}
</style>`;const gc=()=>Oo.content.cloneNode(!0);var Me=(n=>(n.type="type",n.disabled="disabled",n))(Me||{}),oe=(n=>(n.add="add",n.arrowDown="arrowDown",n.arrowLeft="arrowLeft",n.arrowLeftDouble="arrowLeftDouble",n.arrowRight="arrowRight",n.arrowRightdouble="arrowRightDouble",n.arrowUp="arrowUp",n.bars="bars",n.book="book",n.close="close",n.download="download",n.file="file",n.filter="filter",n.help="help",n.list="list",n.menu="menu",n.puzzle="puzzle",n.quillPen="quillPen",n.pen="pen",n.play="play",n.refresh="refresh",n.search="search",n.settings="settings",n.stop="stop",n.trash="trash",n.user="user",n))(oe||{});const _c={add:{viewBox:"0 0 448 512",path:"M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"},arrowDown:{viewBox:"0 0 448 512",path:"M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"},arrowLeft:{viewBox:"0 0 320 512",path:"M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"},arrowLeftDouble:{viewBox:"0 0 512 512",path:"M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160zm352-160l-160 160c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L301.3 256 438.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0z"},arrowRight:{viewBox:"0 0 320 512",path:"M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z"},arrowRightDouble:{viewBox:"0 0 512 512",path:"M470.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 256 265.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160zm-352 160l160-160c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L210.7 256 73.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0z"},arrowUp:{viewBox:"0 0 448 512",path:"M201.4 137.4c12.5-12.5 32.8-12.5 45.3 0l160 160c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 205.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l160-160z"},bars:{viewBox:"0 0 448 512",path:"M0 96C0 78.3 14.3 64 32 64l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 128C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 288c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32L32 448c-17.7 0-32-14.3-32-32s14.3-32 32-32l384 0c17.7 0 32 14.3 32 32z"},book:{viewBox:"0 0 448 512",path:"M96 0C43 0 0 43 0 96L0 416c0 53 43 96 96 96l288 0 32 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l0-64c17.7 0 32-14.3 32-32l0-320c0-17.7-14.3-32-32-32L384 0 96 0zm0 384l256 0 0 64L96 448c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16l192 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-192 0c-8.8 0-16-7.2-16-16zm16 48l192 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-192 0c-8.8 0-16-7.2-16-16s7.2-16 16-16z"},close:{viewBox:"0 0 384 512",path:"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"},download:{viewBox:"0 0 384 512",path:"M64 0C28.7 0 0 28.7 0 64L0 448c0 35.3 28.7 64 64 64l256 0c35.3 0 64-28.7 64-64l0-288-128 0c-17.7 0-32-14.3-32-32L224 0 64 0zM256 0l0 128 128 0L256 0zM216 232l0 102.1 31-31c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-72 72c-9.4 9.4-24.6 9.4-33.9 0l-72-72c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l31 31L168 232c0-13.3 10.7-24 24-24s24 10.7 24 24z"},file:{viewBox:"0 0 384 512",path:"M64 0C28.7 0 0 28.7 0 64L0 448c0 35.3 28.7 64 64 64l256 0c35.3 0 64-28.7 64-64l0-288-128 0c-17.7 0-32-14.3-32-32L224 0 64 0zM256 0l0 128 128 0L256 0zM112 256l160 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-160 0c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64l160 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-160 0c-8.8 0-16-7.2-16-16s7.2-16 16-16zm0 64l160 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-160 0c-8.8 0-16-7.2-16-16s7.2-16 16-16z"},filter:{viewBox:"0 0 512 512",path:"M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z"},help:{viewBox:"0 0 320 512",path:"M80 160c0-35.3 28.7-64 64-64l32 0c35.3 0 64 28.7 64 64l0 3.6c0 21.8-11.1 42.1-29.4 53.8l-42.2 27.1c-25.2 16.2-40.4 44.1-40.4 74l0 1.4c0 17.7 14.3 32 32 32s32-14.3 32-32l0-1.4c0-8.2 4.2-15.8 11-20.2l42.2-27.1c36.6-23.6 58.8-64.1 58.8-107.7l0-3.6c0-70.7-57.3-128-128-128l-32 0C73.3 32 16 89.3 16 160c0 17.7 14.3 32 32 32s32-14.3 32-32zm80 320a40 40 0 1 0 0-80 40 40 0 1 0 0 80z"},list:{viewBox:"0 0 512 512",path:"M40 48C26.7 48 16 58.7 16 72l0 48c0 13.3 10.7 24 24 24l48 0c13.3 0 24-10.7 24-24l0-48c0-13.3-10.7-24-24-24L40 48zM192 64c-17.7 0-32 14.3-32 32s14.3 32 32 32l288 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L192 64zm0 160c-17.7 0-32 14.3-32 32s14.3 32 32 32l288 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-288 0zm0 160c-17.7 0-32 14.3-32 32s14.3 32 32 32l288 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-288 0zM16 232l0 48c0 13.3 10.7 24 24 24l48 0c13.3 0 24-10.7 24-24l0-48c0-13.3-10.7-24-24-24l-48 0c-13.3 0-24 10.7-24 24zM40 368c-13.3 0-24 10.7-24 24l0 48c0 13.3 10.7 24 24 24l48 0c13.3 0 24-10.7 24-24l0-48c0-13.3-10.7-24-24-24l-48 0z"},menu:{viewBox:"0 0 128 512",path:"M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z"},puzzle:{viewBox:"0 0 512 512",path:"M192 104.8c0-9.2-5.8-17.3-13.2-22.8C167.2 73.3 160 61.3 160 48c0-26.5 28.7-48 64-48s64 21.5 64 48c0 13.3-7.2 25.3-18.8 34c-7.4 5.5-13.2 13.6-13.2 22.8c0 12.8 10.4 23.2 23.2 23.2l56.8 0c26.5 0 48 21.5 48 48l0 56.8c0 12.8 10.4 23.2 23.2 23.2c9.2 0 17.3-5.8 22.8-13.2c8.7-11.6 20.7-18.8 34-18.8c26.5 0 48 28.7 48 64s-21.5 64-48 64c-13.3 0-25.3-7.2-34-18.8c-5.5-7.4-13.6-13.2-22.8-13.2c-12.8 0-23.2 10.4-23.2 23.2L384 464c0 26.5-21.5 48-48 48l-56.8 0c-12.8 0-23.2-10.4-23.2-23.2c0-9.2 5.8-17.3 13.2-22.8c11.6-8.7 18.8-20.7 18.8-34c0-26.5-28.7-48-64-48s-64 21.5-64 48c0 13.3 7.2 25.3 18.8 34c7.4 5.5 13.2 13.6 13.2 22.8c0 12.8-10.4 23.2-23.2 23.2L48 512c-26.5 0-48-21.5-48-48L0 343.2C0 330.4 10.4 320 23.2 320c9.2 0 17.3 5.8 22.8 13.2C54.7 344.8 66.7 352 80 352c26.5 0 48-28.7 48-64s-21.5-64-48-64c-13.3 0-25.3 7.2-34 18.8C40.5 250.2 32.4 256 23.2 256C10.4 256 0 245.6 0 232.8L0 176c0-26.5 21.5-48 48-48l120.8 0c12.8 0 23.2-10.4 23.2-23.2z"},quillPen:{viewBox:"0 0 512 512",path:"M278.5 215.6L23 471c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l57-57 68 0c49.7 0 97.9-14.4 139-41c11.1-7.2 5.5-23-7.8-23c-5.1 0-9.2-4.1-9.2-9.2c0-4.1 2.7-7.6 6.5-8.8l81-24.3c2.5-.8 4.8-2.1 6.7-4l22.4-22.4c10.1-10.1 2.9-27.3-11.3-27.3l-32.2 0c-5.1 0-9.2-4.1-9.2-9.2c0-4.1 2.7-7.6 6.5-8.8l112-33.6c4-1.2 7.4-3.9 9.3-7.7C506.4 207.6 512 184.1 512 160c0-41-16.3-80.3-45.3-109.3l-5.5-5.5C432.3 16.3 393 0 352 0s-80.3 16.3-109.3 45.3L139 149C91 197 64 262.1 64 330l0 55.3L253.6 195.8c6.2-6.2 16.4-6.2 22.6 0c5.4 5.4 6.1 13.6 2.2 19.8z"},pen:{viewBox:"0 0 512 512",path:"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160L0 416c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-96c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 64z"},play:{viewBox:"0 0 384 512",path:"M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80L0 432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z"},refresh:{viewBox:"0 0 512 512",path:"M105.1 202.6c7.7-21.8 20.2-42.3 37.8-59.8c62.5-62.5 163.8-62.5 226.3 0L386.3 160 352 160c-17.7 0-32 14.3-32 32s14.3 32 32 32l111.5 0c0 0 0 0 0 0l.4 0c17.7 0 32-14.3 32-32l0-112c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 35.2L414.4 97.6c-87.5-87.5-229.3-87.5-316.8 0C73.2 122 55.6 150.7 44.8 181.4c-5.9 16.7 2.9 34.9 19.5 40.8s34.9-2.9 40.8-19.5zM39 289.3c-5 1.5-9.8 4.2-13.7 8.2c-4 4-6.7 8.8-8.1 14c-.3 1.2-.6 2.5-.8 3.8c-.3 1.7-.4 3.4-.4 5.1L16 432c0 17.7 14.3 32 32 32s32-14.3 32-32l0-35.1 17.6 17.5c0 0 0 0 0 0c87.5 87.4 229.3 87.4 316.7 0c24.4-24.4 42.1-53.1 52.9-83.8c5.9-16.7-2.9-34.9-19.5-40.8s-34.9 2.9-40.8 19.5c-7.7 21.8-20.2 42.3-37.8 59.8c-62.5 62.5-163.8 62.5-226.3 0l-.1-.1L125.6 352l34.4 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L48.4 288c-1.6 0-3.2 .1-4.8 .3s-3.1 .5-4.6 1z"},search:{viewBox:"0 0 512 512",path:"M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"},settings:{viewBox:"0 0 512 512",path:"M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z"},stop:{viewBox:"0 0 384 512",path:"M0 128C0 92.7 28.7 64 64 64H320c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128z"},trash:{viewBox:"0 0 448 512",path:"M135.2 17.7L128 32 32 32C14.3 32 0 46.3 0 64S14.3 96 32 96l384 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-96 0-7.2-14.3C307.4 6.8 296.3 0 284.2 0L163.8 0c-12.1 0-23.2 6.8-28.6 17.7zM416 128L32 128 53.2 467c1.6 25.3 22.6 45 47.9 45l245.8 0c25.3 0 46.3-19.7 47.9-45L416 128z"},user:{viewBox:"0 0 448 512",path:"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z"}},As=class As extends qt{constructor(){super();M(this,"iconElement");this.iconElement=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.iconElement.setAttribute("part","icon"),this.iconElement.setAttribute("height","100%"),this.iconElement.setAttribute("width","100%"),this.attachShadow({mode:"closed"}).append(gc(),this.iconElement)}static create(e){const s=document.createElement(As.tag);return s.setAttribute(Me.type,e),s}set type(e){this.setAttribute(Me.type,e)}get icon(){const e=this.getAttribute(Me.type)??"add";return _c[e]}connectedCallback(){this.updateIcon()}attributeChangedCallback(e,s,i){s!==i&&this.updateIcon()}updateIcon(){this.iconElement.setAttribute("viewBox",this.icon.viewBox),this.iconElement.innerHTML=`<path d="${this.icon.path}" />`}};M(As,"tag","bb-icon"),M(As,"observedAttributes",Object.values(Me));let fe=As;const No=document.createElement("template");No.innerHTML=`
<style>
 :host {
    --fillColor: var(--dark);
    --hoverFillColor: var(--blue);
    --hoverBackground: var(--grey);
    --height: 26px;
    --width: 26px;

    display: flex;
    justify-content: center;
    align-items: center;
    column-gap: 2px;

    height: var(--height);
    width: var(--width);

    background: transparent;
    fill: var(--fillColor);
    border-radius: 4px;

    box-sizing: border-box;
    transition background 0.15s ease-in-out;

    cursor: pointer;
}

${fe.tag} {
  height: 80%;
  width: 80%;

  border-radius: 2px;
  fill: inherit;

  transition fill 0.15s ease-in-out;
}

:host(:hover) {
  color: var(--hoverFillColor);
  fill: var(--hoverFillColor);
  background: var(--hoverBackground);
}

:host([disabled]) {
  color: var(--grey);
  fill: var(--grey);
  background: transparent;
}
</style>`;const yc=()=>No.content.cloneNode(!0),Es=class Es extends qt{constructor(){super();M(this,"iconElement");this.iconElement=fe.create(this.type),this.attachShadow({mode:"open"}).append(yc(),this.iconElement,nt.createElement({tag:"slot"}))}set type(e){this.iconElement.type=e}get type(){return this.getAttribute(Me.type)??oe.add}set disabled(e){if(e){this.setAttribute("disabled","");return}this.removeAttribute("disabled")}get disabled(){return this.hasAttribute("disabled")}static create(e,s,i=""){const r=document.createElement(Es.tag);return r.setAttribute(Me.type,e),r.setAttribute("title",i),r.addEventListener("click",o=>{r.disabled||s(o)}),r}connectedCallback(){this.updateIcon()}attributeChangedCallback(e,s,i){s!==i&&this.updateIcon()}updateIcon(){this.iconElement.type=this.type}};M(Es,"tag","bb-icon-button"),M(Es,"observedAttributes",[Me.type]);let Tt=Es;class vc extends CustomEvent{constructor(t){super("input-value-change",{detail:t})}}class bc extends CustomEvent{constructor(t){super("input",{detail:t})}}class wc extends CustomEvent{constructor(t){super("input-submit",{detail:t})}}const Mo=document.createElement("template");Mo.innerHTML=`
<style>
:host {
  --padding: 0.5rem 1rem;
  --minHeight: 60px;
  
  --fontSize: 1rem;
  --borderRadius: 2rem;
  --fontFamily: 'Poppins', serif;
  --fontWeight: 400;
  --color: var(--dark);
  --backgroundColor: var(--white);
  --hoverBackground: var(--grey);

  --closeRightPosition: 1rem; 

  position: relative;

  display: flex;
  flex-direction: column;

  height: min-content;
  min-height: var(--minHeight);
  padding: 10px;

  font-size: var(--fontSize);
  background: var(--backgroundColor);
  color: var(--color);
  border-bottom: 2px solid transparent;
  border-radius: 2px;

  transition: all 0.15s ease-in-out;
  box-sizing: border-box;
}

[part="message"] {
  color: var(--red);
  font-size: 0.7rem;
}

[part="input"] {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: var(--padding);
  
  font-family: var(--fontFamily);
  font-weight: var(--fontWeight);
  font-style: normal;
  font-size: inherit;

  color: var(--color);
  background: inherit;
  
  border: none;
  outline: none;

  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;

  box-sizing: border-box;
}

input[type="checkbox"] {
  accent-color: var(--blue);
  height: 20px; /* not needed */
  width: 20px; /* not needed */
}

label {
  color: var(--background);
  font-size: calc(var(--fontSize) * 0.75);

  cursor: default;
}

${Tt.tag} {
  --size: 18px;
  --hoverBackground: transparent;

  position: absolute;
  right: var(--closeRightPosition);
  top: 50%;
  transform: translateY(-50%);

  opacity: 0;
  transition: opacity 0.1s ease-in-out;
}

:host(:hover),
:host(:focus),
:host(:focus-visible) {
  border-bottom: solid 2px var(--blue);
  background: var(--hoverBackground);
}

:host(:hover) ${Tt.tag},
:host(:focus) ${Tt.tag},
:host(:focus-visible) ${Tt.tag} {
  opacity: 1;
}

:host([invalid]) {
  border-bottom: solid 2px var(--red);
}
</style>`;const xc=()=>Mo.content.cloneNode(!0);var Ut=(n=>(n.value="input-value",n.placeHolder="input-placeholder",n.type="type",n.label="input-label",n.invalid="invalid",n))(Ut||{});const Ds=class Ds extends qt{constructor(){super();M(this,"validatorFunction",null);M(this,"inputElement");M(this,"labelElement");M(this,"messageElement");M(this,"clearButton");this.inputElement=nt.createElement({tag:"input",part:"input"}),this.labelElement=nt.createElement({tag:"label",part:"label"}),this.messageElement=nt.createElement({tag:"span",part:"message"}),this.clearButton=Tt.create(oe.close,()=>{this.onValueChange("")}),this.attachShadow({mode:"closed"}).append(xc(),this.labelElement,this.inputElement,this.messageElement,this.clearButton)}get value(){return this.getAttribute(Ut.value)??""}set value(e){this.setAttribute(Ut.value,e)}get placeHolder(){return this.getAttribute(Ut.placeHolder)??""}set placeHolder(e){this.setAttribute(Ut.placeHolder,e)}get type(){return this.getAttribute(Ut.type)??""}set type(e){this.setAttribute(Ut.type,e)}get label(){return this.getAttribute(Ut.label)??""}set label(e){this.setAttribute(Ut.label,e)}get valid(){return this.validatorFunction?this.getAttribute(Ut.invalid)!="":!0}set validator(e){this.validatorFunction=e}get checked(){return this.inputElement.checked}static create(e="",s="",i="",r="text",o=()=>null){const a=document.createElement(Ds.tag);return a.value=e,a.placeHolder=s,a.type=r,a.label=i,a.validatorFunction=o,a}connectedCallback(){this.handleEvents(),this.updateInput()}attributeChangedCallback(e,s,i){s!==i&&this.updateInput()}validate(){if(this.validatorFunction){const e=this.validatorFunction(this.value);if(e){this.setAttribute(Ut.invalid,""),this.messageElement.textContent=e,this.messageElement.style.display="block";return}this.removeAttribute(Ut.invalid),this.messageElement.style.display="none"}}handleEvents(){this.inputElement.addEventListener("keydown",e=>{e.key==="Enter"&&(e.preventDefault(),this.dispatchEvent(new wc(this.inputElement.value)))}),this.inputElement.addEventListener("input",e=>{this.onValueChange(e.target.value)}),this.inputElement.addEventListener("focusout",()=>{this.validate()}),this.inputElement.addEventListener("change",()=>{this.validate(),this.dispatchEvent(new vc(this.value))})}onValueChange(e){this.value!==e&&(this.value=e,this.dispatchEvent(new bc(e)))}updateInput(){this.inputElement.value=this.value,this.inputElement.placeholder=this.placeHolder,this.inputElement.type=this.type,this.label?(this.labelElement.textContent=this.label,this.labelElement.style.display="block"):this.labelElement.style.display="none",(this.type=="number"||this.type=="checkbox")&&(this.clearButton.style.display="none"),this.type=="checkbox"&&(this.style.width="50px",this.style.alignItems="center",this.style.minHeight="80px",this.style.justifyContent="space-between",this.style.flex="0")}focus(){this.inputElement.focus()}};M(Ds,"tag","bb-input"),M(Ds,"observedAttributes",Object.values(Ut));let Ms=Ds;const Ro=document.createElement("template");Ro.innerHTML=`
<style>
:host {
  display: grid;
  grid-template-columns: min-content min-content minmax(0, 1fr) min-content min-content minmax(0, 1fr) min-content min-content;
  align-items: center;
  gap: 1rem;

  height: 60px;
  padding: 0 20px;

  background: var(--white);
  box-shadow: rgb(231, 235, 238) 0px -2px 0px 0px inset;

  box-sizing: border-box;
}

${Ms.tag} {
  --padding: 0;
  --minHeight: unset;
  --fontSize: 0.75rem;
  --backgroundColor: transparent;
  --hoverBackground: transparent;
  --closeRightPosition: 0;
  width: 100%;
  padding: 5px;
}

${Ms.tag} {
  --padding: 0 1rem;
}
</style>`;const Tc=()=>Ro.content.cloneNode(!0),Fo="15.0.4",Kr=(n,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:n}),to=(n,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:n}),Ti=(n,t)=>({startTime:t,type:"setValue",value:n}),Io=(n,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:n}),qo=(n,t,{startTime:e,target:s,timeConstant:i})=>s+(t-s)*Math.exp((e-n)/i),rs=n=>n.type==="exponentialRampToValue",gn=n=>n.type==="linearRampToValue",Ne=n=>rs(n)||gn(n),Li=n=>n.type==="setValue",Te=n=>n.type==="setValueCurve",_n=(n,t,e,s)=>{const i=n[t];return i===void 0?s:Ne(i)||Li(i)?i.value:Te(i)?i.values[i.values.length-1]:qo(e,_n(n,t-1,i.startTime,s),i)},eo=(n,t,e,s,i)=>e===void 0?[s.insertTime,i]:Ne(e)?[e.endTime,e.value]:Li(e)?[e.startTime,e.value]:Te(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,_n(n,t-1,e.startTime,i)],Si=n=>n.type==="cancelAndHold",ki=n=>n.type==="cancelScheduledValues",Oe=n=>Si(n)||ki(n)?n.cancelTime:rs(n)||gn(n)?n.endTime:n.startTime,so=(n,t,e,{endTime:s,value:i})=>e===i?i:0<e&&0<i||e<0&&i<0?e*(i/e)**((n-t)/(s-t)):0,no=(n,t,e,{endTime:s,value:i})=>e+(n-t)/(s-t)*(i-e),Sc=(n,t)=>{const e=Math.floor(t),s=Math.ceil(t);return e===s?n[e]:(1-(t-e))*n[e]+(1-(s-t))*n[s]},kc=(n,{duration:t,startTime:e,values:s})=>{const i=(n-e)/t*(s.length-1);return Sc(s,i)},hn=n=>n.type==="setTarget";class Cc{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=Oe(t);if(Si(t)||ki(t)){const s=this._automationEvents.findIndex(r=>ki(t)&&Te(r)?r.startTime+r.duration>=e:Oe(r)>=e),i=this._automationEvents[s];if(s!==-1&&(this._automationEvents=this._automationEvents.slice(0,s)),Si(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&Ne(i)){if(r!==void 0&&hn(r))throw new Error("The internal list is malformed.");const o=r===void 0?i.insertTime:Te(r)?r.startTime+r.duration:Oe(r),a=r===void 0?this._defaultValue:Te(r)?r.values[r.values.length-1]:r.value,c=rs(i)?so(e,o,a,i):no(e,o,a,i),h=rs(i)?Kr(c,e,this._currenTime):to(c,e,this._currenTime);this._automationEvents.push(h)}if(r!==void 0&&hn(r)&&this._automationEvents.push(Ti(this.getValue(e),e)),r!==void 0&&Te(r)&&r.startTime+r.duration>e){const o=e-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),h=o/(c-1)*a,l=r.values.slice(0,c);if(h<1)for(let u=1;u<c;u+=1){const p=h*u%1;l[u]=r.values[u-1]*(1-p)+r.values[u]*p}this._automationEvents[this._automationEvents.length-1]=Io(l,r.startTime,o)}}}else{const s=this._automationEvents.findIndex(o=>Oe(o)>e),i=s===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[s-1];if(i!==void 0&&Te(i)&&Oe(i)+i.duration>e)return!1;const r=rs(t)?Kr(t.value,t.endTime,this._currenTime):gn(t)?to(t.value,e,this._currenTime):t;if(s===-1)this._automationEvents.push(r);else{if(Te(t)&&e+t.duration>Oe(this._automationEvents[s]))return!1;this._automationEvents.splice(s,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(s=>Oe(s)>t);if(e>1){const s=this._automationEvents.slice(e-1),i=s[0];hn(i)&&s.unshift(Ti(_n(this._automationEvents,e-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=s}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>Oe(o)>t),s=this._automationEvents[e],i=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[i];if(r!==void 0&&hn(r)&&(s===void 0||!Ne(s)||s.insertTime>t))return qo(t,_n(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Li(r)&&(s===void 0||!Ne(s)))return r.value;if(r!==void 0&&Te(r)&&(s===void 0||!Ne(s)||r.startTime+r.duration>t))return t<r.startTime+r.duration?kc(t,r):r.values[r.values.length-1];if(r!==void 0&&Ne(r)&&(s===void 0||!Ne(s)))return r.value;if(s!==void 0&&rs(s)){const[o,a]=eo(this._automationEvents,i,r,s,this._defaultValue);return so(t,o,a,s)}if(s!==void 0&&gn(s)){const[o,a]=eo(this._automationEvents,i,r,s,this._defaultValue);return no(t,o,a,s)}return this._defaultValue}}const Ac=n=>({cancelTime:n,type:"cancelAndHold"}),Ec=n=>({cancelTime:n,type:"cancelScheduledValues"}),Dc=(n,t)=>({endTime:t,type:"exponentialRampToValue",value:n}),Oc=(n,t)=>({endTime:t,type:"linearRampToValue",value:n}),Nc=(n,t,e)=>({startTime:t,target:n,timeConstant:e,type:"setTarget"}),Mc=()=>new DOMException("","AbortError"),Rc=n=>(t,e,[s,i,r],o)=>{n(t[i],[e,s,r],a=>a[0]===e&&a[1]===s,o)},Fc=n=>(t,e,s)=>{const i=[];for(let r=0;r<s.numberOfInputs;r+=1)i.push(new Set);n.set(t,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},Ic=n=>(t,e)=>{n.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},ls=new WeakSet,Vo=new WeakMap,Wi=new WeakMap,Po=new WeakMap,zi=new WeakMap,$n=new WeakMap,Lo=new WeakMap,Ci=new WeakMap,Ai=new WeakMap,Ei=new WeakMap,Wo={construct(){return Wo}},qc=n=>{try{const t=new Proxy(n,Wo);new t}catch{return!1}return!0},io=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,ro=(n,t)=>{const e=[];let s=n.replace(/^[\s]+/,""),i=s.match(io);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),s=s.slice(i[0].length).replace(/^[\s]+/,""),i=s.match(io)}return[e.join(";"),s]},oo=n=>{if(n!==void 0&&!Array.isArray(n))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},ao=n=>{if(!qc(n))throw new TypeError("The given value for processorCtor should be a constructor.");if(n.prototype===null||typeof n.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},Vc=(n,t,e,s,i,r,o,a,c,h,l,u,p)=>{let f=0;return(d,m,g={credentials:"omit"})=>{const _=l.get(d);if(_!==void 0&&_.has(m))return Promise.resolve();const x=h.get(d);if(x!==void 0){const y=x.get(m);if(y!==void 0)return y}const T=r(d),C=T.audioWorklet===void 0?i(m).then(([y,b])=>{const[w,v]=ro(y,b),O=`${w};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${v}
})})(window,'_AWGS')`;return e(O)}).then(()=>{const y=p._AWGS.pop();if(y===void 0)throw new SyntaxError;s(T.currentTime,T.sampleRate,()=>y(class{},void 0,(b,w)=>{if(b.trim()==="")throw t();const v=Ai.get(T);if(v!==void 0){if(v.has(b))throw t();ao(w),oo(w.parameterDescriptors),v.set(b,w)}else ao(w),oo(w.parameterDescriptors),Ai.set(T,new Map([[b,w]]))},T.sampleRate,void 0,void 0))}):Promise.all([i(m),Promise.resolve(n(u,u))]).then(([[y,b],w])=>{const v=f+1;f=v;const[O,E]=ro(y,b),R=`${O};((AudioWorkletProcessor,registerProcessor)=>{${E}
})(${w?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${w?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${w?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${v}',class extends AudioWorkletProcessor{process(){return !1}})`,z=new Blob([R],{type:"application/javascript; charset=utf-8"}),q=URL.createObjectURL(z);return T.audioWorklet.addModule(q,g).then(()=>{if(a(T))return T;const V=o(T);return V.audioWorklet.addModule(q,g).then(()=>V)}).then(V=>{if(c===null)throw new SyntaxError;try{new c(V,`__sac${v}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(q))});return x===void 0?h.set(d,new Map([[m,C]])):x.set(m,C),C.then(()=>{const y=l.get(d);y===void 0?l.set(d,new Set([m])):y.add(m)}).finally(()=>{const y=h.get(d);y!==void 0&&y.delete(m)}),C}},ce=(n,t)=>{const e=n.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},Gn=(n,t)=>{const e=Array.from(n).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[s]=e;return n.delete(s),s},zo=(n,t,e,s)=>{const i=ce(n,t),r=Gn(i,o=>o[0]===e&&o[1]===s);return i.size===0&&n.delete(t),r},Ws=n=>ce(Lo,n),us=n=>{if(ls.has(n))throw new Error("The AudioNode is already stored.");ls.add(n),Ws(n).forEach(t=>t(!0))},Bo=n=>"port"in n,zs=n=>{if(!ls.has(n))throw new Error("The AudioNode is not stored.");ls.delete(n),Ws(n).forEach(t=>t(!1))},Di=(n,t)=>{!Bo(n)&&t.every(e=>e.size===0)&&zs(n)},Pc=(n,t,e,s,i,r,o,a,c,h,l,u,p)=>{const f=new WeakMap;return(d,m,g,_,x)=>{const{activeInputs:T,passiveInputs:C}=r(m),{outputs:y}=r(d),b=a(d),w=v=>{const O=c(m),E=c(d);if(v){const A=zo(C,d,g,_);n(T,d,A,!1),!x&&!u(d)&&e(E,O,g,_),p(m)&&us(m)}else{const A=s(T,d,g,_);t(C,_,A,!1),!x&&!u(d)&&i(E,O,g,_);const k=o(m);if(k===0)l(m)&&Di(m,T);else{const F=f.get(m);F!==void 0&&clearTimeout(F),f.set(m,setTimeout(()=>{l(m)&&Di(m,T)},k*1e3))}}};return h(y,[m,g,_],v=>v[0]===m&&v[1]===g&&v[2]===_,!0)?(b.add(w),l(d)?n(T,d,[g,_,w],!0):t(C,_,[d,g,w],!0),!0):!1}},Lc=n=>(t,e,[s,i,r],o)=>{const a=t.get(s);a===void 0?t.set(s,new Set([[i,e,r]])):n(a,[i,e,r],c=>c[0]===i&&c[1]===e,o)},Wc=n=>(t,e)=>{const s=n(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(s).connect(t.destination);const i=()=>{e.removeEventListener("ended",i),e.disconnect(s),s.disconnect()};e.addEventListener("ended",i)},zc=n=>(t,e)=>{n(t).add(e)},Bc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},jc=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=i(a),l={...Bc,...c},u=s(h,l),p=r(h)?t():null;super(a,!1,u,p),this._nativeAnalyserNode=u}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},Nt=(n,t)=>n.context===t,Uc=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Nt(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=n(o,h)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},yn=n=>{try{n.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},ye=()=>new DOMException("","IndexSizeError"),Bi=n=>{n.getChannelData=(t=>e=>{try{return t.call(n,e)}catch(s){throw s.code===12?ye():s}})(n.getChannelData)},$c={numberOfChannels:1},Gc=(n,t,e,s,i,r,o,a)=>{let c=null;return class jo{constructor(l){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:u,numberOfChannels:p,sampleRate:f}={...$c,...l};c===null&&(c=new i(1,1,44100));const d=s!==null&&t(r,r)?new s({length:u,numberOfChannels:p,sampleRate:f}):c.createBuffer(p,u,f);if(d.numberOfChannels===0)throw e();return typeof d.copyFromChannel!="function"?(o(d),Bi(d)):t(yn,()=>yn(d))||a(d),n.add(d),d}static[Symbol.hasInstance](l){return l!==null&&typeof l=="object"&&Object.getPrototypeOf(l)===jo.prototype||n.has(l)}}},Gt=-34028234663852886e22,Rt=34028234663852886e22,Se=n=>ls.has(n),Hc={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},Qc=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,l){const u=r(h),p={...Hc,...l},f=i(u,p),d=o(u),m=d?t():null;super(h,!1,f,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=p.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=e(this,d,f.playbackRate,Rt,Gt)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(h){if(this._nativeAudioBufferSourceNode.buffer=h,h!==null){if(this._isBufferSet)throw s();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(h){this._nativeAudioBufferSourceNode.loop=h}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(h){this._nativeAudioBufferSourceNode.loopEnd=h}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(h){this._nativeAudioBufferSourceNode.loopStart=h}get onended(){return this._onended}set onended(h){const l=typeof h=="function"?a(this,h):null;this._nativeAudioBufferSourceNode.onended=l;const u=this._nativeAudioBufferSourceNode.onended;this._onended=u!==null&&u===l?h:u}get playbackRate(){return this._playbackRate}start(h=0,l=0,u){if(this._nativeAudioBufferSourceNode.start(h,l,u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=u===void 0?[h,l]:[h,l,u]),this.context.state!=="closed"){us(this);const p=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",p),Se(this)&&zs(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",p)}}stop(h=0){this._nativeAudioBufferSourceNode.stop(h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=h)}},Zc=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(h,l)=>{let u=e(h);const p=Nt(u,l);if(!p){const f={buffer:u.buffer,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,loop:u.loop,loopEnd:u.loopEnd,loopStart:u.loopStart,playbackRate:u.playbackRate.value};u=t(l,f),o!==null&&u.start(...o),a!==null&&u.stop(a)}return r.set(l,u),p?await n(l,h.playbackRate,u.playbackRate):await s(l,h.playbackRate,u.playbackRate),await i(h,l,u),u};return{set start(h){o=h},set stop(h){a=h},render(h,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):c(h,l)}}},Xc=n=>"playbackRate"in n,Yc=n=>"frequency"in n&&"gain"in n,Jc=n=>"offset"in n,Kc=n=>!("frequency"in n)&&"gain"in n,th=n=>"detune"in n&&"frequency"in n&&!("gain"in n),eh=n=>"pan"in n,It=n=>ce(Vo,n),Bs=n=>ce(Po,n),Oi=(n,t)=>{const{activeInputs:e}=It(n);e.forEach(i=>i.forEach(([r])=>{t.includes(n)||Oi(r,[...t,n])}));const s=Xc(n)?[n.playbackRate]:Bo(n)?Array.from(n.parameters.values()):Yc(n)?[n.Q,n.detune,n.frequency,n.gain]:Jc(n)?[n.offset]:Kc(n)?[n.gain]:th(n)?[n.detune,n.frequency]:eh(n)?[n.pan]:[];for(const i of s){const r=Bs(i);r!==void 0&&r.activeInputs.forEach(([o])=>Oi(o,t))}Se(n)&&zs(n)},Uo=n=>{Oi(n.destination,[])},sh=n=>n===void 0||typeof n=="number"||typeof n=="string"&&(n==="balanced"||n==="interactive"||n==="playback"),nh=(n,t,e,s,i,r,o,a,c)=>class extends n{constructor(l={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let u;try{u=new c(l)}catch(d){throw d.code===12&&d.message==="sampleRate is not in range"?e():d}if(u===null)throw s();if(!sh(l.latencyHint))throw new TypeError(`The provided value '${l.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(l.sampleRate!==void 0&&u.sampleRate!==l.sampleRate)throw e();super(u,2);const{latencyHint:p}=l,{sampleRate:f}=u;if(this._baseLatency=typeof u.baseLatency=="number"?u.baseLatency:p==="balanced"?512/f:p==="interactive"||p===void 0?256/f:p==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(p*f/128)))*128/f,this._nativeAudioContext=u,c.name==="webkitAudioContext"?(this._nativeGainNode=u.createGain(),this._nativeOscillatorNode=u.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(u.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,u.state==="running"){this._state="suspended";const d=()=>{this._state==="suspended"&&(this._state=null),u.removeEventListener("statechange",d)};u.addEventListener("statechange",d)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),Uo(this)}))}createMediaElementSource(l){return new i(this,{mediaElement:l})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(l){return new o(this,{mediaStream:l})}createMediaStreamTrackSource(l){return new a(this,{mediaStreamTrack:l})}resume(){return this._state==="suspended"?new Promise((l,u)=>{const p=()=>{this._nativeAudioContext.removeEventListener("statechange",p),this._nativeAudioContext.state==="running"?l():this.resume().then(l,u)};this._nativeAudioContext.addEventListener("statechange",p)}):this._nativeAudioContext.resume().catch(l=>{throw l===void 0||l.code===15?t():l})}suspend(){return this._nativeAudioContext.suspend().catch(l=>{throw l===void 0?t():l})}},ih=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,l){const u=r(h),p=o(u),f=i(u,l,p),d=p?t(a):null;super(h,!1,f,d),this._isNodeOfNativeOfflineAudioContext=p,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(h){if(this._isNodeOfNativeOfflineAudioContext)throw s();if(h>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=h}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(h){if(this._isNodeOfNativeOfflineAudioContext)throw s();this._nativeAudioDestinationNode.channelCountMode=h}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},rh=n=>{const t=new WeakMap,e=async(s,i)=>{const r=i.destination;return t.set(i,r),await n(s,i,r),r};return{render(s,i){const r=t.get(i);return r!==void 0?Promise.resolve(r):e(s,i)}}},oh=(n,t,e,s,i,r,o,a)=>(c,h)=>{const l=h.listener,u=()=>{const y=new Float32Array(1),b=t(h,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),w=o(h);let v=!1,O=[0,0,-1,0,1,0],E=[0,0,0];const A=()=>{if(v)return;v=!0;const z=s(h,256,9,0);z.onaudioprocess=({inputBuffer:q})=>{const V=[r(q,y,0),r(q,y,1),r(q,y,2),r(q,y,3),r(q,y,4),r(q,y,5)];V.some((B,G)=>B!==O[G])&&(l.setOrientation(...V),O=V);const Z=[r(q,y,6),r(q,y,7),r(q,y,8)];Z.some((B,G)=>B!==E[G])&&(l.setPosition(...Z),E=Z)},b.connect(z)},k=z=>q=>{q!==O[z]&&(O[z]=q,l.setOrientation(...O))},F=z=>q=>{q!==E[z]&&(E[z]=q,l.setPosition(...E))},R=(z,q,V)=>{const Z=e(h,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:q});Z.connect(b,0,z),Z.start(),Object.defineProperty(Z.offset,"defaultValue",{get(){return q}});const B=n({context:c},w,Z.offset,Rt,Gt);return a(B,"value",G=>()=>G.call(B),G=>$=>{try{G.call(B,$)}catch(tt){if(tt.code!==9)throw tt}A(),w&&V($)}),B.cancelAndHoldAtTime=(G=>w?()=>{throw i()}:(...$)=>{const tt=G.apply(B,$);return A(),tt})(B.cancelAndHoldAtTime),B.cancelScheduledValues=(G=>w?()=>{throw i()}:(...$)=>{const tt=G.apply(B,$);return A(),tt})(B.cancelScheduledValues),B.exponentialRampToValueAtTime=(G=>w?()=>{throw i()}:(...$)=>{const tt=G.apply(B,$);return A(),tt})(B.exponentialRampToValueAtTime),B.linearRampToValueAtTime=(G=>w?()=>{throw i()}:(...$)=>{const tt=G.apply(B,$);return A(),tt})(B.linearRampToValueAtTime),B.setTargetAtTime=(G=>w?()=>{throw i()}:(...$)=>{const tt=G.apply(B,$);return A(),tt})(B.setTargetAtTime),B.setValueAtTime=(G=>w?()=>{throw i()}:(...$)=>{const tt=G.apply(B,$);return A(),tt})(B.setValueAtTime),B.setValueCurveAtTime=(G=>w?()=>{throw i()}:(...$)=>{const tt=G.apply(B,$);return A(),tt})(B.setValueCurveAtTime),B};return{forwardX:R(0,0,k(0)),forwardY:R(1,0,k(1)),forwardZ:R(2,-1,k(2)),positionX:R(6,0,F(0)),positionY:R(7,0,F(1)),positionZ:R(8,0,F(2)),upX:R(3,0,k(3)),upY:R(4,1,k(4)),upZ:R(5,0,k(5))}},{forwardX:p,forwardY:f,forwardZ:d,positionX:m,positionY:g,positionZ:_,upX:x,upY:T,upZ:C}=l.forwardX===void 0?u():l;return{get forwardX(){return p},get forwardY(){return f},get forwardZ(){return d},get positionX(){return m},get positionY(){return g},get positionZ(){return _},get upX(){return x},get upY(){return T},get upZ(){return C}}},vn=n=>"context"in n,js=n=>vn(n[0]),Ye=(n,t,e,s)=>{for(const i of n)if(e(i)){if(s)return!1;throw Error("The set contains at least one similar element.")}return n.add(t),!0},co=(n,t,[e,s],i)=>{Ye(n,[t,e,s],r=>r[0]===t&&r[1]===e,i)},ho=(n,[t,e,s],i)=>{const r=n.get(t);r===void 0?n.set(t,new Set([[e,s]])):Ye(r,[e,s],o=>o[0]===e,i)},gs=n=>"inputs"in n,bn=(n,t,e,s)=>{if(gs(t)){const i=t.inputs[s];return n.connect(i,e,0),[i,e,0]}return n.connect(t,e,s),[t,e,s]},$o=(n,t,e)=>{for(const s of n)if(s[0]===t&&s[1]===e)return n.delete(s),s;return null},ah=(n,t,e)=>Gn(n,s=>s[0]===t&&s[1]===e),Go=(n,t)=>{if(!Ws(n).delete(t))throw new Error("Missing the expected event listener.")},Ho=(n,t,e)=>{const s=ce(n,t),i=Gn(s,r=>r[0]===e);return s.size===0&&n.delete(t),i},wn=(n,t,e,s)=>{gs(t)?n.disconnect(t.inputs[s],e,0):n.disconnect(t,e,s)},rt=n=>ce(Wi,n),Rs=n=>ce(zi,n),He=n=>Ci.has(n),pn=n=>!ls.has(n),lo=(n,t)=>new Promise(e=>{if(t!==null)e(!0);else{const s=n.createScriptProcessor(256,1,1),i=n.createGain(),r=n.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=n.createBufferSource();a.buffer=r,a.loop=!0,a.connect(s).connect(n.destination),a.connect(i),a.disconnect(i),s.onaudioprocess=c=>{const h=c.inputBuffer.getChannelData(0);Array.prototype.some.call(h,l=>l===1)?e(!0):e(!1),a.stop(),s.onaudioprocess=null,a.disconnect(s),s.disconnect(n.destination)},a.start()}}),vi=(n,t)=>{const e=new Map;for(const s of n)for(const i of s){const r=e.get(i);e.set(i,r===void 0?1:r+1)}e.forEach((s,i)=>t(i,s))},xn=n=>"context"in n,ch=n=>{const t=new Map;n.connect=(e=>(s,i=0,r=0)=>{const o=xn(s)?e(s,i,r):e(s,i),a=t.get(s);return a===void 0?t.set(s,[{input:r,output:i}]):a.every(c=>c.input!==r||c.output!==i)&&a.push({input:r,output:i}),o})(n.connect.bind(n)),n.disconnect=(e=>(s,i,r)=>{if(e.apply(n),s===void 0)t.clear();else if(typeof s=="number")for(const[o,a]of t){const c=a.filter(h=>h.output!==s);c.length===0?t.delete(o):t.set(o,c)}else if(t.has(s))if(i===void 0)t.delete(s);else{const o=t.get(s);if(o!==void 0){const a=o.filter(c=>c.output!==i&&(c.input!==r||r===void 0));a.length===0?t.delete(s):t.set(s,a)}}for(const[o,a]of t)a.forEach(c=>{xn(o)?n.connect(o,c.output,c.input):n.connect(o,c.output)})})(n.disconnect)},hh=(n,t,e,s)=>{const{activeInputs:i,passiveInputs:r}=Bs(t),{outputs:o}=It(n),a=Ws(n),c=h=>{const l=rt(n),u=Rs(t);if(h){const p=Ho(r,n,e);co(i,n,p,!1),!s&&!He(n)&&l.connect(u,e)}else{const p=ah(i,n,e);ho(r,p,!1),!s&&!He(n)&&l.disconnect(u,e)}};return Ye(o,[t,e],h=>h[0]===t&&h[1]===e,!0)?(a.add(c),Se(n)?co(i,n,[e,c],!0):ho(r,[n,e,c],!0),!0):!1},lh=(n,t,e,s)=>{const{activeInputs:i,passiveInputs:r}=It(t),o=$o(i[s],n,e);return o===null?[zo(r,n,e,s)[2],!1]:[o[2],!0]},uh=(n,t,e)=>{const{activeInputs:s,passiveInputs:i}=Bs(t),r=$o(s,n,e);return r===null?[Ho(i,n,e)[1],!1]:[r[2],!0]},ji=(n,t,e,s,i)=>{const[r,o]=lh(n,e,s,i);if(r!==null&&(Go(n,r),o&&!t&&!He(n)&&wn(rt(n),rt(e),s,i)),Se(e)){const{activeInputs:a}=It(e);Di(e,a)}},Ui=(n,t,e,s)=>{const[i,r]=uh(n,e,s);i!==null&&(Go(n,i),r&&!t&&!He(n)&&rt(n).disconnect(Rs(e),s))},dh=(n,t)=>{const e=It(n),s=[];for(const i of e.outputs)js(i)?ji(n,t,...i):Ui(n,t,...i),s.push(i[0]);return e.outputs.clear(),s},ph=(n,t,e)=>{const s=It(n),i=[];for(const r of s.outputs)r[1]===e&&(js(r)?ji(n,t,...r):Ui(n,t,...r),i.push(r[0]),s.outputs.delete(r));return i},fh=(n,t,e,s,i)=>{const r=It(n);return Array.from(r.outputs).filter(o=>o[0]===e&&(s===void 0||o[1]===s)&&(i===void 0||o[2]===i)).map(o=>(js(o)?ji(n,t,...o):Ui(n,t,...o),r.outputs.delete(o),o[0]))},mh=(n,t,e,s,i,r,o,a,c,h,l,u,p,f,d,m)=>class extends h{constructor(_,x,T,C){super(T),this._context=_,this._nativeAudioNode=T;const y=l(_);u(y)&&e(lo,()=>lo(y,m))!==!0&&ch(T),Wi.set(this,T),Lo.set(this,new Set),_.state!=="closed"&&x&&us(this),n(this,C,T)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(_){this._nativeAudioNode.channelCount=_}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(_){this._nativeAudioNode.channelCountMode=_}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(_){this._nativeAudioNode.channelInterpretation=_}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(_,x=0,T=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw i();const C=l(this._context),y=d(C);if(p(_)||f(_))throw r();if(vn(_)){const v=rt(_);try{const E=bn(this._nativeAudioNode,v,x,T),A=pn(this);(y||A)&&this._nativeAudioNode.disconnect(...E),this.context.state!=="closed"&&!A&&pn(_)&&us(_)}catch(E){throw E.code===12?r():E}if(t(this,_,x,T,y)){const E=c([this],_);vi(E,s(y))}return _}const b=Rs(_);if(b.name==="playbackRate"&&b.maxValue===1024)throw o();try{this._nativeAudioNode.connect(b,x),(y||pn(this))&&this._nativeAudioNode.disconnect(b,x)}catch(v){throw v.code===12?r():v}if(hh(this,_,x,y)){const v=c([this],_);vi(v,s(y))}}disconnect(_,x,T){let C;const y=l(this._context),b=d(y);if(_===void 0)C=dh(this,b);else if(typeof _=="number"){if(_<0||_>=this.numberOfOutputs)throw i();C=ph(this,b,_)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||vn(_)&&T!==void 0&&(T<0||T>=_.numberOfInputs))throw i();if(C=fh(this,b,_,x,T),C.length===0)throw r()}for(const w of C){const v=c([this],w);vi(v,a)}}},gh=(n,t,e,s,i,r,o,a,c,h,l,u,p)=>(f,d,m,g=null,_=null)=>{const x=m.value,T=new Cc(x),C=d?s(T):null,y={get defaultValue(){return x},get maxValue(){return g===null?m.maxValue:g},get minValue(){return _===null?m.minValue:_},get value(){return m.value},set value(b){m.value=b,y.setValueAtTime(b,f.context.currentTime)},cancelAndHoldAtTime(b){if(typeof m.cancelAndHoldAtTime=="function")C===null&&T.flush(f.context.currentTime),T.add(i(b)),m.cancelAndHoldAtTime(b);else{const w=Array.from(T).pop();C===null&&T.flush(f.context.currentTime),T.add(i(b));const v=Array.from(T).pop();m.cancelScheduledValues(b),w!==v&&v!==void 0&&(v.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(v.value,v.endTime):v.type==="linearRampToValue"?m.linearRampToValueAtTime(v.value,v.endTime):v.type==="setValue"?m.setValueAtTime(v.value,v.startTime):v.type==="setValueCurve"&&m.setValueCurveAtTime(v.values,v.startTime,v.duration))}return y},cancelScheduledValues(b){return C===null&&T.flush(f.context.currentTime),T.add(r(b)),m.cancelScheduledValues(b),y},exponentialRampToValueAtTime(b,w){if(b===0)throw new RangeError;if(!Number.isFinite(w)||w<0)throw new RangeError;const v=f.context.currentTime;return C===null&&T.flush(v),Array.from(T).length===0&&(T.add(h(x,v)),m.setValueAtTime(x,v)),T.add(o(b,w)),m.exponentialRampToValueAtTime(b,w),y},linearRampToValueAtTime(b,w){const v=f.context.currentTime;return C===null&&T.flush(v),Array.from(T).length===0&&(T.add(h(x,v)),m.setValueAtTime(x,v)),T.add(a(b,w)),m.linearRampToValueAtTime(b,w),y},setTargetAtTime(b,w,v){return C===null&&T.flush(f.context.currentTime),T.add(c(b,w,v)),m.setTargetAtTime(b,w,v),y},setValueAtTime(b,w){return C===null&&T.flush(f.context.currentTime),T.add(h(b,w)),m.setValueAtTime(b,w),y},setValueCurveAtTime(b,w,v){const O=b instanceof Float32Array?b:new Float32Array(b);if(u!==null&&u.name==="webkitAudioContext"){const E=w+v,A=f.context.sampleRate,k=Math.ceil(w*A),F=Math.floor(E*A),R=F-k,z=new Float32Array(R);for(let V=0;V<R;V+=1){const Z=(O.length-1)/v*((k+V)/A-w),B=Math.floor(Z),G=Math.ceil(Z);z[V]=B===G?O[B]:(1-(Z-B))*O[B]+(1-(G-Z))*O[G]}C===null&&T.flush(f.context.currentTime),T.add(l(z,w,v)),m.setValueCurveAtTime(z,w,v);const q=F/A;q<E&&p(y,z[z.length-1],q),p(y,O[O.length-1],E)}else C===null&&T.flush(f.context.currentTime),T.add(l(O,w,v)),m.setValueCurveAtTime(O,w,v);return y}};return e.set(y,m),t.set(y,f),n(y,C),y},_h=n=>({replay(t){for(const e of n)if(e.type==="exponentialRampToValue"){const{endTime:s,value:i}=e;t.exponentialRampToValueAtTime(i,s)}else if(e.type==="linearRampToValue"){const{endTime:s,value:i}=e;t.linearRampToValueAtTime(i,s)}else if(e.type==="setTarget"){const{startTime:s,target:i,timeConstant:r}=e;t.setTargetAtTime(i,s,r)}else if(e.type==="setValue"){const{startTime:s,value:i}=e;t.setValueAtTime(i,s)}else if(e.type==="setValueCurve"){const{duration:s,startTime:i,values:r}=e;t.setValueCurveAtTime(r,i,s)}else throw new Error("Can't apply an unknown automation.")}});class Qo{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((s,i)=>t.call(e,s,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const yh={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},vh=(n,t,e,s,i,r,o,a,c,h,l,u,p,f)=>class extends t{constructor(m,g,_){var x;const T=a(m),C=c(T),y=l({...yh,..._});p(y);const b=Ai.get(T),w=b==null?void 0:b.get(g),v=C||T.state!=="closed"?T:(x=o(T))!==null&&x!==void 0?x:T,O=i(v,C?null:m.baseLatency,h,g,w,y),E=C?s(g,y,w):null;super(m,!0,O,E);const A=[];O.parameters.forEach((F,R)=>{const z=e(this,C,F);A.push([R,z])}),this._nativeAudioWorkletNode=O,this._onprocessorerror=null,this._parameters=new Qo(A),C&&n(T,this);const{activeInputs:k}=r(this);u(O,k)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const g=typeof m=="function"?f(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=g;const _=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=_!==null&&_===g?m:_}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Tn(n,t,e,s,i){if(typeof n.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),n.copyFromChannel(t[e],s,i);else{const r=n.getChannelData(s);if(t[e].byteLength===0)t[e]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const Zo=(n,t,e,s,i)=>{typeof n.copyToChannel=="function"?t[e].byteLength!==0&&n.copyToChannel(t[e],s,i):t[e].byteLength!==0&&n.getChannelData(s).set(t[e],i)},Sn=(n,t)=>{const e=[];for(let s=0;s<n;s+=1){const i=[],r=typeof t=="number"?t:t[s];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));e.push(i)}return e},bh=(n,t)=>{const e=ce(Ei,n),s=rt(t);return ce(e,s)},wh=async(n,t,e,s,i,r,o)=>{const a=t===null?Math.ceil(n.context.length/128)*128:t.length,c=s.channelCount*s.numberOfInputs,h=i.reduce((g,_)=>g+_,0),l=h===0?null:e.createBuffer(h,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const u=It(n),p=await bh(e,n),f=Sn(s.numberOfInputs,s.channelCount),d=Sn(s.numberOfOutputs,i),m=Array.from(n.parameters.keys()).reduce((g,_)=>({...g,[_]:new Float32Array(128)}),{});for(let g=0;g<a;g+=128){if(s.numberOfInputs>0&&t!==null)for(let _=0;_<s.numberOfInputs;_+=1)for(let x=0;x<s.channelCount;x+=1)Tn(t,f[_],x,x,g);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:_},x)=>{Tn(t,m,_,c+x,g)});for(let _=0;_<s.numberOfInputs;_+=1)for(let x=0;x<i[_];x+=1)d[_][x].byteLength===0&&(d[_][x]=new Float32Array(128));try{const _=f.map((T,C)=>u.activeInputs[C].size===0?[]:T),x=o(g/e.sampleRate,e.sampleRate,()=>p.process(_,d,m));if(l!==null)for(let T=0,C=0;T<s.numberOfOutputs;T+=1){for(let y=0;y<i[T];y+=1)Zo(l,d[T],y,C+y,g);C+=i[T]}if(!x)break}catch(_){n.dispatchEvent(new ErrorEvent("processorerror",{colno:_.colno,filename:_.filename,lineno:_.lineno,message:_.message}));break}}return l},xh=(n,t,e,s,i,r,o,a,c,h,l,u,p,f,d,m)=>(g,_,x)=>{const T=new WeakMap;let C=null;const y=async(b,w)=>{let v=l(b),O=null;const E=Nt(v,w),A=Array.isArray(_.outputChannelCount)?_.outputChannelCount:Array.from(_.outputChannelCount);if(u===null){const k=A.reduce((q,V)=>q+V,0),F=i(w,{channelCount:Math.max(1,k),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,k)}),R=[];for(let q=0;q<b.numberOfOutputs;q+=1)R.push(s(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:A[q]}));const z=o(w,{channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,gain:1});z.connect=t.bind(null,R),z.disconnect=c.bind(null,R),O=[F,R,z]}else E||(v=new u(w,g));if(T.set(w,O===null?v:O[2]),O!==null){if(C===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(p===null)throw new Error("Missing the native OfflineAudioContext constructor.");const V=b.channelCount*b.numberOfInputs,Z=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,B=V+Z;C=wh(b,B===0?null:await(async()=>{const $=new p(B,Math.ceil(b.context.length/128)*128,w.sampleRate),tt=[],Bt=[];for(let ot=0;ot<_.numberOfInputs;ot+=1)tt.push(o($,{channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,gain:1})),Bt.push(i($,{channelCount:_.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:_.channelCount}));const jt=await Promise.all(Array.from(b.parameters.values()).map(async ot=>{const Mt=r($,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:ot.value});return await f($,ot,Mt.offset),Mt})),X=s($,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,V+Z)});for(let ot=0;ot<_.numberOfInputs;ot+=1){tt[ot].connect(Bt[ot]);for(let Mt=0;Mt<_.channelCount;Mt+=1)Bt[ot].connect(X,Mt,ot*_.channelCount+Mt)}for(const[ot,Mt]of jt.entries())Mt.connect(X,0,V+ot),Mt.start(0);return X.connect($.destination),await Promise.all(tt.map(ot=>d(b,$,ot))),m($)})(),w,_,A,x,h)}const k=await C,F=e(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[R,z,q]=O;k!==null&&(F.buffer=k,F.start(0)),F.connect(R);for(let V=0,Z=0;V<b.numberOfOutputs;V+=1){const B=z[V];for(let G=0;G<A[V];G+=1)R.connect(B,Z+G,G);Z+=A[V]}return q}if(E)for(const[k,F]of b.parameters.entries())await n(w,F,v.parameters.get(k));else for(const[k,F]of b.parameters.entries())await f(w,F,v.parameters.get(k));return await d(b,w,v),v};return{render(b,w){a(w,b);const v=T.get(w);return v!==void 0?Promise.resolve(v):y(b,w)}}},Th=(n,t,e,s,i,r,o,a,c,h,l,u,p,f,d,m,g,_,x,T)=>class extends d{constructor(y,b){super(y,b),this._nativeContext=y,this._audioWorklet=n===void 0?void 0:{addModule:(w,v)=>n(this,w,v)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(y,b,w){return new e({length:b,numberOfChannels:y,sampleRate:w})}createBufferSource(){return new s(this)}createChannelMerger(y=6){return new r(this,{numberOfInputs:y})}createChannelSplitter(y=6){return new o(this,{numberOfOutputs:y})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(y=1){return new l(this,{maxDelayTime:y})}createDynamicsCompressor(){return new u(this)}createGain(){return new p(this)}createIIRFilter(y,b){return new f(this,{feedback:b,feedforward:y})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(y,b,w={disableNormalization:!1}){return new _(this,{...w,imag:b,real:y})}createStereoPanner(){return new x(this)}createWaveShaper(){return new T(this)}decodeAudioData(y,b,w){return h(this._nativeContext,y).then(v=>(typeof b=="function"&&b(v),v),v=>{throw typeof w=="function"&&w(v),v})}},Sh={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},kh=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,l){const u=r(h),p={...Sh,...l},f=i(u,p),d=o(u),m=d?e():null;super(h,!1,f,m),this._Q=t(this,d,f.Q,Rt,Gt),this._detune=t(this,d,f.detune,1200*Math.log2(Rt),-1200*Math.log2(Rt)),this._frequency=t(this,d,f.frequency,h.sampleRate/2,0),this._gain=t(this,d,f.gain,40*Math.log10(Rt),Gt),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(h){this._nativeBiquadFilterNode.type=h}getFrequencyResponse(h,l,u){try{this._nativeBiquadFilterNode.getFrequencyResponse(h,l,u)}catch(p){throw p.code===11?s():p}if(h.length!==l.length||l.length!==u.length)throw s()}},Ch=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const l=Nt(h,c);if(!l){const u={Q:h.Q.value,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,detune:h.detune.value,frequency:h.frequency.value,gain:h.gain.value,type:h.type};h=t(c,u)}return r.set(c,h),l?(await n(c,a.Q,h.Q),await n(c,a.detune,h.detune),await n(c,a.frequency,h.frequency),await n(c,a.gain,h.gain)):(await s(c,a.Q,h.Q),await s(c,a.detune,h.detune),await s(c,a.frequency,h.frequency),await s(c,a.gain,h.gain)),await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},Ah=(n,t)=>(e,s)=>{const i=t.get(e);if(i!==void 0)return i;const r=n.get(e);if(r!==void 0)return r;try{const o=s();return o instanceof Promise?(n.set(e,o),o.catch(()=>!1).then(a=>(n.delete(e),t.set(e,a),a))):(t.set(e,o),o)}catch{return t.set(e,!1),!1}},Eh={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},Dh=(n,t,e,s,i)=>class extends n{constructor(o,a){const c=s(o),h={...Eh,...a},l=e(c,h),u=i(c)?t():null;super(o,!1,l,u)}},Oh=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Nt(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=n(o,h)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Nh={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},Mh=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=s(a),l=r({...Nh,...c}),u=e(h,l),p=i(h)?t():null;super(a,!1,u,p)}},Rh=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Nt(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=n(o,h)}return s.set(o,a),await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Fh=n=>(t,e,s)=>n(e,t,s),Ih=n=>(t,e,s=0,i=0)=>{const r=t[s];if(r===void 0)throw n();return xn(e)?r.connect(e,0,i):r.connect(e,0)},qh=n=>(t,e)=>{const s=n(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return s.buffer=i,s.loop=!0,s.connect(e),s.start(),()=>{s.stop(),s.disconnect(e)}},Vh={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},Ph=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const l=i(c),u={...Vh,...h},p=s(l,u),f=r(l),d=f?e():null;super(c,!1,p,d),this._constantSourceNodeRenderer=d,this._nativeConstantSourceNode=p,this._offset=t(this,f,p.offset,Rt,Gt),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const h=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=h;const l=this._nativeConstantSourceNode.onended;this._onended=l!==null&&l===h?c:l}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){us(this);const h=()=>{this._nativeConstantSourceNode.removeEventListener("ended",h),Se(this)&&zs(this)};this._nativeConstantSourceNode.addEventListener("ended",h)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},Lh=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(h,l)=>{let u=e(h);const p=Nt(u,l);if(!p){const f={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,offset:u.offset.value};u=t(l,f),o!==null&&u.start(o),a!==null&&u.stop(a)}return r.set(l,u),p?await n(l,h.offset,u.offset):await s(l,h.offset,u.offset),await i(h,l,u),u};return{set start(h){o=h},set stop(h){a=h},render(h,l){const u=r.get(l);return u!==void 0?Promise.resolve(u):c(h,l)}}},Wh=n=>t=>(n[0]=t,n[0]),zh={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Bh=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=s(a),l={...zh,...c},u=e(h,l),f=i(h)?t():null;super(a,!1,u,f),this._isBufferNullified=!1,this._nativeConvolverNode=u,l.buffer!==null&&r(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},jh=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Nt(a,o)){const h={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=n(o,h)}return s.set(o,a),gs(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Uh=(n,t)=>(e,s,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,s,i)}catch(r){throw r.name==="SyntaxError"?n():r}},$h=()=>new DOMException("","DataCloneError"),uo=n=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(s=>{const i=()=>{e.onmessage=null,t.close(),e.close(),s()};e.onmessage=()=>i();try{t.postMessage(n,[n])}catch{}finally{i()}})},Gh=(n,t,e,s,i,r,o,a,c,h,l)=>(u,p)=>{const f=o(u)?u:r(u);if(i.has(p)){const d=e();return Promise.reject(d)}try{i.add(p)}catch{}return t(c,()=>c(f))?f.decodeAudioData(p).then(d=>(uo(p).catch(()=>{}),t(a,()=>a(d))||l(d),n.add(d),d)):new Promise((d,m)=>{const g=async()=>{try{await uo(p)}catch{}},_=x=>{m(x),g()};try{f.decodeAudioData(p,x=>{typeof x.copyFromChannel!="function"&&(h(x),Bi(x)),n.add(x),g().then(()=>d(x))},x=>{_(x===null?s():x)})}catch(x){_(x)}})},Hh=(n,t,e,s,i,r,o,a)=>(c,h)=>{const l=t.get(c);if(l===void 0)throw new Error("Missing the expected cycle count.");const u=r(c.context),p=a(u);if(l===h){if(t.delete(c),!p&&o(c)){const f=s(c),{outputs:d}=e(c);for(const m of d)if(js(m)){const g=s(m[0]);n(f,g,m[1],m[2])}else{const g=i(m[0]);f.connect(g,m[1])}}}else t.set(c,l-h)},Qh={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},Zh=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const l=i(c),u={...Qh,...h},p=s(l,u),f=r(l),d=f?e(u.maxDelayTime):null;super(c,!1,p,d),this._delayTime=t(this,f,p.delayTime),o(this,u.maxDelayTime)}get delayTime(){return this._delayTime}},Xh=(n,t,e,s,i)=>r=>{const o=new WeakMap,a=async(c,h)=>{let l=e(c);const u=Nt(l,h);if(!u){const p={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,delayTime:l.delayTime.value,maxDelayTime:r};l=t(h,p)}return o.set(h,l),u?await n(h,c.delayTime,l.delayTime):await s(h,c.delayTime,l.delayTime),await i(c,h,l),l};return{render(c,h){const l=o.get(h);return l!==void 0?Promise.resolve(l):a(c,h)}}},Yh=n=>(t,e,s,i)=>n(t[i],r=>r[0]===e&&r[1]===s),Jh=n=>(t,e)=>{n(t).delete(e)},Kh=n=>"delayTime"in n,tl=(n,t,e)=>function s(i,r){const o=vn(r)?r:e(n,r);if(Kh(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(c=>s([...i,o],c[0])).reduce((c,h)=>c.concat(h),[])},ln=(n,t,e)=>{const s=t[e];if(s===void 0)throw n();return s},el=n=>(t,e=void 0,s=void 0,i=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?ln(n,t,e).disconnect():xn(e)?s===void 0?t.forEach(r=>r.disconnect(e)):i===void 0?ln(n,t,s).disconnect(e,0):ln(n,t,s).disconnect(e,0,i):s===void 0?t.forEach(r=>r.disconnect(e)):ln(n,t,s).disconnect(e,0),sl={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},nl=(n,t,e,s,i,r,o,a)=>class extends n{constructor(h,l){const u=r(h),p={...sl,...l},f=s(u,p),d=o(u),m=d?e():null;super(h,!1,f,m),this._attack=t(this,d,f.attack),this._knee=t(this,d,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=t(this,d,f.ratio),this._release=t(this,d,f.release),this._threshold=t(this,d,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(h){const l=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=h,h>2)throw this._nativeDynamicsCompressorNode.channelCount=l,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(h){const l=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=h,h==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=l,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},il=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const l=Nt(h,c);if(!l){const u={attack:h.attack.value,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,knee:h.knee.value,ratio:h.ratio.value,release:h.release.value,threshold:h.threshold.value};h=t(c,u)}return r.set(c,h),l?(await n(c,a.attack,h.attack),await n(c,a.knee,h.knee),await n(c,a.ratio,h.ratio),await n(c,a.release,h.release),await n(c,a.threshold,h.threshold)):(await s(c,a.attack,h.attack),await s(c,a.knee,h.knee),await s(c,a.ratio,h.ratio),await s(c,a.release,h.release),await s(c,a.threshold,h.threshold)),await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},rl=()=>new DOMException("","EncodingError"),ol=n=>t=>new Promise((e,s)=>{if(n===null){s(new SyntaxError);return}const i=n.document.head;if(i===null)s(new SyntaxError);else{const r=n.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),c=n.onerror,h=()=>{n.onerror=c,URL.revokeObjectURL(a)};n.onerror=(l,u,p,f,d)=>{if(u===a||u===n.location.href&&p===1&&f===1)return h(),s(d),!1;if(c!==null)return c(l,u,p,f,d)},r.onerror=()=>{h(),s(new SyntaxError)},r.onload=()=>{h(),e()},r.src=a,r.type="module",i.appendChild(r)}}),al=n=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,s,i){if(s!==null){let r=this._listeners.get(s);r===void 0&&(r=n(this,s),typeof s=="function"&&this._listeners.set(s,r)),this._nativeEventTarget.addEventListener(e,r,i)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,s,i){const r=s===null?void 0:this._listeners.get(s);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,i)}},cl=n=>(t,e,s)=>{Object.defineProperties(n,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return s()}finally{n!==null&&(delete n.currentFrame,delete n.currentTime)}},hl=n=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw n()},ll={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},ul=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=i(a),l={...ll,...c},u=s(h,l),p=r(h),f=p?e():null;super(a,!1,u,f),this._gain=t(this,p,u.gain,Rt,Gt)}get gain(){return this._gain}},dl=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const l=Nt(h,c);if(!l){const u={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,gain:h.gain.value};h=t(c,u)}return r.set(c,h),l?await n(c,a.gain,h.gain):await s(c,a.gain,h.gain),await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},pl=(n,t)=>e=>t(n,e),fl=n=>t=>{const e=n(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},ml=n=>t=>{var e;return(e=n.get(t))!==null&&e!==void 0?e:0},gl=n=>t=>{const e=n(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},_l=n=>t=>n.get(t),xt=()=>new DOMException("","InvalidStateError"),yl=n=>t=>{const e=n.get(t);if(e===void 0)throw xt();return e},vl=(n,t)=>e=>{let s=n.get(e);if(s!==void 0)return s;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return s=new t(1,1,44100),n.set(e,s),s},bl=n=>t=>{const e=n.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},Hn=()=>new DOMException("","InvalidAccessError"),wl=n=>{n.getFrequencyResponse=(t=>(e,s,i)=>{if(e.length!==s.length||s.length!==i.length)throw Hn();return t.call(n,e,s,i)})(n.getFrequencyResponse)},xl={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},Tl=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=s(a),l=i(h),u={...xl,...c},p=t(h,l?null:a.baseLatency,u),f=l?e(u.feedback,u.feedforward):null;super(a,!1,p,f),wl(p),this._nativeIIRFilterNode=p,r(this,1)}getFrequencyResponse(a,c,h){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,h)}},Xo=(n,t,e,s,i,r,o,a,c,h,l)=>{const u=h.length;let p=a;for(let f=0;f<u;f+=1){let d=e[0]*h[f];for(let m=1;m<i;m+=1){const g=p-m&c-1;d+=e[m]*r[g],d-=n[m]*o[g]}for(let m=i;m<s;m+=1)d+=e[m]*r[p-m&c-1];for(let m=i;m<t;m+=1)d-=n[m]*o[p-m&c-1];r[p]=h[f],o[p]=d,p=p+1&c-1,l[f]=d}return p},Sl=(n,t,e,s)=>{const i=e instanceof Float64Array?e:new Float64Array(e),r=s instanceof Float64Array?s:new Float64Array(s),o=i.length,a=r.length,c=Math.min(o,a);if(i[0]!==1){for(let d=0;d<o;d+=1)r[d]/=i[0];for(let d=1;d<a;d+=1)i[d]/=i[0]}const h=32,l=new Float32Array(h),u=new Float32Array(h),p=t.createBuffer(n.numberOfChannels,n.length,n.sampleRate),f=n.numberOfChannels;for(let d=0;d<f;d+=1){const m=n.getChannelData(d),g=p.getChannelData(d);l.fill(0),u.fill(0),Xo(i,o,r,a,c,l,u,0,h,m,g)}return p},kl=(n,t,e,s,i)=>(r,o)=>{const a=new WeakMap;let c=null;const h=async(l,u)=>{let p=null,f=t(l);const d=Nt(f,u);if(u.createIIRFilter===void 0?p=n(u,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(f=u.createIIRFilter(o,r)),a.set(u,p===null?f:p),p!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const g=new e(l.context.destination.channelCount,l.context.length,u.sampleRate);c=(async()=>{await s(l,g,g.destination);const _=await i(g);return Sl(_,u,r,o)})()}const m=await c;return p.buffer=m,p.start(0),p}return await s(l,u,f),f};return{render(l,u){const p=a.get(u);return p!==void 0?Promise.resolve(p):h(l,u)}}},Cl=(n,t,e,s,i,r)=>o=>(a,c)=>{const h=n.get(a);if(h===void 0){if(!o&&r(a)){const l=s(a),{outputs:u}=e(a);for(const p of u)if(js(p)){const f=s(p[0]);t(l,f,p[1],p[2])}else{const f=i(p[0]);l.disconnect(f,p[1])}}n.set(a,c)}else n.set(a,h+c)},Al=(n,t)=>e=>{const s=n.get(e);return t(s)||t(e)},El=(n,t)=>e=>n.has(e)||t(e),Dl=(n,t)=>e=>n.has(e)||t(e),Ol=(n,t)=>e=>{const s=n.get(e);return t(s)||t(e)},Nl=n=>t=>n!==null&&t instanceof n,Ml=n=>t=>n!==null&&typeof n.AudioNode=="function"&&t instanceof n.AudioNode,Rl=n=>t=>n!==null&&typeof n.AudioParam=="function"&&t instanceof n.AudioParam,Fl=(n,t)=>e=>n(e)||t(e),Il=n=>t=>n!==null&&t instanceof n,ql=n=>n!==null&&n.isSecureContext,Vl=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r),c=t(a,o);if(s(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},Pl={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},Ll=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r);if(s(a))throw new TypeError;const c={...Pl,...o},h=t(a,c);super(r,!1,h,null),this._nativeMediaStreamAudioDestinationNode=h}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},Wl=(n,t,e,s)=>class extends n{constructor(r,o){const a=e(r),c=t(a,o);if(s(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},zl=(n,t,e)=>class extends n{constructor(i,r){const o=e(i),a=t(o,r);super(i,!0,a,null)}},Bl=(n,t,e,s,i,r)=>class extends e{constructor(a,c){super(a),this._nativeContext=a,$n.set(this,a),s(a)&&i.set(a,new Set),this._destination=new n(this,c),this._listener=t(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const h=this._nativeContext.onstatechange;this._onstatechange=h!==null&&h===c?a:h}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Fs=n=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=n.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},jl=(n,t)=>(e,s,i)=>{const r=new Set;return e.connect=(o=>(a,c=0,h=0)=>{const l=r.size===0;if(t(a))return o.call(e,a,c,h),n(r,[a,c,h],u=>u[0]===a&&u[1]===c&&u[2]===h,!0),l&&s(),a;o.call(e,a,c),n(r,[a,c],u=>u[0]===a&&u[1]===c,!0),l&&s()})(e.connect),e.disconnect=(o=>(a,c,h)=>{const l=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const p of r)p[1]===a&&r.delete(p)}else{t(a)?o.call(e,a,c,h):o.call(e,a,c);for(const p of r)p[0]===a&&(c===void 0||p[1]===c)&&(h===void 0||p[2]===h)&&r.delete(p)}const u=r.size===0;l&&u&&i()})(e.disconnect),e},at=(n,t,e)=>{const s=t[e];s!==void 0&&s!==n[e]&&(n[e]=s)},yt=(n,t)=>{at(n,t,"channelCount"),at(n,t,"channelCountMode"),at(n,t,"channelInterpretation")},po=n=>typeof n.getFloatTimeDomainData=="function",Ul=n=>{n.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);n.getByteTimeDomainData(e);const s=Math.max(e.length,n.fftSize);for(let i=0;i<s;i+=1)t[i]=(e[i]-128)*.0078125;return t}},$l=(n,t)=>(e,s)=>{const i=e.createAnalyser();if(yt(i,s),!(s.maxDecibels>s.minDecibels))throw t();return at(i,s,"fftSize"),at(i,s,"maxDecibels"),at(i,s,"minDecibels"),at(i,s,"smoothingTimeConstant"),n(po,()=>po(i))||Ul(i),i},Gl=n=>n===null?null:n.hasOwnProperty("AudioBuffer")?n.AudioBuffer:null,ft=(n,t,e)=>{const s=t[e];s!==void 0&&s!==n[e].value&&(n[e].value=s)},Hl=n=>{n.start=(t=>{let e=!1;return(s=0,i=0,r)=>{if(e)throw xt();t.call(n,s,i,r),e=!0}})(n.start)},$i=n=>{n.start=(t=>(e=0,s=0,i)=>{if(typeof i=="number"&&i<0||s<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(n,e,s,i)})(n.start)},Gi=n=>{n.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(n,e)})(n.stop)},Ql=(n,t,e,s,i,r,o,a,c,h,l)=>(u,p)=>{const f=u.createBufferSource();return yt(f,p),ft(f,p,"playbackRate"),at(f,p,"buffer"),at(f,p,"loop"),at(f,p,"loopEnd"),at(f,p,"loopStart"),t(e,()=>e(u))||Hl(f),t(s,()=>s(u))||c(f),t(i,()=>i(u))||h(f,u),t(r,()=>r(u))||$i(f),t(o,()=>o(u))||l(f,u),t(a,()=>a(u))||Gi(f),n(u,f),f},Zl=n=>n===null?null:n.hasOwnProperty("AudioContext")?n.AudioContext:n.hasOwnProperty("webkitAudioContext")?n.webkitAudioContext:null,Xl=(n,t)=>(e,s,i)=>{const r=e.destination;if(r.channelCount!==s)try{r.channelCount=s}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:s});const o=n(e,{channelCount:s,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(h){if(c>r.maxChannelCount)throw h}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},Yl=n=>n===null?null:n.hasOwnProperty("AudioWorkletNode")?n.AudioWorkletNode:null,Jl=n=>{const{port1:t}=new MessageChannel;try{t.postMessage(n)}finally{t.close()}},Kl=(n,t,e,s,i)=>(r,o,a,c,h,l)=>{if(a!==null)try{const u=new a(r,c,l),p=new Map;let f=null;if(Object.defineProperties(u,{channelCount:{get:()=>l.channelCount,set:()=>{throw n()}},channelCountMode:{get:()=>"explicit",set:()=>{throw n()}},onprocessorerror:{get:()=>f,set:d=>{typeof f=="function"&&u.removeEventListener("processorerror",f),f=typeof d=="function"?d:null,typeof f=="function"&&u.addEventListener("processorerror",f)}}}),u.addEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const g=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(g!==null){const _=p.get(m[1]);_!==void 0?m[1]=_:(m[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),g(x)):g(new ErrorEvent(m[0],{...x}))},p.set(g,m[1]))}}return d.call(u,"error",m[1],m[2]),d.call(u,...m)})(u.addEventListener),u.removeEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const g=p.get(m[1]);g!==void 0&&(p.delete(m[1]),m[1]=g)}return d.call(u,"error",m[1],m[2]),d.call(u,m[0],m[1],m[2])})(u.removeEventListener),l.numberOfOutputs!==0){const d=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return u.connect(d).connect(r.destination),i(u,()=>d.disconnect(),()=>d.connect(r.destination))}return u}catch(u){throw u.code===11?s():u}if(h===void 0)throw s();return Jl(l),t(r,o,h,l)},Yo=(n,t)=>n===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(n*t))))),tu=n=>new Promise((t,e)=>{const{port1:s,port2:i}=new MessageChannel;s.onmessage=({data:r})=>{s.close(),i.close(),t(r)},s.onmessageerror=({data:r})=>{s.close(),i.close(),e(r)},i.postMessage(n)}),eu=async(n,t)=>{const e=await tu(t);return new n(e)},su=(n,t,e,s)=>{let i=Ei.get(n);i===void 0&&(i=new WeakMap,Ei.set(n,i));const r=eu(e,s);return i.set(t,r),r},nu=(n,t,e,s,i,r,o,a,c,h,l,u,p)=>(f,d,m,g)=>{if(g.numberOfInputs===0&&g.numberOfOutputs===0)throw c();const _=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(_.some(N=>N<1))throw c();if(_.length!==g.numberOfOutputs)throw t();if(g.channelCountMode!=="explicit")throw c();const x=g.channelCount*g.numberOfInputs,T=_.reduce((N,U)=>N+U,0),C=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(x+C>6||T>6)throw c();const y=new MessageChannel,b=[],w=[];for(let N=0;N<g.numberOfInputs;N+=1)b.push(o(f,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),w.push(i(f,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const v=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:N,maxValue:U,minValue:_t,name:ct}of m.parameterDescriptors){const J=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:g.parameterData[ct]!==void 0?g.parameterData[ct]:N===void 0?0:N});Object.defineProperties(J.offset,{defaultValue:{get:()=>N===void 0?0:N},maxValue:{get:()=>U===void 0?Rt:U},minValue:{get:()=>_t===void 0?Gt:_t}}),v.push(J)}const O=s(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+C)}),E=Yo(d,f.sampleRate),A=a(f,E,x+C,Math.max(1,T)),k=i(f,{channelCount:Math.max(1,T),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,T)}),F=[];for(let N=0;N<g.numberOfOutputs;N+=1)F.push(s(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:_[N]}));for(let N=0;N<g.numberOfInputs;N+=1){b[N].connect(w[N]);for(let U=0;U<g.channelCount;U+=1)w[N].connect(O,U,N*g.channelCount+U)}const R=new Qo(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:N},U)=>{const _t=v[U];return _t.connect(O,0,x+U),_t.start(0),[N,_t.offset]}));O.connect(A);let z=g.channelInterpretation,q=null;const V=g.numberOfOutputs===0?[A]:F,Z={get bufferSize(){return E},get channelCount(){return g.channelCount},set channelCount(N){throw e()},get channelCountMode(){return g.channelCountMode},set channelCountMode(N){throw e()},get channelInterpretation(){return z},set channelInterpretation(N){for(const U of b)U.channelInterpretation=N;z=N},get context(){return A.context},get inputs(){return b},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return q},set onprocessorerror(N){typeof q=="function"&&Z.removeEventListener("processorerror",q),q=typeof N=="function"?N:null,typeof q=="function"&&Z.addEventListener("processorerror",q)},get parameters(){return R},get port(){return y.port2},addEventListener(...N){return A.addEventListener(N[0],N[1],N[2])},connect:n.bind(null,V),disconnect:h.bind(null,V),dispatchEvent(...N){return A.dispatchEvent(N[0])},removeEventListener(...N){return A.removeEventListener(N[0],N[1],N[2])}},B=new Map;y.port1.addEventListener=(N=>(...U)=>{if(U[0]==="message"){const _t=typeof U[1]=="function"?U[1]:typeof U[1]=="object"&&U[1]!==null&&typeof U[1].handleEvent=="function"?U[1].handleEvent:null;if(_t!==null){const ct=B.get(U[1]);ct!==void 0?U[1]=ct:(U[1]=J=>{l(f.currentTime,f.sampleRate,()=>_t(J))},B.set(_t,U[1]))}}return N.call(y.port1,U[0],U[1],U[2])})(y.port1.addEventListener),y.port1.removeEventListener=(N=>(...U)=>{if(U[0]==="message"){const _t=B.get(U[1]);_t!==void 0&&(B.delete(U[1]),U[1]=_t)}return N.call(y.port1,U[0],U[1],U[2])})(y.port1.removeEventListener);let G=null;Object.defineProperty(y.port1,"onmessage",{get:()=>G,set:N=>{typeof G=="function"&&y.port1.removeEventListener("message",G),G=typeof N=="function"?N:null,typeof G=="function"&&(y.port1.addEventListener("message",G),y.port1.start())}}),m.prototype.port=y.port1;let $=null;su(f,Z,m,g).then(N=>$=N);const Bt=Sn(g.numberOfInputs,g.channelCount),jt=Sn(g.numberOfOutputs,_),X=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((N,{name:U})=>({...N,[U]:new Float32Array(128)}),{});let ot=!0;const Mt=()=>{g.numberOfOutputs>0&&A.disconnect(k);for(let N=0,U=0;N<g.numberOfOutputs;N+=1){const _t=F[N];for(let ct=0;ct<_[N];ct+=1)k.disconnect(_t,U+ct,ct);U+=_[N]}},L=new Map;A.onaudioprocess=({inputBuffer:N,outputBuffer:U})=>{if($!==null){const _t=u(Z);for(let ct=0;ct<E;ct+=128){for(let J=0;J<g.numberOfInputs;J+=1)for(let dt=0;dt<g.channelCount;dt+=1)Tn(N,Bt[J],dt,dt,ct);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:J},dt)=>{Tn(N,X,J,x+dt,ct)});for(let J=0;J<g.numberOfInputs;J+=1)for(let dt=0;dt<_[J];dt+=1)jt[J][dt].byteLength===0&&(jt[J][dt]=new Float32Array(128));try{const J=Bt.map((Yt,De)=>{if(_t[De].size>0)return L.set(De,E/128),Yt;const yi=L.get(De);return yi===void 0?[]:(Yt.every(oc=>oc.every(ac=>ac===0))&&(yi===1?L.delete(De):L.set(De,yi-1)),Yt)});ot=l(f.currentTime+ct/f.sampleRate,f.sampleRate,()=>$.process(J,jt,X));for(let Yt=0,De=0;Yt<g.numberOfOutputs;Yt+=1){for(let ks=0;ks<_[Yt];ks+=1)Zo(U,jt[Yt],ks,De+ks,ct);De+=_[Yt]}}catch(J){ot=!1,Z.dispatchEvent(new ErrorEvent("processorerror",{colno:J.colno,filename:J.filename,lineno:J.lineno,message:J.message}))}if(!ot){for(let J=0;J<g.numberOfInputs;J+=1){b[J].disconnect(w[J]);for(let dt=0;dt<g.channelCount;dt+=1)w[ct].disconnect(O,dt,J*g.channelCount+dt)}if(m.parameterDescriptors!==void 0){const J=m.parameterDescriptors.length;for(let dt=0;dt<J;dt+=1){const Yt=v[dt];Yt.disconnect(O,0,x+dt),Yt.stop()}}O.disconnect(A),A.onaudioprocess=null,Be?Mt():ss();break}}}};let Be=!1;const je=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),es=()=>A.connect(je).connect(f.destination),ss=()=>{A.disconnect(je),je.disconnect()},ic=()=>{if(ot){ss(),g.numberOfOutputs>0&&A.connect(k);for(let N=0,U=0;N<g.numberOfOutputs;N+=1){const _t=F[N];for(let ct=0;ct<_[N];ct+=1)k.connect(_t,U+ct,ct);U+=_[N]}}Be=!0},rc=()=>{ot&&(es(),Mt()),Be=!1};return es(),p(Z,ic,rc)},Jo=(n,t)=>{const e=n.createBiquadFilter();return yt(e,t),ft(e,t,"Q"),ft(e,t,"detune"),ft(e,t,"frequency"),ft(e,t,"gain"),at(e,t,"type"),e},iu=(n,t)=>(e,s)=>{const i=e.createChannelMerger(s.numberOfInputs);return n!==null&&n.name==="webkitAudioContext"&&t(e,i),yt(i,s),i},ru=n=>{const t=n.numberOfOutputs;Object.defineProperty(n,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw xt()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw xt()}}),Object.defineProperty(n,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw xt()}})},Us=(n,t)=>{const e=n.createChannelSplitter(t.numberOfOutputs);return yt(e,t),ru(e),e},ou=(n,t,e,s,i)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return yt(a,o),ft(a,o,"offset"),t(s,()=>s(r))||$i(a),t(i,()=>i(r))||Gi(a),n(r,a),a},_s=(n,t)=>(n.connect=t.connect.bind(t),n.disconnect=t.disconnect.bind(t),n),au=(n,t,e,s)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),c=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),h=e(i,{...o,gain:r}),l=a.getChannelData(0);l[0]=1,l[1]=1,c.buffer=a,c.loop=!0;const u={get bufferSize(){},get channelCount(){return h.channelCount},set channelCount(d){h.channelCount=d},get channelCountMode(){return h.channelCountMode},set channelCountMode(d){h.channelCountMode=d},get channelInterpretation(){return h.channelInterpretation},set channelInterpretation(d){h.channelInterpretation=d},get context(){return h.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return h.numberOfOutputs},get offset(){return h.gain},get onended(){return c.onended},set onended(d){c.onended=d},addEventListener(...d){return c.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return c.dispatchEvent(d[0])},removeEventListener(...d){return c.removeEventListener(d[0],d[1],d[2])},start(d=0){c.start.call(c,d)},stop(d=0){c.stop.call(c,d)}},p=()=>c.connect(h),f=()=>c.disconnect(h);return n(i,c),s(_s(u,h),p,f)},cu=(n,t)=>(e,s)=>{const i=e.createConvolver();if(yt(i,s),s.disableNormalization===i.normalize&&(i.normalize=!s.disableNormalization),at(i,s,"buffer"),s.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw n();return r.call(i,o)}),s.channelCountMode==="max"))throw n();return t(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw n();return r.call(i,o)}),i},Ko=(n,t)=>{const e=n.createDelay(t.maxDelayTime);return yt(e,t),ft(e,t,"delayTime"),e},hu=n=>(t,e)=>{const s=t.createDynamicsCompressor();if(yt(s,e),e.channelCount>2||e.channelCountMode==="max")throw n();return ft(s,e,"attack"),ft(s,e,"knee"),ft(s,e,"ratio"),ft(s,e,"release"),ft(s,e,"threshold"),s},zt=(n,t)=>{const e=n.createGain();return yt(e,t),ft(e,t,"gain"),e},lu=n=>(t,e,s)=>{if(t.createIIRFilter===void 0)return n(t,e,s);const i=t.createIIRFilter(s.feedforward,s.feedback);return yt(i,s),i};function uu(n,t){const e=t[0]*t[0]+t[1]*t[1];return[(n[0]*t[0]+n[1]*t[1])/e,(n[1]*t[0]-n[0]*t[1])/e]}function du(n,t){return[n[0]*t[0]-n[1]*t[1],n[0]*t[1]+n[1]*t[0]]}function fo(n,t){let e=[0,0];for(let s=n.length-1;s>=0;s-=1)e=du(e,t),e[0]+=n[s];return e}const pu=(n,t,e,s)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:h,feedforward:l})=>{const u=Yo(r,i.sampleRate),p=h instanceof Float64Array?h:new Float64Array(h),f=l instanceof Float64Array?l:new Float64Array(l),d=p.length,m=f.length,g=Math.min(d,m);if(d===0||d>20)throw s();if(p[0]===0)throw t();if(m===0||m>20)throw s();if(f[0]===0)throw t();if(p[0]!==1){for(let v=0;v<m;v+=1)f[v]/=p[0];for(let v=1;v<d;v+=1)p[v]/=p[0]}const _=e(i,u,o,o);_.channelCount=o,_.channelCountMode=a,_.channelInterpretation=c;const x=32,T=[],C=[],y=[];for(let v=0;v<o;v+=1){T.push(0);const O=new Float32Array(x),E=new Float32Array(x);O.fill(0),E.fill(0),C.push(O),y.push(E)}_.onaudioprocess=v=>{const O=v.inputBuffer,E=v.outputBuffer,A=O.numberOfChannels;for(let k=0;k<A;k+=1){const F=O.getChannelData(k),R=E.getChannelData(k);T[k]=Xo(p,d,f,m,g,C[k],y[k],T[k],x,F,R)}};const b=i.sampleRate/2;return _s({get bufferSize(){return u},get channelCount(){return _.channelCount},set channelCount(v){_.channelCount=v},get channelCountMode(){return _.channelCountMode},set channelCountMode(v){_.channelCountMode=v},get channelInterpretation(){return _.channelInterpretation},set channelInterpretation(v){_.channelInterpretation=v},get context(){return _.context},get inputs(){return[_]},get numberOfInputs(){return _.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},addEventListener(...v){return _.addEventListener(v[0],v[1],v[2])},dispatchEvent(...v){return _.dispatchEvent(v[0])},getFrequencyResponse(v,O,E){if(v.length!==O.length||O.length!==E.length)throw n();const A=v.length;for(let k=0;k<A;k+=1){const F=-Math.PI*(v[k]/b),R=[Math.cos(F),Math.sin(F)],z=fo(f,R),q=fo(p,R),V=uu(z,q);O[k]=Math.sqrt(V[0]*V[0]+V[1]*V[1]),E[k]=Math.atan2(V[1],V[0])}},removeEventListener(...v){return _.removeEventListener(v[0],v[1],v[2])}},_)},fu=(n,t)=>n.createMediaElementSource(t.mediaElement),mu=(n,t)=>{const e=n.createMediaStreamDestination();return yt(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},gu=(n,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const s=e.slice(0,1),i=n.createMediaStreamSource(new MediaStream(s));return Object.defineProperty(i,"mediaStream",{value:t}),i},_u=(n,t)=>(e,{mediaStreamTrack:s})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(s);const i=new MediaStream([s]),r=e.createMediaStreamSource(i);if(s.kind!=="audio")throw n();if(t(e))throw new TypeError;return r},yu=n=>n===null?null:n.hasOwnProperty("OfflineAudioContext")?n.OfflineAudioContext:n.hasOwnProperty("webkitOfflineAudioContext")?n.webkitOfflineAudioContext:null,vu=(n,t,e,s,i,r)=>(o,a)=>{const c=o.createOscillator();return yt(c,a),ft(c,a,"detune"),ft(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):at(c,a,"type"),t(e,()=>e(o))||$i(c),t(s,()=>s(o))||r(c,o),t(i,()=>i(o))||Gi(c),n(o,c),c},bu=n=>(t,e)=>{const s=t.createPanner();return s.orientationX===void 0?n(t,e):(yt(s,e),ft(s,e,"orientationX"),ft(s,e,"orientationY"),ft(s,e,"orientationZ"),ft(s,e,"positionX"),ft(s,e,"positionY"),ft(s,e,"positionZ"),at(s,e,"coneInnerAngle"),at(s,e,"coneOuterAngle"),at(s,e,"coneOuterGain"),at(s,e,"distanceModel"),at(s,e,"maxDistance"),at(s,e,"panningModel"),at(s,e,"refDistance"),at(s,e,"rolloffFactor"),s)},wu=(n,t,e,s,i,r,o,a,c,h)=>(l,{coneInnerAngle:u,coneOuterAngle:p,coneOuterGain:f,distanceModel:d,maxDistance:m,orientationX:g,orientationY:_,orientationZ:x,panningModel:T,positionX:C,positionY:y,positionZ:b,refDistance:w,rolloffFactor:v,...O})=>{const E=l.createPanner();if(O.channelCount>2||O.channelCountMode==="max")throw o();yt(E,O);const A={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},k=e(l,{...A,channelInterpretation:"speakers",numberOfInputs:6}),F=s(l,{...O,gain:1}),R=s(l,{...A,gain:1}),z=s(l,{...A,gain:0}),q=s(l,{...A,gain:0}),V=s(l,{...A,gain:0}),Z=s(l,{...A,gain:0}),B=s(l,{...A,gain:0}),G=i(l,256,6,1),$=r(l,{...A,curve:new Float32Array([1,1]),oversample:"none"});let tt=[g,_,x],Bt=[C,y,b];const jt=new Float32Array(1);G.onaudioprocess=({inputBuffer:L})=>{const Be=[c(L,jt,0),c(L,jt,1),c(L,jt,2)];Be.some((es,ss)=>es!==tt[ss])&&(E.setOrientation(...Be),tt=Be);const je=[c(L,jt,3),c(L,jt,4),c(L,jt,5)];je.some((es,ss)=>es!==Bt[ss])&&(E.setPosition(...je),Bt=je)},Object.defineProperty(z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0}),Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(B.gain,"defaultValue",{get:()=>0});const X={get bufferSize(){},get channelCount(){return E.channelCount},set channelCount(L){if(L>2)throw o();F.channelCount=L,E.channelCount=L},get channelCountMode(){return E.channelCountMode},set channelCountMode(L){if(L==="max")throw o();F.channelCountMode=L,E.channelCountMode=L},get channelInterpretation(){return E.channelInterpretation},set channelInterpretation(L){F.channelInterpretation=L,E.channelInterpretation=L},get coneInnerAngle(){return E.coneInnerAngle},set coneInnerAngle(L){E.coneInnerAngle=L},get coneOuterAngle(){return E.coneOuterAngle},set coneOuterAngle(L){E.coneOuterAngle=L},get coneOuterGain(){return E.coneOuterGain},set coneOuterGain(L){if(L<0||L>1)throw t();E.coneOuterGain=L},get context(){return E.context},get distanceModel(){return E.distanceModel},set distanceModel(L){E.distanceModel=L},get inputs(){return[F]},get maxDistance(){return E.maxDistance},set maxDistance(L){if(L<0)throw new RangeError;E.maxDistance=L},get numberOfInputs(){return E.numberOfInputs},get numberOfOutputs(){return E.numberOfOutputs},get orientationX(){return R.gain},get orientationY(){return z.gain},get orientationZ(){return q.gain},get panningModel(){return E.panningModel},set panningModel(L){E.panningModel=L},get positionX(){return V.gain},get positionY(){return Z.gain},get positionZ(){return B.gain},get refDistance(){return E.refDistance},set refDistance(L){if(L<0)throw new RangeError;E.refDistance=L},get rolloffFactor(){return E.rolloffFactor},set rolloffFactor(L){if(L<0)throw new RangeError;E.rolloffFactor=L},addEventListener(...L){return F.addEventListener(L[0],L[1],L[2])},dispatchEvent(...L){return F.dispatchEvent(L[0])},removeEventListener(...L){return F.removeEventListener(L[0],L[1],L[2])}};u!==X.coneInnerAngle&&(X.coneInnerAngle=u),p!==X.coneOuterAngle&&(X.coneOuterAngle=p),f!==X.coneOuterGain&&(X.coneOuterGain=f),d!==X.distanceModel&&(X.distanceModel=d),m!==X.maxDistance&&(X.maxDistance=m),g!==X.orientationX.value&&(X.orientationX.value=g),_!==X.orientationY.value&&(X.orientationY.value=_),x!==X.orientationZ.value&&(X.orientationZ.value=x),T!==X.panningModel&&(X.panningModel=T),C!==X.positionX.value&&(X.positionX.value=C),y!==X.positionY.value&&(X.positionY.value=y),b!==X.positionZ.value&&(X.positionZ.value=b),w!==X.refDistance&&(X.refDistance=w),v!==X.rolloffFactor&&(X.rolloffFactor=v),(tt[0]!==1||tt[1]!==0||tt[2]!==0)&&E.setOrientation(...tt),(Bt[0]!==0||Bt[1]!==0||Bt[2]!==0)&&E.setPosition(...Bt);const ot=()=>{F.connect(E),n(F,$,0,0),$.connect(R).connect(k,0,0),$.connect(z).connect(k,0,1),$.connect(q).connect(k,0,2),$.connect(V).connect(k,0,3),$.connect(Z).connect(k,0,4),$.connect(B).connect(k,0,5),k.connect(G).connect(l.destination)},Mt=()=>{F.disconnect(E),a(F,$,0,0),$.disconnect(R),R.disconnect(k),$.disconnect(z),z.disconnect(k),$.disconnect(q),q.disconnect(k),$.disconnect(V),V.disconnect(k),$.disconnect(Z),Z.disconnect(k),$.disconnect(B),B.disconnect(k),k.disconnect(G),G.disconnect(l.destination)};return h(_s(X,E),ot,Mt)},xu=n=>(t,{disableNormalization:e,imag:s,real:i})=>{const r=s instanceof Float32Array?s:new Float32Array(s),o=i instanceof Float32Array?i:new Float32Array(i),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(s).length<2)throw n();return a},$s=(n,t,e,s)=>n.createScriptProcessor(t,e,s),Tu=(n,t)=>(e,s)=>{const i=s.channelCountMode;if(i==="clamped-max")throw t();if(e.createStereoPanner===void 0)return n(e,s);const r=e.createStereoPanner();return yt(r,s),ft(r,s,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw t()}}),r},Su=(n,t,e,s,i,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,h={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},l={...h,oversample:"none"},u=(d,m,g,_)=>{const x=new Float32Array(16385),T=new Float32Array(16385);for(let O=0;O<16385;O+=1){const E=O/16384*c;x[O]=Math.cos(E),T[O]=Math.sin(E)}const C=e(d,{...h,gain:0}),y=s(d,{...l,curve:x}),b=s(d,{...l,curve:a}),w=e(d,{...h,gain:0}),v=s(d,{...l,curve:T});return{connectGraph(){m.connect(C),m.connect(b.inputs===void 0?b:b.inputs[0]),m.connect(w),b.connect(g),g.connect(y.inputs===void 0?y:y.inputs[0]),g.connect(v.inputs===void 0?v:v.inputs[0]),y.connect(C.gain),v.connect(w.gain),C.connect(_,0,0),w.connect(_,0,1)},disconnectGraph(){m.disconnect(C),m.disconnect(b.inputs===void 0?b:b.inputs[0]),m.disconnect(w),b.disconnect(g),g.disconnect(y.inputs===void 0?y:y.inputs[0]),g.disconnect(v.inputs===void 0?v:v.inputs[0]),y.disconnect(C.gain),v.disconnect(w.gain),C.disconnect(_,0,0),w.disconnect(_,0,1)}}},p=(d,m,g,_)=>{const x=new Float32Array(16385),T=new Float32Array(16385),C=new Float32Array(16385),y=new Float32Array(16385),b=Math.floor(16385/2);for(let V=0;V<16385;V+=1)if(V>b){const Z=(V-b)/(16384-b)*c;x[V]=Math.cos(Z),T[V]=Math.sin(Z),C[V]=0,y[V]=1}else{const Z=V/(16384-b)*c;x[V]=1,T[V]=0,C[V]=Math.cos(Z),y[V]=Math.sin(Z)}const w=t(d,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),v=e(d,{...h,gain:0}),O=s(d,{...l,curve:x}),E=e(d,{...h,gain:0}),A=s(d,{...l,curve:T}),k=s(d,{...l,curve:a}),F=e(d,{...h,gain:0}),R=s(d,{...l,curve:C}),z=e(d,{...h,gain:0}),q=s(d,{...l,curve:y});return{connectGraph(){m.connect(w),m.connect(k.inputs===void 0?k:k.inputs[0]),w.connect(v,0),w.connect(E,0),w.connect(F,1),w.connect(z,1),k.connect(g),g.connect(O.inputs===void 0?O:O.inputs[0]),g.connect(A.inputs===void 0?A:A.inputs[0]),g.connect(R.inputs===void 0?R:R.inputs[0]),g.connect(q.inputs===void 0?q:q.inputs[0]),O.connect(v.gain),A.connect(E.gain),R.connect(F.gain),q.connect(z.gain),v.connect(_,0,0),F.connect(_,0,0),E.connect(_,0,1),z.connect(_,0,1)},disconnectGraph(){m.disconnect(w),m.disconnect(k.inputs===void 0?k:k.inputs[0]),w.disconnect(v,0),w.disconnect(E,0),w.disconnect(F,1),w.disconnect(z,1),k.disconnect(g),g.disconnect(O.inputs===void 0?O:O.inputs[0]),g.disconnect(A.inputs===void 0?A:A.inputs[0]),g.disconnect(R.inputs===void 0?R:R.inputs[0]),g.disconnect(q.inputs===void 0?q:q.inputs[0]),O.disconnect(v.gain),A.disconnect(E.gain),R.disconnect(F.gain),q.disconnect(z.gain),v.disconnect(_,0,0),F.disconnect(_,0,0),E.disconnect(_,0,1),z.disconnect(_,0,1)}}},f=(d,m,g,_,x)=>{if(m===1)return u(d,g,_,x);if(m===2)return p(d,g,_,x);throw i()};return(d,{channelCount:m,channelCountMode:g,pan:_,...x})=>{if(g==="max")throw i();const T=n(d,{...x,channelCount:1,channelCountMode:g,numberOfInputs:2}),C=e(d,{...x,channelCount:m,channelCountMode:g,gain:1}),y=e(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:_});let{connectGraph:b,disconnectGraph:w}=f(d,m,C,y,T);Object.defineProperty(y.gain,"defaultValue",{get:()=>0}),Object.defineProperty(y.gain,"maxValue",{get:()=>1}),Object.defineProperty(y.gain,"minValue",{get:()=>-1});const v={get bufferSize(){},get channelCount(){return C.channelCount},set channelCount(k){C.channelCount!==k&&(O&&w(),{connectGraph:b,disconnectGraph:w}=f(d,k,C,y,T),O&&b()),C.channelCount=k},get channelCountMode(){return C.channelCountMode},set channelCountMode(k){if(k==="clamped-max"||k==="max")throw i();C.channelCountMode=k},get channelInterpretation(){return C.channelInterpretation},set channelInterpretation(k){C.channelInterpretation=k},get context(){return C.context},get inputs(){return[C]},get numberOfInputs(){return C.numberOfInputs},get numberOfOutputs(){return C.numberOfOutputs},get pan(){return y.gain},addEventListener(...k){return C.addEventListener(k[0],k[1],k[2])},dispatchEvent(...k){return C.dispatchEvent(k[0])},removeEventListener(...k){return C.removeEventListener(k[0],k[1],k[2])}};let O=!1;const E=()=>{b(),O=!0},A=()=>{w(),O=!1};return r(_s(v,T),E,A)}},ku=(n,t,e,s,i,r,o)=>(a,c)=>{const h=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,c);yt(h,c);const l=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(l!==null&&l.length<2)throw t();at(h,{curve:l},"curve"),at(h,c,"oversample");let u=null,p=!1;return o(h,"curve",m=>()=>m.call(h),m=>g=>(m.call(h,g),p&&(s(g)&&u===null?u=n(a,h):!s(g)&&u!==null&&(u(),u=null)),g)),i(h,()=>{p=!0,s(h.curve)&&(u=n(a,h))},()=>{p=!1,u!==null&&(u(),u=null)})},Cu=(n,t,e,s,i)=>(r,{curve:o,oversample:a,...c})=>{const h=r.createWaveShaper(),l=r.createWaveShaper();yt(h,c),yt(l,c);const u=e(r,{...c,gain:1}),p=e(r,{...c,gain:-1}),f=e(r,{...c,gain:1}),d=e(r,{...c,gain:-1});let m=null,g=!1,_=null;const x={get bufferSize(){},get channelCount(){return h.channelCount},set channelCount(y){u.channelCount=y,p.channelCount=y,h.channelCount=y,f.channelCount=y,l.channelCount=y,d.channelCount=y},get channelCountMode(){return h.channelCountMode},set channelCountMode(y){u.channelCountMode=y,p.channelCountMode=y,h.channelCountMode=y,f.channelCountMode=y,l.channelCountMode=y,d.channelCountMode=y},get channelInterpretation(){return h.channelInterpretation},set channelInterpretation(y){u.channelInterpretation=y,p.channelInterpretation=y,h.channelInterpretation=y,f.channelInterpretation=y,l.channelInterpretation=y,d.channelInterpretation=y},get context(){return h.context},get curve(){return _},set curve(y){if(y!==null&&y.length<2)throw t();if(y===null)h.curve=y,l.curve=y;else{const b=y.length,w=new Float32Array(b+2-b%2),v=new Float32Array(b+2-b%2);w[0]=y[0],v[0]=-y[b-1];const O=Math.ceil((b+1)/2),E=(b+1)/2-1;for(let A=1;A<O;A+=1){const k=A/O*E,F=Math.floor(k),R=Math.ceil(k);w[A]=F===R?y[F]:(1-(k-F))*y[F]+(1-(R-k))*y[R],v[A]=F===R?-y[b-1-F]:-((1-(k-F))*y[b-1-F])-(1-(R-k))*y[b-1-R]}w[O]=b%2===1?y[O-1]:(y[O-2]+y[O-1])/2,h.curve=w,l.curve=v}_=y,g&&(s(_)&&m===null?m=n(r,u):m!==null&&(m(),m=null))},get inputs(){return[u]},get numberOfInputs(){return h.numberOfInputs},get numberOfOutputs(){return h.numberOfOutputs},get oversample(){return h.oversample},set oversample(y){h.oversample=y,l.oversample=y},addEventListener(...y){return u.addEventListener(y[0],y[1],y[2])},dispatchEvent(...y){return u.dispatchEvent(y[0])},removeEventListener(...y){return u.removeEventListener(y[0],y[1],y[2])}};o!==null&&(x.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==x.oversample&&(x.oversample=a);const T=()=>{u.connect(h).connect(f),u.connect(p).connect(l).connect(d).connect(f),g=!0,s(_)&&(m=n(r,u))},C=()=>{u.disconnect(h),h.disconnect(f),u.disconnect(p),p.disconnect(l),l.disconnect(d),d.disconnect(f),g=!1,m!==null&&(m(),m=null)};return i(_s(x,f),T,C)},Vt=()=>new DOMException("","NotSupportedError"),Au={numberOfChannels:1},Eu=(n,t,e,s,i)=>class extends n{constructor(o,a,c){let h;if(typeof o=="number"&&a!==void 0&&c!==void 0)h={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")h=o;else throw new Error("The given parameters are not valid.");const{length:l,numberOfChannels:u,sampleRate:p}={...Au,...h},f=s(u,l,p);t(Fs,()=>Fs(f))||f.addEventListener("statechange",(()=>{let d=0;const m=g=>{this._state==="running"&&(d>0?(f.removeEventListener("statechange",m),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):d+=1)};return m})()),super(f,u),this._length=l,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,Uo(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},Du={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Ou=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const l=i(c),u={...Du,...h},p=e(l,u),f=r(l),d=f?s():null,m=c.sampleRate/2;super(c,!1,p,d),this._detune=t(this,f,p.detune,153600,-153600),this._frequency=t(this,f,p.frequency,m,-m),this._nativeOscillatorNode=p,this._onended=null,this._oscillatorNodeRenderer=d,this._oscillatorNodeRenderer!==null&&u.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=u.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const h=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=h;const l=this._nativeOscillatorNode.onended;this._onended=l!==null&&l===h?c:l}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){us(this);const h=()=>{this._nativeOscillatorNode.removeEventListener("ended",h),Se(this)&&zs(this)};this._nativeOscillatorNode.addEventListener("ended",h)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},Nu=(n,t,e,s,i)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const h=async(l,u)=>{let p=e(l);const f=Nt(p,u);if(!f){const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,detune:p.detune.value,frequency:p.frequency.value,periodicWave:o===null?void 0:o,type:p.type};p=t(u,d),a!==null&&p.start(a),c!==null&&p.stop(c)}return r.set(u,p),f?(await n(u,l.detune,p.detune),await n(u,l.frequency,p.frequency)):(await s(u,l.detune,p.detune),await s(u,l.frequency,p.frequency)),await i(l,u,p),p};return{set periodicWave(l){o=l},set start(l){a=l},set stop(l){c=l},render(l,u){const p=r.get(u);return p!==void 0?Promise.resolve(p):h(l,u)}}},Mu={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Ru=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const l=i(c),u={...Mu,...h},p=e(l,u),f=r(l),d=f?s():null;super(c,!1,p,d),this._nativePannerNode=p,this._orientationX=t(this,f,p.orientationX,Rt,Gt),this._orientationY=t(this,f,p.orientationY,Rt,Gt),this._orientationZ=t(this,f,p.orientationZ,Rt,Gt),this._positionX=t(this,f,p.positionX,Rt,Gt),this._positionY=t(this,f,p.positionY,Rt,Gt),this._positionZ=t(this,f,p.positionZ,Rt,Gt),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Fu=(n,t,e,s,i,r,o,a,c,h)=>()=>{const l=new WeakMap;let u=null;const p=async(f,d)=>{let m=null,g=r(f);const _={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},x={..._,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},T=Nt(g,d);if("bufferSize"in g)m=s(d,{..._,gain:1});else if(!T){const C={...x,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=i(d,C)}if(l.set(d,m===null?g:m),m!==null){if(u===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const A=new o(6,f.context.length,d.sampleRate),k=t(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});k.connect(A.destination),u=(async()=>{const F=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(R,z)=>{const q=e(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:z===0?1:0});return await a(A,R,q.offset),q}));for(let R=0;R<6;R+=1)F[R].connect(k,0,R),F[R].start(0);return h(A)})()}const C=await u,y=s(d,{..._,gain:1});await c(f,d,y);const b=[];for(let A=0;A<C.numberOfChannels;A+=1)b.push(C.getChannelData(A));let w=[b[0][0],b[1][0],b[2][0]],v=[b[3][0],b[4][0],b[5][0]],O=s(d,{..._,gain:1}),E=i(d,{...x,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:v[0],positionY:v[1],positionZ:v[2]});y.connect(O).connect(E.inputs[0]),E.connect(m);for(let A=128;A<C.length;A+=128){const k=[b[0][A],b[1][A],b[2][A]],F=[b[3][A],b[4][A],b[5][A]];if(k.some((R,z)=>R!==w[z])||F.some((R,z)=>R!==v[z])){w=k,v=F;const R=A/d.sampleRate;O.gain.setValueAtTime(0,R),O=s(d,{..._,gain:0}),E=i(d,{...x,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:v[0],positionY:v[1],positionZ:v[2]}),O.gain.setValueAtTime(1,R),y.connect(O).connect(E.inputs[0]),E.connect(m)}}return m}return T?(await n(d,f.orientationX,g.orientationX),await n(d,f.orientationY,g.orientationY),await n(d,f.orientationZ,g.orientationZ),await n(d,f.positionX,g.positionX),await n(d,f.positionY,g.positionY),await n(d,f.positionZ,g.positionZ)):(await a(d,f.orientationX,g.orientationX),await a(d,f.orientationY,g.orientationY),await a(d,f.orientationZ,g.orientationZ),await a(d,f.positionX,g.positionX),await a(d,f.positionY,g.positionY),await a(d,f.positionZ,g.positionZ)),gs(g)?await c(f,d,g.inputs[0]):await c(f,d,g),g};return{render(f,d){const m=l.get(d);return m!==void 0?Promise.resolve(m):p(f,d)}}},Iu={disableNormalization:!1},qu=(n,t,e,s)=>class ta{constructor(r,o){const a=t(r),c=s({...Iu,...o}),h=n(a,c);return e.add(h),h}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===ta.prototype||e.has(r)}},Vu=(n,t)=>(e,s,i)=>(n(s).replay(i),t(s,e,i)),Pu=(n,t,e)=>async(s,i,r)=>{const o=n(s);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([h,l])=>{const p=await t(h).render(h,i),f=s.context.destination;!e(h)&&(s!==f||!e(s))&&p.connect(r,l,c)})).reduce((a,c)=>[...a,...c],[]))},Lu=(n,t,e)=>async(s,i,r)=>{const o=t(s);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const l=await n(a).render(a,i);e(a)||l.connect(r,c)}))},Wu=(n,t,e,s)=>i=>n(Fs,()=>Fs(i))?Promise.resolve(n(s,s)).then(r=>{if(!r){const o=e(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}),zu=n=>(t,e)=>{n.set(t,e)},Bu=n=>(t,e)=>n.set(t,e),ju=(n,t,e,s,i,r,o,a)=>(c,h)=>e(c).render(c,h).then(()=>Promise.all(Array.from(s(h)).map(l=>e(l).render(l,h)))).then(()=>i(h)).then(l=>(typeof l.copyFromChannel!="function"?(o(l),Bi(l)):t(r,()=>r(l))||a(l),n.add(l),l)),Uu={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},$u=(n,t,e,s,i,r)=>class extends n{constructor(a,c){const h=i(a),l={...Uu,...c},u=e(h,l),p=r(h),f=p?s():null;super(a,!1,u,f),this._pan=t(this,p,u.pan)}get pan(){return this._pan}},Gu=(n,t,e,s,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let h=e(a);const l=Nt(h,c);if(!l){const u={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,pan:h.pan.value};h=t(c,u)}return r.set(c,h),l?await n(c,a.pan,h.pan):await s(c,a.pan,h.pan),gs(h)?await i(a,c,h.inputs[0]):await i(a,c,h),h};return{render(a,c){const h=r.get(c);return h!==void 0?Promise.resolve(h):o(a,c)}}},Hu=n=>()=>{if(n===null)return!1;try{new n({length:1,sampleRate:44100})}catch{return!1}return!0},Qu=(n,t)=>async()=>{if(n===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),s=new t(1,128,44100),i=URL.createObjectURL(e);let r=!1,o=!1;try{await s.audioWorklet.addModule(i);const a=new n(s,"a",{numberOfOutputs:0}),c=s.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await s.startRendering(),await new Promise(h=>setTimeout(h))}catch{}finally{URL.revokeObjectURL(i)}return r&&!o},Zu=(n,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),s=n(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{e.oncomplete=()=>{s.disconnect(),i(e.currentTime!==0)},e.startRendering()})},Xu=()=>new DOMException("","UnknownError"),Yu={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},Ju=(n,t,e,s,i,r,o)=>class extends n{constructor(c,h){const l=i(c),u={...Yu,...h},p=e(l,u),d=r(l)?s():null;super(c,!0,p,d),this._isCurveNullified=!1,this._nativeWaveShaperNode=p,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},Ku=(n,t,e)=>()=>{const s=new WeakMap,i=async(r,o)=>{let a=t(r);if(!Nt(a,o)){const h={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=n(o,h)}return s.set(o,a),gs(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=s.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},td=()=>typeof window>"u"?null:window,ed=(n,t)=>e=>{e.copyFromChannel=(s,i,r=0)=>{const o=n(r),a=n(i);if(a>=e.numberOfChannels)throw t();const c=e.length,h=e.getChannelData(a),l=s.length;for(let u=o<0?-o:0;u+o<c&&u<l;u+=1)s[u]=h[u+o]},e.copyToChannel=(s,i,r=0)=>{const o=n(r),a=n(i);if(a>=e.numberOfChannels)throw t();const c=e.length,h=e.getChannelData(a),l=s.length;for(let u=o<0?-o:0;u+o<c&&u<l;u+=1)h[u+o]=s[u]}},sd=n=>t=>{t.copyFromChannel=(e=>(s,i,r=0)=>{const o=n(r),a=n(i);if(o<t.length)return e.call(t,s,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(s,i,r=0)=>{const o=n(r),a=n(i);if(o<t.length)return e.call(t,s,a,o)})(t.copyToChannel)},nd=n=>(t,e)=>{const s=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=s),n(t,"buffer",i=>()=>{const r=i.call(t);return r===s?null:r},i=>r=>i.call(t,r===null?s:r))},id=(n,t)=>(e,s)=>{s.channelCount=1,s.channelCountMode="explicit",Object.defineProperty(s,"channelCount",{get:()=>1,set:()=>{throw n()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:()=>{throw n()}});const i=e.createBufferSource();t(s,()=>{const a=s.numberOfInputs;for(let c=0;c<a;c+=1)i.connect(s,0,c)},()=>i.disconnect(s))},ea=(n,t,e)=>n.copyFromChannel===void 0?n.getChannelData(e)[0]:(n.copyFromChannel(t,e),t[0]),sa=n=>{if(n===null)return!1;const t=n.length;return t%2!==0?n[Math.floor(t/2)]!==0:n[t/2-1]+n[t/2]!==0},Gs=(n,t,e,s)=>{let i=n;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(n,t,{get:e(r),set:s(o)})},rd=n=>({...n,outputChannelCount:n.outputChannelCount!==void 0?n.outputChannelCount:n.numberOfInputs===1&&n.numberOfOutputs===1?[n.channelCount]:Array.from({length:n.numberOfOutputs},()=>1)}),od=n=>({...n,channelCount:n.numberOfOutputs}),ad=n=>{const{imag:t,real:e}=n;return t===void 0?e===void 0?{...n,imag:[0,0],real:[0,0]}:{...n,imag:Array.from(e,()=>0),real:e}:e===void 0?{...n,imag:t,real:Array.from(t,()=>0)}:{...n,imag:t,real:e}},na=(n,t,e)=>{try{n.setValueAtTime(t,e)}catch(s){if(s.code!==9)throw s;na(n,t,e+1e-7)}},cd=n=>{const t=n.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},hd=n=>{const t=n.createBufferSource(),e=n.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},ld=n=>{const t=n.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},Hi=n=>{const t=n.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},ia=n=>{const t=n.createBuffer(1,1,44100),e=n.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},Qi=n=>{const t=n.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},ud=n=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(n)}finally{t.close(),e.close()}},dd=n=>{n.start=(t=>(e=0,s=0,i)=>{const r=n.buffer,o=r===null?s:Math.min(r.duration,s);r!==null&&o>r.duration-.5/n.context.sampleRate?t.call(n,e,0,0):t.call(n,e,o,i)})(n.start)},ra=(n,t)=>{const e=t.createGain();n.connect(e);const s=(i=>()=>{i.call(n,e),n.removeEventListener("ended",s)})(n.disconnect);n.addEventListener("ended",s),_s(n,e),n.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(n,o)}catch{e.gain.setValueAtTime(0,o)}else i.call(n,o),r=!0}})(n.stop)},ys=(n,t)=>e=>{const s={value:n};return Object.defineProperties(e,{currentTarget:s,target:s}),typeof t=="function"?t.call(n,e):t.handleEvent.call(n,e)},pd=Rc(Ye),fd=Lc(Ye),md=Yh(Gn),oa=new WeakMap,gd=ml(oa),le=Ah(new Map,new WeakMap),me=td(),aa=$l(le,ye),Zi=fl(It),Ct=Pu(It,Zi,He),_d=Uc(aa,rt,Ct),it=yl($n),Ce=yu(me),st=Il(Ce),ca=new WeakMap,ha=al(ys),Hs=Zl(me),Xi=Nl(Hs),Yi=Ml(me),la=Rl(me),Is=Yl(me),mt=mh(Fc(Vo),Pc(pd,fd,bn,md,wn,It,gd,Ws,rt,Ye,Se,He,pn),le,Cl(Ci,wn,It,rt,Rs,Se),ye,Hn,Vt,Hh(bn,Ci,It,rt,Rs,it,Se,st),tl(ca,It,ce),ha,it,Xi,Yi,la,st,Is),yd=jc(mt,_d,ye,aa,it,st),Ji=new WeakSet,mo=Gl(me),ua=Wh(new Uint32Array(1)),Ki=ed(ua,ye),tr=sd(ua),da=Gc(Ji,le,Vt,mo,Ce,Hu(mo),Ki,tr),Qn=Wc(zt),pa=Lu(Zi,Bs,He),ve=Fh(pa),vs=Ql(Qn,le,cd,hd,ld,Hi,ia,Qi,dd,nd(Gs),ra),be=Vu(gl(Bs),pa),vd=Zc(ve,vs,rt,be,Ct),ue=gh(Ic(Po),ca,zi,_h,Ac,Ec,Dc,Oc,Nc,Ti,Io,Hs,na),bd=Qc(mt,vd,ue,xt,vs,it,st,ys),wd=ih(mt,rh,ye,xt,Xl(zt,Gs),it,st,Ct),xd=Ch(ve,Jo,rt,be,Ct),Je=Bu(oa),Td=kh(mt,ue,xd,Hn,Jo,it,st,Je),We=jl(Ye,Yi),Sd=id(xt,We),ze=iu(Hs,Sd),kd=Oh(ze,rt,Ct),Cd=Dh(mt,kd,ze,it,st),Ad=Rh(Us,rt,Ct),Ed=Mh(mt,Ad,Us,it,st,od),Dd=au(Qn,vs,zt,We),bs=ou(Qn,le,Dd,Hi,Qi),Od=Lh(ve,bs,rt,be,Ct),Nd=Ph(mt,ue,Od,bs,it,st,ys),fa=cu(Vt,Gs),Md=jh(fa,rt,Ct),Rd=Bh(mt,Md,fa,it,st,Je),Fd=Xh(ve,Ko,rt,be,Ct),Id=Zh(mt,ue,Fd,Ko,it,st,Je),ma=hu(Vt),qd=il(ve,ma,rt,be,Ct),Vd=nl(mt,ue,qd,ma,Vt,it,st,Je),Pd=dl(ve,zt,rt,be,Ct),Ld=ul(mt,ue,Pd,zt,it,st),Wd=pu(Hn,xt,$s,Vt),Zn=Wu(le,zt,$s,Zu(zt,Ce)),zd=kl(vs,rt,Ce,Ct,Zn),Bd=lu(Wd),jd=Tl(mt,Bd,zd,it,st,Je),Ud=oh(ue,ze,bs,$s,Vt,ea,st,Gs),ga=new WeakMap,$d=Bl(wd,Ud,ha,st,ga,ys),_a=vu(Qn,le,Hi,ia,Qi,ra),Gd=Nu(ve,_a,rt,be,Ct),Hd=Ou(mt,ue,_a,Gd,it,st,ys),ya=qh(vs),Qd=Cu(ya,xt,zt,sa,We),Xn=ku(ya,xt,Qd,sa,We,Hs,Gs),Zd=wu(bn,xt,ze,zt,$s,Xn,Vt,wn,ea,We),va=bu(Zd),Xd=Fu(ve,ze,bs,zt,va,rt,Ce,be,Ct,Zn),Yd=Ru(mt,ue,va,Xd,it,st,Je),Jd=xu(ye),Kd=qu(Jd,it,new WeakSet,ad),tp=Su(ze,Us,zt,Xn,Vt,We),ba=Tu(tp,Vt),ep=Gu(ve,ba,rt,be,Ct),sp=$u(mt,ue,ba,ep,it,st),np=Ku(Xn,rt,Ct),ip=Ju(mt,xt,Xn,np,it,st,Je),wa=ql(me),er=cl(me),xa=new WeakMap,rp=vl(xa,Ce),op=wa?Vc(le,Vt,ol(me),er,hl(Mc),it,rp,st,Is,new WeakMap,new WeakMap,Qu(Is,Ce),me):void 0,ap=Fl(Xi,st),cp=Gh(Ji,le,$h,rl,new WeakSet,it,ap,yn,Fs,Ki,tr),Ta=Th(op,yd,da,bd,Td,Cd,Ed,Nd,Rd,cp,Id,Vd,Ld,jd,$d,Hd,Yd,Kd,sp,ip),hp=Vl(mt,fu,it,st),lp=Ll(mt,mu,it,st),up=Wl(mt,gu,it,st),dp=_u(xt,st),pp=zl(mt,dp,it),fp=nh(Ta,xt,Vt,Xu,hp,lp,up,pp,Hs),sr=bl(ga),mp=zc(sr),Sa=Ih(ye),gp=Jh(sr),ka=el(ye),Ca=new WeakMap,_p=pl(Ca,ce),yp=nu(Sa,ye,xt,ze,Us,bs,zt,$s,Vt,ka,er,_p,We),vp=Kl(xt,yp,zt,Vt,We),bp=xh(ve,Sa,vs,ze,Us,bs,zt,gp,ka,er,rt,Is,Ce,be,Ct,Zn),wp=_l(xa),xp=zu(Ca),go=wa?vh(mp,mt,ue,bp,vp,It,wp,it,st,Is,rd,xp,ud,ys):void 0,Tp=Uh(Vt,Ce),Sp=ju(Ji,le,Zi,sr,Zn,yn,Ki,tr),kp=Eu(Ta,le,xt,Tp,Sp),Cp=Al($n,Xi),Ap=El(Wi,Yi),Ep=Dl(zi,la),Dp=Ol($n,st);function Zt(n){return n===void 0}function Q(n){return n!==void 0}function Op(n){return typeof n=="function"}function he(n){return typeof n=="number"}function Fe(n){return Object.prototype.toString.call(n)==="[object Object]"&&n.constructor===Object}function Aa(n){return typeof n=="boolean"}function Et(n){return Array.isArray(n)}function ge(n){return typeof n=="string"}function un(n){return ge(n)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(n)}function P(n,t){if(!n)throw new Error(t)}function ee(n,t,e=1/0){if(!(t<=n&&n<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${n}`)}function Ea(n){!n.isOffline&&n.state!=="running"&&Qs('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let Da=!1,_o=!1;function yo(n){Da=n}function Np(n){Zt(n)&&Da&&!_o&&(_o=!0,Qs("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let Oa=console;function Mp(...n){Oa.log(...n)}function Qs(...n){Oa.warn(...n)}function Rp(n){return new fp(n)}function Fp(n,t,e){return new kp(n,t,e)}const Ft=typeof self=="object"?self:null,Ip=Ft&&(Ft.hasOwnProperty("AudioContext")||Ft.hasOwnProperty("webkitAudioContext"));function qp(n,t,e){return P(Q(go),"AudioWorkletNode only works in a secure context (https or localhost)"),new(n instanceof(Ft==null?void 0:Ft.BaseAudioContext)?Ft==null?void 0:Ft.AudioWorkletNode:go)(n,t,e)}function de(n,t,e,s){var i=arguments.length,r=i<3?t:s===null?s=Object.getOwnPropertyDescriptor(t,e):s,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(n,t,e,s);else for(var a=n.length-1;a>=0;a--)(o=n[a])&&(r=(i<3?o(r):i>3?o(t,e,r):o(t,e))||r);return i>3&&r&&Object.defineProperty(t,e,r),r}function lt(n,t,e,s){function i(r){return r instanceof e?r:new e(function(o){o(r)})}return new(e||(e=Promise))(function(r,o){function a(l){try{h(s.next(l))}catch(u){o(u)}}function c(l){try{h(s.throw(l))}catch(u){o(u)}}function h(l){l.done?r(l.value):i(l.value).then(a,c)}h((s=s.apply(n,t||[])).next())})}class Vp{constructor(t,e,s,i){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(i||44100),.001),this.updateInterval=s,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),s=new Worker(e);s.onmessage=this._callback.bind(this),this._worker=s}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function Qe(n){return Ep(n)}function Ie(n){return Ap(n)}function fn(n){return Dp(n)}function is(n){return Cp(n)}function Pp(n){return n instanceof da}function Lp(n,t){return n==="value"||Qe(t)||Ie(t)||Pp(t)}function Jt(n,...t){if(!t.length)return n;const e=t.shift();if(Fe(n)&&Fe(e))for(const s in e)Lp(s,e[s])?n[s]=e[s]:Fe(e[s])?(n[s]||Object.assign(n,{[s]:{}}),Jt(n[s],e[s])):Object.assign(n,{[s]:e[s]});return Jt(n,...t)}function Wp(n,t){return n.length===t.length&&n.every((e,s)=>t[s]===e)}function S(n,t,e=[],s){const i={},r=Array.from(t);if(Fe(r[0])&&s&&!Reflect.has(r[0],s)&&(Object.keys(r[0]).some(a=>Reflect.has(n,a))||(Jt(i,{[s]:r[0]}),e.splice(e.indexOf(s),1),r.shift())),r.length===1&&Fe(r[0]))Jt(i,r[0]);else for(let o=0;o<e.length;o++)Q(r[o])&&(i[e[o]]=r[o]);return Jt(n,i)}function zp(n){return n.constructor.getDefaults()}function pe(n,t){return Zt(n)?t:n}function St(n,t){return t.forEach(e=>{Reflect.has(n,e)&&delete n[e]}),n}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2024 Yotam Mann
 */class Ae{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||Ft&&this.toString()===Ft.TONE_DEBUG_CLASS)&&Mp(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}Ae.version=Fo;const nr=1e-6;function ds(n,t){return n>t+nr}function Ni(n,t){return ds(n,t)||re(n,t)}function kn(n,t){return n+nr<t}function re(n,t){return Math.abs(n-t)<nr}function Bp(n,t,e){return Math.max(Math.min(n,e),t)}class Kt extends Ae{constructor(){super(),this.name="Timeline",this._timeline=[];const t=S(Kt.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(P(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];P(Ni(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const s=this._search(t,e);return s!==-1?this._timeline[s]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const s=this._search(t,e);return s+1<this._timeline.length?this._timeline[s+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const s=this._search(t);return s-1>=0?this._timeline[s-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(re(this._timeline[e].time,t)){for(let s=e;s>=0&&re(this._timeline[s].time,t);s--)e=s;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&Ni(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let s=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][e]<=t)return i-1;for(;s<r;){let o=Math.floor(s+(r-s)/2);const a=this._timeline[o],c=this._timeline[o+1];if(re(a[e],t)){for(let h=o;h<this._timeline.length;h++){const l=this._timeline[h];if(re(l[e],t))o=h;else break}return o}else{if(kn(a[e],t)&&ds(c[e],t))return o;ds(a[e],t)?r=o:s=o+1}}return-1}_iterate(t,e=0,s=this._timeline.length-1){this._timeline.slice(e,s+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const s=this._search(t);return s!==-1&&this._iterate(e,0,s),this}forEachAfter(t,e){const s=this._search(t);return this._iterate(e,s+1),this}forEachBetween(t,e,s){let i=this._search(t),r=this._search(e);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===e&&(r-=1),this._iterate(s,i,r)):i===-1&&this._iterate(s,0,r),this}forEachFrom(t,e){let s=this._search(t);for(;s>=0&&this._timeline[s].time>=t;)s--;return this._iterate(e,s+1),this}forEachAtTime(t,e){const s=this._search(t);if(s!==-1&&re(this._timeline[s].time,t)){let i=s;for(let r=s;r>=0&&re(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{e(r)},i,s)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Na=[];function Yn(n){Na.push(n)}function jp(n){Na.forEach(t=>t(n))}const Ma=[];function Jn(n){Ma.push(n)}function Up(n){Ma.forEach(t=>t(n))}class Zs extends Ae{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(i=>{Zt(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(e)}),this}once(t,e){const s=(...i)=>{e(...i),this.off(t,s)};return this.on(t,s),this}off(t,e){return t.split(/\W+/).forEach(i=>{if(Zt(this._events)&&(this._events={}),this._events.hasOwnProperty(i))if(Zt(e))this._events[i]=[];else{const r=this._events[i];for(let o=r.length-1;o>=0;o--)r[o]===e&&r.splice(o,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const s=this._events[t].slice(0);for(let i=0,r=s.length;i<r;i++)s[i].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const s=Object.getOwnPropertyDescriptor(Zs.prototype,e);Object.defineProperty(t.prototype,e,s)})}dispose(){return super.dispose(),this._events=void 0,this}}class Ra extends Zs{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Xs extends Ra{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new Kt,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const s=S(Xs.getDefaults(),arguments,["context"]);s.context?(this._context=s.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=Rp({latencyHint:s.latencyHint}),this._latencyHint=s.latencyHint),this._ticker=new Vp(this.emit.bind(this,"tick"),s.clockSource,s.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=s.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(jp(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,s){return this._context.createBuffer(t,e,s)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,s){return this._context.createPeriodicWave(t,e,s)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return P(is(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return P(is(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return P(is(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){P(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){P(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){P(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){P(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return qp(this.rawContext,t,e)}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){P(Q(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return lt(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return is(this._context)?this._context.resume():Promise.resolve()}close(){return lt(this,void 0,void 0,function*(){is(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&Up(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),s=e.getChannelData(0);for(let r=0;r<s.length;r++)s[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this.close(),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const s=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:s+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const s=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:s,time:r+e})};return i(),s}}class $p extends Ra{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,s){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,s){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function W(n,t){Et(t)?t.forEach(e=>W(n,e)):Object.defineProperty(n,t,{enumerable:!0,writable:!1})}function Ys(n,t){Et(t)?t.forEach(e=>Ys(n,e)):Object.defineProperty(n,t,{writable:!0})}const Y=()=>{};class et extends Ae{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Y;const t=S(et.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,ge(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Y,onload:Y,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Ht().sampleRate}set(t){return t instanceof et?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return lt(this,void 0,void 0,function*(){const e=et.load(t).then(s=>{this.set(s),this.onload(this)});et.downloads.push(e);try{yield e}finally{const s=et.downloads.indexOf(e);et.downloads.splice(s,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Et(t)&&t[0].length>0,s=e?t.length:1,i=e?t[0].length:t.length,r=Ht(),o=r.createBuffer(s,i,r.sampleRate),a=!e&&s===1?[t]:t;for(let c=0;c<s;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(t){if(he(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const s=this.numberOfChannels;for(let i=0;i<s;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(i=>i/s),this.fromArray(e)}return this}toArray(t){if(he(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let s=0;s<this.numberOfChannels;s++)e[s]=this.getChannelData(s);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){P(this.loaded,"Buffer is not loaded");const s=Math.floor(t*this.sampleRate),i=Math.floor(e*this.sampleRate);P(s<i,"The start time must be less than the end time");const r=i-s,o=Ht().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(s,i),a);return new et(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new et().fromArray(t)}static fromUrl(t){return lt(this,void 0,void 0,function*(){return yield new et().load(t)})}static load(t){return lt(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const c=e[1].split("|");let h=c[0];for(const l of c)if(et.supportsType(l)){h=l;break}t=t.replace(e[0],h)}const s=et.baseUrl===""||et.baseUrl.endsWith("/")?et.baseUrl:et.baseUrl+"/",i=document.createElement("a");i.href=s+t,i.pathname=(i.pathname+i.hash).split("/").map(encodeURIComponent).join("/");const r=yield fetch(i.href);if(!r.ok)throw new Error(`could not load url: ${t}`);const o=yield r.arrayBuffer();return yield Ht().decodeAudioData(o)})}static supportsType(t){const e=t.split("."),s=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+s)!==""}static loaded(){return lt(this,void 0,void 0,function*(){for(yield Promise.resolve();et.downloads.length;)yield et.downloads[0]})}}et.baseUrl="";et.downloads=[];class Kn extends Xs{constructor(){super({clockSource:"offline",context:fn(arguments[0])?arguments[0]:Fp(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:fn(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=fn(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return lt(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const s=Math.floor(this.sampleRate/128);t&&e%s===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(){return lt(this,arguments,void 0,function*(t=!0){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new et(e)})}close(){return Promise.resolve()}}const Fa=new $p;let os=Fa;function Ht(){return os===Fa&&Ip&&Gp(new Xs),os}function Gp(n,t=!1){t&&os.dispose(),is(n)?os=new Xs(n):fn(n)?os=new Kn(n):os=n}if(Ft&&!Ft.TONE_SILENCE_LOGGING){const t=` * Tone.js v${Fo} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function Cn(n){return Math.pow(10,n/20)}function ti(n){return 20*(Math.log(n)/Math.LN10)}function An(n){return Math.pow(2,n/12)}let ei=440;function Hp(){return ei}function Qp(n){ei=n}function $e(n){return Math.round(Ia(n))}function Ia(n){return 69+12*Math.log2(n/ei)}function qa(n){return ei*Math.pow(2,(n-69)/12)}class ir extends Ae{constructor(t,e,s){super(),this.defaultUnits="s",this._val=e,this._units=s,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const s=parseInt(t,10),i=e==="."?1.5:1;return s===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/s)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,s)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i+=this._beatsToUnits(parseFloat(e))),s&&s!=="0"&&(i+=this._beatsToUnits(parseFloat(s)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof ir&&this.fromType(this._val),Zt(this._val))return this._noArg();if(ge(this._val)&&Zt(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(Fe(this._val)){let t=0;for(const e in this._val)if(Q(this._val[e])){const s=this._val[e],i=new this.constructor(this.context,e).valueOf()*s;t+=i}return t}if(Q(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return ge(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class ae extends ir{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new ae(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const s=new this.constructor(this.context,t).valueOf(),i=this.valueOf(),a=Math.round(i/s)*s-i;return i+a*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let s=e[0],i=new ae(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new ae(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(i-t)&&(s=r,i=o)}),s}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const s=Math.floor(e/this._getTimeSignature());let i=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[s,e,i].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return $e(this.toFrequency())}_now(){return this.context.now()}}class Qt extends ae{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return Hp()}static set A4(t){Qp(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:Qt.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const i=Zp[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?i:Qt.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,s){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i*=this._beatsToUnits(parseFloat(e))),s&&s!=="0"&&(i*=this._beatsToUnits(parseFloat(s)/4)),i}}})}transpose(t){return new Qt(this.context,this.valueOf()*An(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return $e(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/Qt.A4);let s=Math.round(12*e)+57;const i=Math.floor(s/12);return i<0&&(s+=-12*i),Xp[s%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return qa(t)}static ftom(t){return $e(t)}}const Zp={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},Xp=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class cs extends ae{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Dt extends Ae{constructor(){super();const t=S(Dt.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Ht()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return Np(t),new ae(this.context,t).toSeconds()}toFrequency(t){return new Qt(this.context,t).toFrequency()}toTicks(t){return new cs(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(s=>{Zt(t[s])&&delete e[s]}),e}get(){const t=zp(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const s=this[e];Q(s)&&Q(s.value)&&Q(s.setValueAtTime)?t[e]=s.value:s instanceof Dt?t[e]=s._getPartialProperties(t[e]):Et(s)||he(s)||ge(s)||Aa(s)?t[e]=s:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&Q(this[e])&&(this[e]&&Q(this[e].value)&&Q(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof Dt?this[e].set(t[e]):this[e]=t[e])}),this}}class Js extends Kt{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,s){return ee(e,0),this.add(Object.assign({},s,{state:t,time:e})),this}getLastState(t,e){const s=this._search(e);for(let i=s;i>=0;i--){const r=this._timeline[i];if(r.state===t)return r}}getNextState(t,e){const s=this._search(e);if(s!==-1)for(let i=s;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class H extends Dt{constructor(){const t=S(H.getDefaults(),arguments,["param","units","convert"]);for(super(t),this.name="Param",this.overridden=!1,this._minOutput=1e-7,P(Q(t.param)&&(Qe(t.param)||t.param instanceof H),"param must be an AudioParam");!Qe(t.param);)t.param=t.param._param;this._swappable=Q(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new Kt(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,Q(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Dt.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return Q(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return Q(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return Q(this.maxValue)&&Q(this.minValue)&&ee(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?Cn(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?ti(t):t}setValueAtTime(t,e){const s=this.toSeconds(e),i=this._fromType(t);return P(isFinite(i)&&isFinite(s),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,s),this._events.add({time:s,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,s),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),s=this._events.getAfter(e),i=this._events.get(e);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(s===null||s.type==="setValueAtTime")){const o=this._events.getBefore(i.time);let a;o===null?a=this._initialValue:a=o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,e))}else if(s===null)r=i.value;else if(s.type==="linearRampToValueAtTime"||s.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);a===null?o=this._initialValue:o=a.value}s.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,o,s.time,s.value,e):r=this._exponentialInterpolate(i.time,o,s.time,s.value,e)}else r=i.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const s=this._fromType(t),i=this.toSeconds(e);return P(isFinite(s)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this._events.add({time:i,type:"linearRampToValueAtTime",value:s}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(s,i),this}exponentialRampToValueAtTime(t,e){let s=this._fromType(t);s=re(s,0)?this._minOutput:s,this._assertRange(s);const i=this.toSeconds(e);return P(isFinite(s)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:s}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(s,i),this}exponentialRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialRampToValueAtTime(t,s+this.toSeconds(e)),this}linearRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.linearRampToValueAtTime(t,s+this.toSeconds(e)),this}targetRampTo(t,e,s){return s=this.toSeconds(s),this.setRampPoint(s),this.exponentialApproachValueAtTime(t,s,e),this}exponentialApproachValueAtTime(t,e,s){e=this.toSeconds(e),s=this.toSeconds(s);const i=Math.log(s+1)/Math.log(200);return this.setTargetAtTime(t,e,i),this.cancelAndHoldAtTime(e+s*.9),this.linearRampToValueAtTime(t,e+s),this}setTargetAtTime(t,e,s){const i=this._fromType(t);P(isFinite(s)&&s>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(i),P(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:s,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,s),this._param.setTargetAtTime(i,r,s),this}setValueCurveAtTime(t,e,s,i=1){s=this.toSeconds(s),e=this.toSeconds(e);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),e);const o=s/(t.length-1);for(let a=1;a<t.length;a++){const c=this._fromType(t[a])*i;this.linearRampToValueAtTime(this._toType(c),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return P(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),s=this._fromType(this.getValueAtTime(e));P(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+s);const i=this._events.get(e),r=this._events.getAfter(e);return i&&re(i.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(s),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(s),e)),this._events.add({time:e,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,e),this}rampTo(t,e=.1,s){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,s):this.linearRampTo(t,e,s),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const s=this._events.get(e);if(s&&s.type==="setTargetAtTime"){const i=this._events.getAfter(s.time),r=i?i.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){P(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,s,i,r){return s+(e-s)*Math.exp(-(r-t)/i)}_linearInterpolate(t,e,s,i,r){return e+(i-e)*((r-t)/(s-t))}_exponentialInterpolate(t,e,s,i,r){return e*Math.pow(i/e,(r-t)/(s-t))}}class D extends Dt{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return Q(this.input)?Qe(this.input)||this.input instanceof H?1:this.input.numberOfInputs:0}get numberOfOutputs(){return Q(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return Q(t)&&(t instanceof D||Ie(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(s=>{s.channelCount=t.channelCount,s.channelCountMode=t.channelCountMode,s.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();P(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,s=0){return ne(this,t,e,s),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Qs("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,s=0){return Va(this,t,e,s),this}chain(...t){return se(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),Q(this.input)&&(this.input instanceof D?this.input.dispose():Ie(this.input)&&this.input.disconnect()),Q(this.output)&&(this.output instanceof D?this.output.dispose():Ie(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function se(...n){const t=n.shift();n.reduce((e,s)=>(e instanceof D?e.connect(s):Ie(e)&&ne(e,s),s),t)}function ne(n,t,e=0,s=0){for(P(Q(n),"Cannot connect from undefined node"),P(Q(t),"Cannot connect to undefined node"),(t instanceof D||Ie(t))&&P(t.numberOfInputs>0,"Cannot connect to node with no inputs"),P(n.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof D||t instanceof H;)Q(t.input)&&(t=t.input);for(;n instanceof D;)Q(n.output)&&(n=n.output);Qe(t)?n.connect(t,e):n.connect(t,e,s)}function Va(n,t,e=0,s=0){if(Q(t))for(;t instanceof D;)t=t.input;for(;!Ie(n);)Q(n.output)&&(n=n.output);Qe(t)?n.disconnect(t,e):Ie(t)?n.disconnect(t,e,s):n.disconnect()}class I extends D{constructor(){const t=S(I.getDefaults(),arguments,["gain","units"]);super(t),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode,this.gain=new H({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),W(this,"gain")}static getDefaults(){return Object.assign(D.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class ps extends D{constructor(t){super(t),this.onended=Y,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new I({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const s=this.toSeconds(e);return this._startTime!==-1&&s>=this._startTime&&(this._stopTime===-1||s<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(D.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Y})}_startGain(t,e=1){P(this._startTime===-1,"Source cannot be started more than once");const s=this.toSeconds(this._fadeIn);return this._startTime=t+s,this._startTime=Math.max(this._startTime,this.context.currentTime),s>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+s):this._gainNode.gain.exponentialApproachValueAtTime(e,t,s)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){P(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const s=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+s),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Y&&(this.onended(this),this.onended=Y,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),P(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Y,this}}class rr extends ps{constructor(){const t=S(rr.getDefaults(),arguments,["offset"]);super(t),this.name="ToneConstantSource",this._source=this.context.createConstantSource(),ne(this._source,this._gainNode),this.offset=new H({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(ps.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class j extends D{constructor(){const t=S(j.getDefaults(),arguments,["value","units"]);super(t),this.name="Signal",this.override=!0,this.output=this._constantSource=new rr({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(D.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,s=0){return si(this,t,e,s),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,s){return this._param.exponentialRampTo(t,e,s),this}linearRampTo(t,e,s){return this._param.linearRampTo(t,e,s),this}targetRampTo(t,e,s){return this._param.targetRampTo(t,e,s),this}exponentialApproachValueAtTime(t,e,s){return this._param.exponentialApproachValueAtTime(t,e,s),this}setTargetAtTime(t,e,s){return this._param.setTargetAtTime(t,e,s),this}setValueCurveAtTime(t,e,s,i){return this._param.setValueCurveAtTime(t,e,s,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,s){return this._param.rampTo(t,e,s),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function si(n,t,e,s){(t instanceof H||Qe(t)||t instanceof j&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof j&&(t.overridden=!0)),ne(n,t,e,s)}class or extends H{constructor(){const t=S(or.getDefaults(),arguments,["value"]);super(t),this.name="TickParam",this._events=new Kt(1/0),this._multiplier=1,this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(H.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,s){e=this.toSeconds(e),this.setRampPoint(e);const i=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/s,1));for(let a=0;a<=o;a++){const c=s*a+e,h=this._exponentialApproach(r.time,r.value,i,s,c);this.linearRampToValueAtTime(this._toType(h),c)}return this}setValueAtTime(t,e){const s=this.toSeconds(e);super.setValueAtTime(t,e);const i=this._events.get(s),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const s=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const i=this._events.get(s),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,s);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const s=this._fromType(t),i=this._events.get(e),r=Math.round(Math.max((e-i.time)*10,1)),o=(e-i.time)/r;for(let a=0;a<=r;a++){const c=o*a+i.time,h=this._exponentialInterpolate(i.time,i.value,e,s,c);this.linearRampToValueAtTime(this._toType(h),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Zt(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const s=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(s+i)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),s=this._events.get(e);return Math.max(this._getTicksUntilEvent(s,e),0)}getDurationOfTicks(t,e){const s=this.toSeconds(e),i=this.getTicksAtTime(e);return this.getTimeOfTick(i+t)-s}getTimeOfTick(t){const e=this._events.get(t,"ticks"),s=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&s&&s.type==="linearRampToValueAtTime"&&e.value!==s.value){const i=this._fromType(this.getValueAtTime(e.time)),o=(this._fromType(this.getValueAtTime(s.time))-i)/(s.time-e.time),a=Math.sqrt(Math.pow(i,2)-2*o*(e.ticks-t)),c=(-i+a)/o,h=(-i-a)/o;return(c>0?c:h)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const s=this.toSeconds(e),i=this.toSeconds(t),r=this.getTicksAtTime(s);return this.getTicksAtTime(s+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class ar extends j{constructor(){const t=S(ar.getDefaults(),arguments,["value"]);super(t),this.name="TickSignal",this.input=this._param=new or({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(j.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class cr extends Dt{constructor(){const t=S(cr.getDefaults(),arguments,["frequency"]);super(t),this.name="TickSource",this._state=new Js,this._tickOffset=new Kt,this._ticksAtTime=new Kt,this._secondsAtTime=new Kt,this.frequency=new ar({context:this.context,units:t.units,value:t.frequency}),W(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Dt.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const s=this.toSeconds(t);return this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),Q(e)&&this.setTicksAtTime(e,s),this._ticksAtTime.cancel(s),this._secondsAtTime.cancel(s)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const s=this._state.get(e);s&&s.time>0&&(this._tickOffset.cancel(s.time),this._state.cancel(s.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),s=this._state.getLastState("stopped",e),i=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let o=i||s,a=i?i.ticks:0,c=null;return this._state.forEachBetween(o.time,e+this.sampleTime,h=>{let l=o.time;const u=this._tickOffset.get(h.time);u&&u.time>=o.time&&(a=u.ticks,l=u.time),o.state==="started"&&h.state!=="started"&&(a+=this.frequency.getTicksAtTime(h.time)-this.frequency.getTicksAtTime(l),h.time!==r.time&&(c={state:h.state,time:h.time,ticks:a})),o=h}),this._state.remove(r),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),s=this.frequency.timeToTicks(t,e);this.setTicksAtTime(s,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),s={state:"paused",time:t};this._state.add(s);const i=this._secondsAtTime.get(t);let r=i||e,o=i?i.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,c=>{let h=r.time;const l=this._tickOffset.get(c.time);l&&l.time>=r.time&&(o=l.seconds,h=l.time),r.state==="started"&&c.state!=="started"&&(o+=c.time-h,c.time!==s.time&&(a={state:c.state,time:c.time,seconds:o})),r=c}),this._state.remove(s),a&&this._secondsAtTime.add(a),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const s=this._tickOffset.get(e),i=this._state.get(e),r=Math.max(s.time,i.time),o=this.frequency.getTicksAtTime(r)+t-s.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,s){let i=this._state.get(t);this._state.forEachBetween(t,e,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),o.time-this.sampleTime,s),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,t),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(i.time),h=a-c;let l=Math.ceil(h)-h;l=re(l,1)?0:l;let u=this.frequency.getTimeOfTick(a+l);for(;u<e;){try{s(u,Math.round(this.getTicksAtTime(u)))}catch(p){r=p;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class ni extends Dt{constructor(){const t=S(ni.getDefaults(),arguments,["callback","frequency"]);super(t),this.name="Clock",this.callback=Y,this._lastUpdate=0,this._state=new Js("stopped"),this._boundLoop=this._loop.bind(this),this.callback=t.callback,this._tickSource=new cr({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,W(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Dt.getDefaults(),{callback:Y,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){Ea(this.context);const s=this.toSeconds(t);return this.log("start",s),this._state.getValueAtTime(s)!=="started"&&(this._state.setStateAtTime("started",s),this._tickSource.start(s,e),s<this._lastUpdate&&this.emit("start",s,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const s=this.toSeconds(e),i=this.getTicksAtTime(s);return this._tickSource.getTimeOfTick(i+t,s)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,s=>{switch(s.state){case"started":const i=this._tickSource.getTicksAtTime(s.time);this.emit("start",s.time,i);break;case"stopped":s.time!==0&&this.emit("stop",s.time);break;case"paused":this.emit("pause",s.time);break}}),this._tickSource.forEachTickBetween(t,e,(s,i)=>{this.callback(s,i)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Zs.mixin(ni);class te extends D{constructor(){const t=S(te.getDefaults(),arguments,["delayTime","maxDelay"]);super(t),this.name="Delay";const e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new H({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),W(this,"delayTime")}static getDefaults(){return Object.assign(D.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}class Ke extends D{constructor(){const t=S(Ke.getDefaults(),arguments,["volume"]);super(t),this.name="Volume",this.input=this.output=new I({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,W(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class hr extends D{constructor(){const t=S(hr.getDefaults(),arguments);super(t),this.name="Destination",this.input=new Ke({context:this.context}),this.output=new I({context:this.context}),this.volume=this.input.volume,se(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),se(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}Yn(n=>{n.destination=new hr({context:n})});Jn(n=>{n.destination.dispose()});class Yp extends D{constructor(){super(...arguments),this.name="Listener",this.positionX=new H({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new H({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new H({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new H({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new H({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new H({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new H({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new H({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new H({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(D.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}Yn(n=>{n.listener=new Yp({context:n})});Jn(n=>{n.listener.dispose()});class lr extends Ae{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=S(lr.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const s=t.urls[e];this.add(e,s,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Y,onload:Y,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return P(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,s=Y,i=Y){return ge(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new et(this.baseUrl+e,s,i))):this._buffers.set(t.toString(),new et(e,s,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class En extends Qt{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(t){return $e(super._frequencyToUnits(t))}_ticksToUnits(t){return $e(super._ticksToUnits(t))}_beatsToUnits(t){return $e(super._beatsToUnits(t))}_secondsToUnits(t){return $e(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return qa(this.toMidi())}transpose(t){return new En(this.context,this.toMidi()+t)}}class pt extends cs{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class Jp extends Dt{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Kt,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}Yn(n=>{n.draw=new Jp({context:n})});Jn(n=>{n.draw.dispose()});class Kp extends Ae{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){P(Q(t.time),"Events must have a time property"),P(Q(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new tf(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const s of e)if(s.event===t){this._removeNode(s),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let s,i=null;if(e>0)if(t.left.right===null)s=t.left,s.right=t.right,i=s;else{for(s=t.left.right;s.right!==null;)s=s.right;s.parent&&(s.parent.right=s.left,i=s.parent,s.left=t.left,s.right=t.right)}else if(t.right.left===null)s=t.right,s.left=t.left,i=s;else{for(s=t.right.left;s.left!==null;)s=s.left;s.parent&&(s.parent.left=s.right,i=s.parent,s.left=t.left,s.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=s:t.parent.right=s:this._setRoot(s),i&&this._rebalance(i)}t.dispose()}_rotateLeft(t){const e=t.parent,s=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),e!==null?s?e.left=i:e.right=i:this._setRoot(i)}_rotateRight(t){const e=t.parent,s=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),e!==null?s?e.left=i:e.right=i:this._setRoot(i)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let s=e[0];for(let i=1;i<e.length;i++)e[i].low>s.low&&(s=e[i]);return s.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(s=>e.push(s)),e.forEach(s=>{s.event&&t(s.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const s=[];this._root.search(t,s),s.forEach(i=>{i.event&&e(i.event)})}return this}forEachFrom(t,e){if(this._root!==null){const s=[];this._root.searchAfter(t,s),s.forEach(i=>{i.event&&e(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class tf{constructor(t,e,s){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=s,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class ef extends Ae{constructor(t){super(),this.name="TimelineValue",this._timeline=new Kt({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class Xt extends D{constructor(){super(S(Xt.getDefaults(),arguments,["context"]))}connect(t,e=0,s=0){return si(this,t,e,s),this}}class we extends Xt{constructor(){const t=S(we.getDefaults(),arguments,["mapping","length"]);super(t),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper,Et(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):Op(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(j.getDefaults(),{length:1024})}setMap(t,e=1024){const s=new Float32Array(e);for(let i=0,r=e;i<r;i++){const o=i/(r-1)*2-1;s[i]=t(o,i)}return this.curve=s,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(s=>s.includes(t));P(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Ks extends Xt{constructor(){const t=S(Ks.getDefaults(),arguments,["value"]);super(t),this.name="Pow",this._exponentScaler=this.input=this.output=new we({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Xt.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class qe{constructor(t,e){this.id=qe._eventId++,this._remainderTime=0;const s=Object.assign(qe.getDefaults(),e);this.transport=t,this.callback=s.callback,this._once=s.once,this.time=Math.floor(s.time),this._remainderTime=s.time-this.time}static getDefaults(){return{callback:Y,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}qe._eventId=0;class ur extends qe{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const s=Object.assign(ur.getDefaults(),e);this.duration=s.duration,this._interval=s.interval,this._nextTick=s.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},qe.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return kn(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new pt(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){kn(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new pt(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);ds(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class ii extends Dt{constructor(){const t=S(ii.getDefaults(),arguments);super(t),this.name="Transport",this._loop=new ef(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Kt,this._repeatedEvents=new Kp,this._syncedSignals=[],this._swingAmount=0,this._ppq=t.ppq,this._clock=new ni({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),W(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(Dt.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const s=e%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(s*Math.PI)*this._swingAmount;t+=new pt(this.context,this._swingTicks*2/3).toSeconds()*i}yo(!0),this._timeline.forEachAtTime(e,s=>s.invoke(t)),yo(!1)}schedule(t,e){const s=new qe(this,{callback:t,time:new cs(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}scheduleRepeat(t,e,s,i=1/0){const r=new ur(this,{callback:t,duration:new ae(this.context,i).toTicks(),interval:new ae(this.context,e).toTicks(),time:new cs(this.context,s).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const s=new qe(this,{callback:t,once:!0,time:new cs(this.context,e).toTicks()});return this._addEvent(s,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,s=>this.clear(s.id)),this._repeatedEvents.forEachFrom(e,s=>this.clear(s.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new pt(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){this.context.resume();let s;return Q(e)&&(s=this.toTicks(e)),this._clock.start(t,s),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Et(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new ae(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new ae(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new pt(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new pt(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),s=this._clock.frequency.timeToTicks(t,e);this.ticks=s}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const s=this._clock.getTicksAtTime(e),i=this._clock.frequency.getDurationOfTicks(Math.ceil(s)-s,e),r=e+i;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),s=this.getTicksAtTime(e),i=t-s%t;return this._clock.nextTickTime(i,e)}}syncSignal(t,e){const s=this.now();let i=this.bpm,r=1/(60/i.getValueAtTime(s)/this.PPQ),o=[];if(t.units==="time"){const c=.015625/r,h=new I(c),l=new Ks(-1),u=new I(c);i.chain(h,l,u),i=u,r=1/r,o=[h,l,u]}e||(t.getValueAtTime(s)!==0?e=t.getValueAtTime(s)/r:e=0);const a=new I(e);return i.connect(a),a.connect(t._param),o.push(a),this._syncedSignals.push({initial:t.value,nodes:o,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const s=this._syncedSignals[e];s.signal===t&&(s.nodes.forEach(i=>i.dispose()),s.signal.value=s.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Ys(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Zs.mixin(ii);Yn(n=>{n.transport=new ii({context:n})});Jn(n=>{n.transport.dispose()});class vt extends D{constructor(t){super(t),this.input=void 0,this._state=new Js("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Y,this._syncedStop=Y,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new Ke({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,W(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,onstop:Y,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,s){let i=Zt(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")P(ds(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,e,s);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(pe(e,0)),r.duration=s?this.toSeconds(s):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,s)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else Ea(this.context),this._start(i,e,s);return this}stop(t){let e=Zt(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||Q(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const s=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(s)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,s){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,s)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(ds(e,0)){const s=this._state.get(e);if(s&&s.state==="started"&&s.time!==e){const i=e-this.toSeconds(s.time);let r;s.duration&&(r=this.toSeconds(s.duration)-i),this._start(t,this.toSeconds(s.offset)+i,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Y,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class tn extends ps{constructor(){const t=S(tn.getDefaults(),arguments,["url","onload"]);super(t),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1,ne(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new H({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new et(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(ps.getDefaults(),{url:new et,loop:!1,loopEnd:0,loopStart:0,onload:Y,onerror:Y,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,s,i=1){P(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),this.loop?e=pe(e,this.loopStart):e=pe(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),h=a-c;Ni(o,a)&&(o=(o-c)%h+c),re(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,kn(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),Q(s)){let a=this.toSeconds(s);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Ze extends vt{constructor(){const t=S(Ze.getDefaults(),arguments,["type"]);super(t),this.name="Noise",this._source=null,this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(vt.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(P(t in vo,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=vo[this._type];this._source=new tn({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const ns=44100*5,bi=2,xe={brown:null,pink:null,white:null},vo={get brown(){if(!xe.brown){const n=[];for(let t=0;t<bi;t++){const e=new Float32Array(ns);n[t]=e;let s=0;for(let i=0;i<ns;i++){const r=Math.random()*2-1;e[i]=(s+.02*r)/1.02,s=e[i],e[i]*=3.5}}xe.brown=new et().fromArray(n)}return xe.brown},get pink(){if(!xe.pink){const n=[];for(let t=0;t<bi;t++){const e=new Float32Array(ns);n[t]=e;let s,i,r,o,a,c,h;s=i=r=o=a=c=h=0;for(let l=0;l<ns;l++){const u=Math.random()*2-1;s=.99886*s+u*.0555179,i=.99332*i+u*.0750759,r=.969*r+u*.153852,o=.8665*o+u*.3104856,a=.55*a+u*.5329522,c=-.7616*c-u*.016898,e[l]=s+i+r+o+a+c+h+u*.5362,e[l]*=.11,h=u*.115926}}xe.pink=new et().fromArray(n)}return xe.pink},get white(){if(!xe.white){const n=[];for(let t=0;t<bi;t++){const e=new Float32Array(ns);n[t]=e;for(let s=0;s<ns;s++)e[s]=Math.random()*2-1}xe.white=new et().fromArray(n)}return xe.white}};function ts(n,t){return lt(this,void 0,void 0,function*(){const e=t/n.context.sampleRate,s=new Kn(1,e,n.context.sampleRate);return new n.constructor(Object.assign(n.get(),{frequency:2/e,detune:0,context:s})).toDestination().start(0),(yield s.render()).getChannelData(0)})}class ri extends ps{constructor(){const t=S(ri.getDefaults(),arguments,["frequency","type"]);super(t),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator],ne(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new H({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new H({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),W(this,["frequency","detune"])}static getDefaults(){return Object.assign(ps.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class ht extends vt{constructor(){const t=S(ht.getDefaults(),arguments,["frequency","type"]);super(t),this.name="Oscillator",this._oscillator=null,this.frequency=new j({context:this.context,units:"frequency",value:t.frequency}),W(this,"frequency"),this.detune=new j({context:this.context,units:"cents",value:t.detune}),W(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(vt.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),s=new ri({context:this.context,onended:()=>this.onstop(this)});this._oscillator=s,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return ht._periodicWaveCache.find(e=>e.phase===this._phase&&Wp(e.partials,this._partials));{const t=ht._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const s=this._getCachedPeriodicWave();if(Q(s)){const{partials:i,wave:r}=s;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),ht._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),ht._periodicWaveCache.length>100&&ht._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){ee(t,0);let e=this._type;const s=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(s&&(e=s[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,e){let i=2048;const r=new Float32Array(i),o=new Float32Array(i);let a=1;if(t==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,i=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],a=Math.max(a,2),i=a):this._partialCount=0,this._partials=[]}for(let c=1;c<i;++c){const h=2/(c*Math.PI);let l;switch(t){case"sine":l=c<=a?1:0,this._partials[c-1]=l;break;case"square":l=c&1?2*h:0,this._partials[c-1]=l;break;case"sawtooth":l=h*(c&1?1:-1),this._partials[c-1]=l;break;case"triangle":c&1?l=2*(h*h)*(c-1>>1&1?-1:1):l=0,this._partials[c-1]=l;break;case"custom":l=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}l!==0?(r[c]=-l*Math.sin(e*c),o[c]=l*Math.cos(e*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(t,e,s){let i=0;const r=t.length;for(let o=0;o<r;o++)i+=t[o]*Math.cos(o*s)+e[o]*Math.sin(o*s);return i}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let s=0;const i=Math.PI*2,r=32;for(let o=0;o<r;o++)s=Math.max(this._inverseFFT(t,e,o/r*i),s);return Bp(-this._inverseFFT(t,e,this._phase)/s,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ts(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}ht._periodicWaveCache=[];class dr extends Xt{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new we({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ut extends j{constructor(){const t=S(ut.getDefaults(),arguments,["value"]);super(t),this.name="Multiply",this.override=!1,this._mult=this.input=this.output=new I({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(j.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class oi extends vt{constructor(){const t=S(oi.getDefaults(),arguments,["frequency","type","modulationType"]);super(t),this.name="AMOscillator",this._modulationScale=new dr({context:this.context}),this._modulationNode=new I({context:this.context}),this._carrier=new ht({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new ht({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ut({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),W(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ht.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ts(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class en extends vt{constructor(){const t=S(en.getDefaults(),arguments,["frequency","type","modulationType"]);super(t),this.name="FMOscillator",this._modulationNode=new I({context:this.context,gain:0}),this._carrier=new ht({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new j({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new ht({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ut({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new ut({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),W(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ht.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ts(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class sn extends vt{constructor(){const t=S(sn.getDefaults(),arguments,["frequency","width"]);super(t),this.name="PulseOscillator",this._widthGate=new I({context:this.context,gain:0}),this._thresh=new we({context:this.context,mapping:e=>e<=0?-1:1}),this.width=new j({context:this.context,units:"audioRange",value:t.width}),this._triangle=new ht({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),W(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(vt.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ts(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class ai extends vt{constructor(){const t=S(ai.getDefaults(),arguments,["frequency","type","spread"]);super(t),this.name="FatOscillator",this._oscillators=[],this.frequency=new j({context:this.context,units:"frequency",value:t.frequency}),this.detune=new j({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,W(this,["frequency","detune"])}static getDefaults(){return Object.assign(ht.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,s=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=e+s*r)}}get count(){return this._oscillators.length}set count(t){if(ee(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const s=new ht({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):Y});this.type==="custom"&&(s.partials=this._partials),this.frequency.connect(s.frequency),this.detune.connect(s.detune),s.detune.overridden=!1,s.connect(this.output),this._oscillators[e]=s}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,s)=>e.phase=this._phase+s/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ts(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class ci extends vt{constructor(){const t=S(ci.getDefaults(),arguments,["frequency","modulationFrequency"]);super(t),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new ut({context:this.context,value:2}),this._pulse=new sn({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new ht({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),W(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(vt.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ts(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const bo={am:oi,fat:ai,fm:en,oscillator:ht,pulse:sn,pwm:ci};class Ve extends vt{constructor(){const t=S(Ve.getDefaults(),arguments,["frequency","type"]);super(t),this.name="OmniOscillator",this.frequency=new j({context:this.context,units:"frequency",value:t.frequency}),this.detune=new j({context:this.context,units:"cents",value:t.detune}),W(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(ht.getDefaults(),en.getDefaults(),oi.getDefaults(),ai.getDefaults(),sn.getDefaults(),ci.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=bo[t],s=this.now();if(this._oscillator){const i=this._oscillator;i.stop(s),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(s)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof bo[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&he(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&he(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&ge(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(){return lt(this,arguments,void 0,function*(t=1024){return ts(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class ws extends j{constructor(){super(S(ws.getDefaults(),arguments,["value"])),this.override=!1,this.name="Add",this._sum=new I({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,se(this._constantSource,this._sum)}static getDefaults(){return Object.assign(j.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Xe extends Xt{constructor(){const t=S(Xe.getDefaults(),arguments,["min","max"]);super(t),this.name="Scale",this._mult=this.input=new ut({context:this.context,value:t.max-t.min}),this._add=this.output=new ws({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Xt.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class pr extends Xt{constructor(){super(S(pr.getDefaults(),arguments)),this.name="Zero",this._gain=new I({context:this.context}),this.output=this._gain,this.input=void 0,ne(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Va(this.context.getConstant(0),this._gain),this}}class Wt extends D{constructor(){const t=S(Wt.getDefaults(),arguments,["frequency","min","max"]);super(t),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=H.prototype._fromType,this._toType=H.prototype._toType,this._is=H.prototype._is,this._clampValue=H.prototype._clampValue,this._oscillator=new ht(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new I({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new j({context:this.context,units:"audioRange",value:0}),this._zeros=new pr({context:this.context}),this._a2g=new dr({context:this.context}),this._scaler=this.output=new Xe({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),W(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(ht.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,s=this.max;this._units=t,this.min=e,this.max=s}get state(){return this._oscillator.state}connect(t,e,s){return(t instanceof H||t instanceof j)&&(this.convert=t.convert,this.units=t.units),si(this,t,e,s),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function Pa(n,t=1/0){const e=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){ee(r,n,t),e.set(this,r)}})}}function Ee(n,t=1/0){const e=new WeakMap;return function(s,i){Reflect.defineProperty(s,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){ee(this.toSeconds(r),n,t),e.set(this,r)}})}}class hi extends vt{constructor(){const t=S(hi.getDefaults(),arguments,["url","onload"]);super(t),this.name="Player",this._activeSources=new Set,this._buffer=new et({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(vt.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Y,onerror:Y,playbackRate:1,reverse:!1})}load(t){return lt(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=Y){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,s){return super.start(t,e,s),this}_start(t,e,s){this._loop?e=pe(e,this._loopStart):e=pe(e,0);const i=this.toSeconds(e),r=s;s=pe(s,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(s);o=o/this._playbackRate,t=this.toSeconds(t);const a=new tn({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Zt(r)?a.start(t,i):a.start(t,i,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(s=>s.stop(e))}restart(t,e,s){return super.restart(t,e,s),this}_restart(t,e,s){var i;(i=[...this._activeSources].pop())===null||i===void 0||i.stop(t),this._start(t,e,s)}seek(t,e){const s=this.toSeconds(e);if(this._state.getValueAtTime(s)==="started"){const i=this.toSeconds(t);this._stop(s),this._start(s,i)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&ee(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&ee(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),s=this._state.getNextState("stopped",e);s&&s.implicitEnd&&(this._state.cancel(s.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}de([Ee(0)],hi.prototype,"fadeIn",void 0);de([Ee(0)],hi.prototype,"fadeOut",void 0);class sf extends Xt{constructor(){super(...arguments),this.name="Abs",this._abs=new we({context:this.context,mapping:t=>Math.abs(t)<.001?0:Math.abs(t)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class nf extends Xt{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new we({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class La extends Xt{constructor(){super(...arguments),this.name="Negate",this._multiply=new ut({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class xs extends j{constructor(){super(S(xs.getDefaults(),arguments,["value"])),this.override=!1,this.name="Subtract",this._sum=new I({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new La({context:this.context}),this.subtrahend=this._param,se(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(j.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class fr extends Xt{constructor(){super(S(fr.getDefaults(),arguments)),this.name="GreaterThanZero",this._thresh=this.output=new we({context:this.context,length:127,mapping:t=>t<=0?0:1}),this._scale=this.input=new ut({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class mr extends j{constructor(){const t=S(mr.getDefaults(),arguments,["value"]);super(t),this.name="GreaterThan",this.override=!1,this._subtract=this.input=new xs({context:this.context,value:t.value}),this._gtz=this.output=new fr({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,W(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(j.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class gr extends Xe{constructor(){const t=S(gr.getDefaults(),arguments,["min","max","exponent"]);super(t),this.name="ScaleExp",this.input=this._exp=new Ks({context:this.context,value:t.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(Xe.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(t){this._exp.value=t}dispose(){return super.dispose(),this._exp.dispose(),this}}class Ot extends D{constructor(){const t=S(Ot.getDefaults(),arguments,["attack","decay","sustain","release"]);super(t),this.name="Envelope",this._sig=new j({context:this.context,value:0}),this.output=this._sig,this.input=void 0,this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(D.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(ge(t))return t;{let s;for(s in dn)if(dn[s][e]===t)return s;return t}}_setCurve(t,e,s){if(ge(s)&&Reflect.has(dn,s)){const i=dn[s];Fe(i)?t!=="_decayCurve"&&(this[t]=i[e]):this[t]=i}else if(Et(s)&&t!=="_decayCurve")this[t]=s;else throw new Error("Envelope: invalid curve: "+s)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(t);if(o>0){const a=1/i;i=(1-o)/a}if(i<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,i,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,i,t);else{this._sig.cancelAndHoldAtTime(t);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,t,i,e)}if(r&&this.sustain<1){const a=e*this.sustain,c=t+i;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const s=this.toSeconds(this.release);s<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,s,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,s,t):(P(Et(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,s,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),this.triggerAttack(e,s),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,s=0){return si(this,t,e,s),this}asArray(){return lt(this,arguments,void 0,function*(t=1024){const e=t/this.context.sampleRate,s=new Kn(1,e,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:s}));return c._sig.toDestination(),c.triggerAttackRelease(e*(i+o)/a,0),(yield s.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}de([Ee(0)],Ot.prototype,"attack",void 0);de([Ee(0)],Ot.prototype,"decay",void 0);de([Pa(0,1)],Ot.prototype,"sustain",void 0);de([Ee(0)],Ot.prototype,"release",void 0);const dn=(()=>{let t,e;const s=[];for(t=0;t<128;t++)s[t]=Math.sin(t/127*(Math.PI/2));const i=[],r=6.4;for(t=0;t<127;t++){e=t/127;const p=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;i[t]=p/10+e*.83}i[127]=1;const o=[],a=5;for(t=0;t<128;t++)o[t]=Math.ceil(t/127*a)/a;const c=[];for(t=0;t<128;t++)e=t/127,c[t]=.5*(1-Math.cos(Math.PI*e));const h=[];for(t=0;t<128;t++){e=t/127;const p=Math.pow(e,3)*4+.2,f=Math.cos(p*Math.PI*2*e);h[t]=Math.abs(f*(1-e))}function l(p){const f=new Array(p.length);for(let d=0;d<p.length;d++)f[d]=1-p[d];return f}function u(p){return p.slice(0).reverse()}return{bounce:{In:l(h),Out:h},cosine:{In:s,Out:u(s)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:l(i)},sine:{In:c,Out:l(c)},step:{In:o,Out:l(o)}}})();let _e=class Wa extends D{constructor(){const t=S(Wa.getDefaults(),arguments);super(t),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e),this._volume=this.output=new Ke({context:this.context,volume:t.volume}),this.volume=this._volume.volume,W(this,"volume")}static getDefaults(){return Object.assign(D.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const s=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[e],o=this.context.transport.schedule(a=>{i[e]=a,s.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,s,i){const r=this.toSeconds(s),o=this.toSeconds(e);return this.triggerAttack(t,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}};class kt extends _e{constructor(){const t=S(kt.getDefaults(),arguments);super(t),this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(_e.getDefaults(),{detune:0,onsilence:Y,portamento:0})}triggerAttack(t,e,s=1){this.log("triggerAttack",t,e,s);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,s),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const s=this.toSeconds(e),i=t instanceof Qt?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(s)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,s)}else this.frequency.setValueAtTime(i,s);return this}}de([Ee(0)],kt.prototype,"portamento",void 0);class nn extends Ot{constructor(){super(S(nn.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new I({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Pe extends kt{constructor(){const t=S(Pe.getDefaults(),arguments);super(t),this.name="Synth",this.oscillator=new Ve(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new nn(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),W(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(kt.getDefaults(),{envelope:Object.assign(St(Ot.getDefaults(),Object.keys(D.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(St(Ve.getDefaults(),[...Object.keys(vt.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+s+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class qs extends kt{constructor(){const t=S(qs.getDefaults(),arguments);super(t),this.name="ModulationSynth",this._carrier=new Pe({context:this.context,oscillator:t.oscillator,envelope:t.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Pe({context:this.context,oscillator:t.modulation,envelope:t.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new j({context:this.context,units:"frequency"}),this.detune=new j({context:this.context,value:t.detune,units:"cents"}),this.harmonicity=new ut({context:this.context,value:t.harmonicity,minValue:0}),this._modulationNode=new I({context:this.context,gain:0}),W(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(kt.getDefaults(),{harmonicity:3,oscillator:Object.assign(St(Ve.getDefaults(),[...Object.keys(vt.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(St(Ot.getDefaults(),Object.keys(D.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(St(Ve.getDefaults(),[...Object.keys(vt.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(St(Ot.getDefaults(),Object.keys(D.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(t,e){this._carrier._triggerEnvelopeAttack(t,e),this._modulator._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this._carrier._triggerEnvelopeRelease(t),this._modulator._triggerEnvelopeRelease(t),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class _r extends qs{constructor(){super(S(_r.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new dr({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class Dn extends D{constructor(){const t=S(Dn.getDefaults(),arguments,["frequency","type"]);super(t),this.name="BiquadFilter",this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new H({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new H({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new H({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new H({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(D.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){P(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let o=0;o<t;o++){const c=Math.pow(o/t,2)*19980+20;e[o]=c}const s=new Float32Array(t),i=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,s,i),s}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class Lt extends D{constructor(){const t=S(Lt.getDefaults(),arguments,["frequency","type","rolloff"]);super(t),this.name="Filter",this.input=new I({context:this.context}),this.output=new I({context:this.context}),this._filters=[],this._filters=[],this.Q=new j({context:this.context,units:"positive",value:t.Q}),this.frequency=new j({context:this.context,units:"frequency",value:t.frequency}),this.detune=new j({context:this.context,units:"cents",value:t.detune}),this.gain=new j({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,W(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(D.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){P(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(s=>s.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=he(t)?t:parseInt(t,10),s=[-12,-24,-48,-96];let i=s.indexOf(e);P(i!==-1,`rolloff can only be ${s.join(", ")}`),i+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const o=new Dn({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,se(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new Dn({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),s=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((r,o)=>s[o]*=r)}),e.dispose(),s}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),Ys(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class On extends Ot{constructor(){const t=S(On.getDefaults(),arguments,["attack","decay","sustain","release"]);super(t),this.name="FrequencyEnvelope",this._octaves=t.octaves,this._baseFrequency=this.toFrequency(t.baseFrequency),this._exponent=this.input=new Ks({context:this.context,value:t.exponent}),this._scale=this.output=new Xe({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Ot.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){const e=this.toFrequency(t);ee(e,0),this._baseFrequency=e,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._scale.max=this._baseFrequency*Math.pow(2,t)}get exponent(){return this._exponent.value}set exponent(t){this._exponent.value=t}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class Ge extends kt{constructor(){const t=S(Ge.getDefaults(),arguments);super(t),this.name="MonoSynth",this.oscillator=new Ve(Object.assign(t.oscillator,{context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Lt(Object.assign(t.filter,{context:this.context})),this.filterEnvelope=new On(Object.assign(t.filterEnvelope,{context:this.context})),this.envelope=new nn(Object.assign(t.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),W(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(kt.getDefaults(),{envelope:Object.assign(St(Ot.getDefaults(),Object.keys(D.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(St(Lt.getDefaults(),Object.keys(D.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(St(On.getDefaults(),Object.keys(D.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(St(Ve.getDefaults(),Object.keys(vt.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(t,e=1){if(this.envelope.triggerAttack(t,e),this.filterEnvelope.triggerAttack(t),this.oscillator.start(t),this.envelope.sustain===0){const s=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+s+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.filterEnvelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class yr extends kt{constructor(){const t=S(yr.getDefaults(),arguments);super(t),this.name="DuoSynth",this.voice0=new Ge(Object.assign(t.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new Ge(Object.assign(t.voice1,{context:this.context})),this.harmonicity=new ut({context:this.context,units:"positive",value:t.harmonicity}),this._vibrato=new Wt({frequency:t.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new I({context:this.context,units:"normalRange",gain:t.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new j({context:this.context,units:"frequency",value:440}),this.detune=new j({context:this.context,units:"cents",value:t.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),W(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(t){return t=this.toSeconds(t),this.voice0.envelope.getValueAtTime(t)+this.voice1.envelope.getValueAtTime(t)}static getDefaults(){return Jt(kt.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:Jt(St(Ge.getDefaults(),Object.keys(kt.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:Jt(St(Ge.getDefaults(),Object.keys(kt.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(t,e){this.voice0._triggerEnvelopeAttack(t,e),this.voice1._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this.voice0._triggerEnvelopeRelease(t),this.voice1._triggerEnvelopeRelease(t),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class vr extends qs{constructor(){const t=S(vr.getDefaults(),arguments);super(t),this.name="FMSynth",this.modulationIndex=new ut({context:this.context,value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(qs.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const wo=[1,1.483,1.932,2.546,2.63,3.897];class br extends kt{constructor(){const t=S(br.getDefaults(),arguments);super(t),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[],this.detune=new j({context:this.context,units:"cents",value:t.detune}),this.frequency=new j({context:this.context,units:"frequency"}),this._amplitude=new I({context:this.context,gain:0}).connect(this.output),this._highpass=new Lt({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let e=0;e<wo.length;e++){const s=new en({context:this.context,harmonicity:t.harmonicity,modulationIndex:t.modulationIndex,modulationType:"square",onstop:e===0?()=>this.onsilence(this):Y,type:"square"});s.connect(this._highpass),this._oscillators[e]=s;const i=new ut({context:this.context,value:wo[e]});this._freqMultipliers[e]=i,this.frequency.chain(i,s.frequency),this.detune.connect(s.detune)}this._filterFreqScaler=new Xe({context:this.context,max:7e3,min:this.toFrequency(t.resonance)}),this.envelope=new Ot({attack:t.envelope.attack,attackCurve:"linear",context:this.context,decay:t.envelope.decay,release:t.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=t.octaves,this.octaves=t.octaves}static getDefaults(){return Jt(kt.getDefaults(),{envelope:Object.assign(St(Ot.getDefaults(),Object.keys(D.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(t,e=1){return this.envelope.triggerAttack(t,e),this._oscillators.forEach(s=>s.start(t)),this.envelope.sustain===0&&this._oscillators.forEach(s=>{s.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(t){return this.envelope.triggerRelease(t),this._oscillators.forEach(e=>e.stop(t+this.toSeconds(this.envelope.release))),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(t){this._oscillators.forEach(e=>e.modulationIndex.value=t)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(t){this._oscillators.forEach(e=>e.harmonicity.value=t)}get resonance(){return this._filterFreqScaler.min}set resonance(t){this._filterFreqScaler.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,t)}dispose(){return super.dispose(),this._oscillators.forEach(t=>t.dispose()),this._freqMultipliers.forEach(t=>t.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class rn extends Pe{constructor(){const t=S(rn.getDefaults(),arguments);super(t),this.name="MembraneSynth",this.portamento=0,this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,W(this,["oscillator","envelope"])}static getDefaults(){return Jt(kt.getDefaults(),Pe.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const s=this.toSeconds(e),i=this.toFrequency(t instanceof Qt?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,s),this.oscillator.frequency.exponentialRampToValueAtTime(i,s+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}de([Pa(0)],rn.prototype,"octaves",void 0);de([Ee(0)],rn.prototype,"pitchDecay",void 0);class wr extends _e{constructor(){const t=S(wr.getDefaults(),arguments);super(t),this.name="NoiseSynth",this.noise=new Ze(Object.assign({context:this.context},t.noise)),this.envelope=new nn(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(_e.getDefaults(),{envelope:Object.assign(St(Ot.getDefaults(),Object.keys(D.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(St(Ze.getDefaults(),Object.keys(vt.getDefaults())),{type:"white"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),this.envelope.sustain===0&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(t,e,s=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,s),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const xr=new Set;function Tr(n){xr.add(n)}function za(n,t){const e=`registerProcessor("${n}", ${t})`;xr.add(e)}function rf(){return Array.from(xr).join(`
`)}class Mi extends D{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=Y;const e=URL.createObjectURL(new Blob([rf()],{type:"text/javascript"})),s=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(s,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const of=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;Tr(of);const af=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;Tr(af);const cf=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;Tr(cf);const Ba="feedback-comb-filter",hf=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;za(Ba,hf);class Sr extends Mi{constructor(){const t=S(Sr.getDefaults(),arguments,["delayTime","resonance"]);super(t),this.name="FeedbackCombFilter",this.input=new I({context:this.context}),this.output=new I({context:this.context}),this.delayTime=new H({context:this.context,value:t.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new H({context:this.context,value:t.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),W(this,["resonance","delayTime"])}_audioWorkletName(){return Ba}static getDefaults(){return Object.assign(D.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){se(this.input,t,this.output);const e=t.parameters.get("delayTime");this.delayTime.setParam(e);const s=t.parameters.get("feedback");this.resonance.setParam(s)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class li extends D{constructor(){const t=S(li.getDefaults(),arguments,["frequency","type"]);super(t),this.name="OnePoleFilter",this._frequency=t.frequency,this._type=t.type,this.input=new I({context:this.context}),this.output=new I({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(D.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const t=this._filter,e=this.toFrequency(this._frequency),s=1/(2*Math.PI*e);if(this._type==="lowpass"){const i=1/(s*this.context.sampleRate),r=i-1;this._filter=this.context.createIIRFilter([i,0],[1,r])}else{const i=1/(s*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,i])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(t),t.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let r=0;r<t;r++){const a=Math.pow(r/t,2)*19980+20;e[r]=a}const s=new Float32Array(t),i=new Float32Array(t);return this._filter.getFrequencyResponse(e,s,i),s}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class ui extends D{constructor(){const t=S(ui.getDefaults(),arguments,["delayTime","resonance","dampening"]);super(t),this.name="LowpassCombFilter",this._combFilter=this.output=new Sr({context:this.context,delayTime:t.delayTime,resonance:t.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new li({context:this.context,frequency:t.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(D.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(t){this._lowpass.frequency=t}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class kr extends _e{constructor(){const t=S(kr.getDefaults(),arguments);super(t),this.name="PluckSynth",this._noise=new Ze({context:this.context,type:"pink"}),this.attackNoise=t.attackNoise,this._lfcf=new ui({context:this.context,dampening:t.dampening,resonance:t.resonance}),this.resonance=t.resonance,this.release=t.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return Jt(_e.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(t){this._lfcf.dampening=t}triggerAttack(t,e){const s=this.toFrequency(t);e=this.toSeconds(e);const i=1/s;return this._lfcf.delayTime.setValueAtTime(i,e),this._noise.start(e),this._noise.stop(e+i*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(e),this._lfcf.resonance.setValueAtTime(this.resonance,e),this}triggerRelease(t){return this._lfcf.resonance.linearRampTo(0,this.release,t),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class Cr extends _e{constructor(){const t=S(Cr.getDefaults(),arguments,["voice","options"]);super(t),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=i=>this.releaseAll(i),P(!he(t.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const e=t.voice.getDefaults();this.options=Object.assign(e,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const s=this._voices.indexOf(this._dummyVoice);this._voices.splice(s,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(_e.getDefaults(),{maxPolyphony:32,options:{},voice:Pe})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex(s=>s.voice===t);this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return P(t instanceof kt,"Voice must extend Monophonic class"),t.connect(this.output),this._voices.push(t),t}else Qs("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,s){t.forEach(i=>{const r=new En(this.context,i).toMidi(),o=this._getNextAvailableVoice();o&&(o.triggerAttack(i,e,s),this._activeVoices.push({midi:r,voice:o,released:!1}),this.log("triggerAttack",i,e))})}_triggerRelease(t,e){t.forEach(s=>{const i=new En(this.context,s).toMidi(),r=this._activeVoices.find(({midi:o,released:a})=>o===i&&!a);r&&(r.voice.triggerRelease(e),r.released=!0,this.log("triggerRelease",s,e))})}_scheduleEvent(t,e,s,i){P(!this.disposed,"Synth was already disposed"),s<=this.now()?t==="attack"?this._triggerAttack(e,s,i):this._triggerRelease(e,s):this.context.setTimeout(()=>{this.disposed||this._scheduleEvent(t,e,s,i)},s-this.now())}triggerAttack(t,e,s){Array.isArray(t)||(t=[t]);const i=this.toSeconds(e);return this._scheduleEvent("attack",t,i,s),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const s=this.toSeconds(e);return this._scheduleEvent("release",t,s),this}triggerAttackRelease(t,e,s,i){const r=this.toSeconds(s);if(this.triggerAttack(t,r,i),Et(e)){P(Et(t),"If the duration is an array, the notes must also be an array"),t=t;for(let o=0;o<t.length;o++){const a=e[Math.min(o,e.length-1)],c=this.toSeconds(a);P(c>0,"The duration must be greater than 0"),this.triggerRelease(t[o],r+c)}}else{const o=this.toSeconds(e);P(o>0,"The duration must be greater than 0"),this.triggerRelease(t,r+o)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(t){const e=St(t,["onsilence","context"]);return this.options=Jt(this.options,e),this._voices.forEach(s=>s.set(e)),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach(({voice:s})=>{s.triggerRelease(e)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(t=>t.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class di extends _e{constructor(){const t=S(di.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");super(t),this.name="Sampler",this._activeSources=new Map;const e={};Object.keys(t.urls).forEach(s=>{const i=parseInt(s,10);if(P(un(s)||he(i)&&isFinite(i),`url key is neither a note or midi pitch: ${s}`),un(s)){const r=new Qt(this.context,s).toMidi();e[r]=t.urls[s]}else he(i)&&isFinite(i)&&(e[i]=t.urls[i])}),this._buffers=new lr({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(_e.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Y,onerror:Y,release:.1,urls:{}})}_findClosest(t){let s=0;for(;s<96;){if(this._buffers.has(t+s))return-s;if(this._buffers.has(t-s))return s;s++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,s=1){return this.log("triggerAttack",t,e,s),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=Ia(new Qt(this.context,i).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),h=o-c,l=this._buffers.get(h),u=An(c+a),p=new tn({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);p.start(e,0,l.duration/u,s),Et(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(p),p.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),d=f.indexOf(p);d!==-1&&f.splice(d,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(s=>{const i=new Qt(this.context,s).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(s=>{for(;s.length;)s.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,s,i=1){const r=this.toSeconds(s);return this.triggerAttack(t,r,i),Et(e)?(P(Et(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const c=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,s){if(P(un(t)||isFinite(t),`note must be a pitch or midi: ${t}`),un(t)){const i=new Qt(this.context,t).toMidi();this._buffers.add(i,e,s)}else this._buffers.add(t,e,s);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}de([Ee(0)],di.prototype,"attack",void 0);de([Ee(0)],di.prototype,"release",void 0);class Re extends Dt{constructor(){const t=S(Re.getDefaults(),arguments,["callback","value"]);super(t),this.name="ToneEvent",this._state=new Js("stopped"),this._startOffset=0,this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(Dt.getDefaults(),{callback:Y,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,e=>{let s;if(e.state==="started"){e.id!==-1&&this.context.transport.clear(e.id);const i=e.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||he(this._loop)&&this._loop>1){s=1/0,he(this._loop)&&(s=this._loop*this._getLoopDuration());const r=this._state.getAfter(i);r!==null&&(s=Math.min(s,r.time-i)),s!==1/0&&(s=new pt(this.context,s));const o=new pt(this.context,this._getLoopDuration());e.id=this.context.transport.scheduleRepeat(this._tick.bind(this),o,new pt(this.context,i),s)}else e.id=this.context.transport.schedule(this._tick.bind(this),new pt(this.context,i))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const e=this.toTicks(t);return this._state.getValueAtTime(e)==="stopped"&&(this._state.add({id:-1,state:"started",time:e}),this._rescheduleEvents(e)),this}stop(t){this.cancel(t);const e=this.toTicks(t);if(this._state.getValueAtTime(e)==="started"){this._state.setStateAtTime("stopped",e,{id:-1});const s=this._state.getBefore(e);let i=e;s!==null&&(i=s.time),this._rescheduleEvents(i)}return this}cancel(t){t=pe(t,-1/0);const e=this.toTicks(t);return this._state.forEachFrom(e,s=>{this.context.transport.clear(s.id)}),this._state.cancel(e),this}_tick(t){const e=this.context.transport.getTicksAtTime(t);if(!this.mute&&this._state.getValueAtTime(e)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let s=.02;Aa(this.humanize)||(s=this.toSeconds(this.humanize)),t+=(Math.random()*2-1)*s}this.callback(t,this.value)}}_getLoopDuration(){return(this._loopEnd-this._loopStart)/this._playbackRate}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new pt(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new pt(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,e=this._state.get(t);if(e!==null&&e.state==="started"){const s=this._getLoopDuration();return(t-e.time)%s/s}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Nn extends Re{constructor(){const t=S(Nn.getDefaults(),arguments,["callback","events"]);super(t),this.name="Part",this._state=new Js("stopped"),this._events=new Set,this._state.increasing=!0,t.events.forEach(e=>{Et(e)?this.add(e[0],e[1]):this.add(e)})}static getDefaults(){return Object.assign(Re.getDefaults(),{events:[]})}start(t,e){const s=this.toTicks(t);if(this._state.getValueAtTime(s)!=="started"){e=pe(e,this._loop?this._loopStart:0),this._loop?e=pe(e,this._loopStart):e=pe(e,0);const i=this.toTicks(e);this._state.add({id:-1,offset:i,state:"started",time:s}),this._forEach(r=>{this._startNote(r,s,i)})}return this}_startNote(t,e,s){e-=s,this._loop?t.startOffset>=this._loopStart&&t.startOffset<this._loopEnd?(t.startOffset<s&&(e+=this._getLoopDuration()),t.start(new pt(this.context,e))):t.startOffset<this._loopStart&&t.startOffset>=s&&(t.loop=!1,t.start(new pt(this.context,e))):t.startOffset>=s&&t.start(new pt(this.context,e))}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t,this._forEach(e=>{e.startOffset+=this._startOffset})}stop(t){const e=this.toTicks(t);return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._forEach(s=>{s.stop(t)}),this}at(t,e){const s=new cs(this.context,t).toTicks(),i=new pt(this.context,1).toSeconds(),r=this._events.values();let o=r.next();for(;!o.done;){const a=o.value;if(Math.abs(s-a.startOffset)<i)return Q(e)&&(a.value=e),a;o=r.next()}return Q(e)?(this.add(t,e),this.at(t)):null}add(t,e){t instanceof Object&&Reflect.has(t,"time")&&(e=t,t=e.time);const s=this.toTicks(t);let i;return e instanceof Re?(i=e,i.callback=this._tick.bind(this)):i=new Re({callback:this._tick.bind(this),context:this.context,value:e}),i.startOffset=s,i.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(i),this._restartEvent(i),this}_restartEvent(t){this._state.forEach(e=>{e.state==="started"?this._startNote(t,e.time,e.offset):t.stop(new pt(this.context,e.time))})}remove(t,e){return Fe(t)&&t.hasOwnProperty("time")&&(e=t,t=e.time),t=this.toTicks(t),this._events.forEach(s=>{s.startOffset===t&&(Zt(e)||Q(e)&&s.value===e)&&(this._events.delete(s),s.dispose())}),this}clear(){return this._forEach(t=>t.dispose()),this._events.clear(),this}cancel(t){return this._forEach(e=>e.cancel(t)),this._state.cancel(this.toTicks(t)),this}_forEach(t){return this._events&&this._events.forEach(e=>{e instanceof Nn?e._forEach(t):t(e)}),this}_setAll(t,e){this._forEach(s=>{s[t]=e})}_tick(t,e){this.mute||this.callback(t,e)}_testLoopBoundries(t){this._loop&&(t.startOffset<this._loopStart||t.startOffset>=this._loopEnd)?t.cancel(0):t.state==="stopped"&&this._restartEvent(t)}get probability(){return this._probability}set probability(t){this._probability=t,this._setAll("probability",t)}get humanize(){return this._humanize}set humanize(t){this._humanize=t,this._setAll("humanize",t)}get loop(){return this._loop}set loop(t){this._loop=t,this._forEach(e=>{e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.loop=t,this._testLoopBoundries(e)})}get loopEnd(){return new pt(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopEnd=t,this._testLoopBoundries(e)})}get loopStart(){return new pt(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopStart=this.loopStart,this._testLoopBoundries(e)})}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._setAll("playbackRate",t)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}class Ar extends Re{constructor(){const t=S(Ar.getDefaults(),arguments,["callback","events","subdivision"]);super(t),this.name="Sequence",this._part=new Nn({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[],this._subdivision=this.toTicks(t.subdivision),this.events=t.events,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.playbackRate=t.playbackRate,this.probability=t.probability,this.humanize=t.humanize,this.mute=t.mute,this.playbackRate=t.playbackRate}static getDefaults(){return Object.assign(St(Re.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(t,e){e!==null&&!this.mute&&this.callback(t,e)}get events(){return this._events}set events(t){this.clear(),this._eventsArray=t,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(t,e){return this._part.start(t,e&&this._indexTime(e)),this}stop(t){return this._part.stop(t),this}get subdivision(){return new pt(this.context,this._subdivision).toSeconds()}_createSequence(t){return new Proxy(t,{get:(e,s)=>e[s],set:(e,s,i)=>(ge(s)&&isFinite(parseInt(s,10))&&Et(i)?e[s]=this._createSequence(i):e[s]=i,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(t,e,s){t.forEach((i,r)=>{const o=r*e+s;if(Et(i))this._rescheduleSequence(i,e/i.length,o);else{const a=new pt(this.context,o,"i").toSeconds();this._part.add(a,i)}})}_indexTime(t){return new pt(this.context,t*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(t){this._part.loop=t}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this._part.loopStart=this._indexTime(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,t===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(t)}get startOffset(){return this._part.startOffset}set startOffset(t){this._part.startOffset=t}get playbackRate(){return this._part.playbackRate}set playbackRate(t){this._part.playbackRate=t}get probability(){return this._part.probability}set probability(t){this._part.probability=t}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(t){this._part.humanize=t}get length(){return this._part.length}}class on extends D{constructor(){const t=S(on.getDefaults(),arguments,["fade"]);super(t),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new nf({context:this.context}),this.a=new I({context:this.context,gain:0}),this.b=new I({context:this.context,gain:0}),this.output=new I({context:this.context}),this._internalChannels=[this.a,this.b],this.fade=new j({context:this.context,units:"normalRange",value:t.fade}),W(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",ne(this._split,this.a.gain,0),ne(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(D.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class bt extends D{constructor(t){super(t),this.name="Effect",this._dryWet=new on({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new I({context:this.context}),this.effectReturn=new I({context:this.context}),this.input=new I({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],W(this,"wet")}static getDefaults(){return Object.assign(D.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class Mn extends bt{constructor(t){super(t),this.name="LFOEffect",this._lfo=new Wt({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,W(this,["frequency","depth"])}static getDefaults(){return Object.assign(bt.getDefaults(),{frequency:1,type:"sine",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Er extends Mn{constructor(){const t=S(Er.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);super(t),this.name="AutoFilter",this.filter=new Lt(Object.assign(t.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=t.octaves,this.baseFrequency=t.baseFrequency}static getDefaults(){return Object.assign(Mn.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(t){this._lfo.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._lfo.max=this._lfo.min*Math.pow(2,t)}dispose(){return super.dispose(),this.filter.dispose(),this}}class an extends D{constructor(){const t=S(an.getDefaults(),arguments,["pan"]);super(t),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner,this.pan=new H({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",W(this,"pan")}static getDefaults(){return Object.assign(D.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class Dr extends Mn{constructor(){const t=S(Dr.getDefaults(),arguments,["frequency"]);super(t),this.name="AutoPanner",this._panner=new an({context:this.context,channelCount:t.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(Mn.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class pi extends D{constructor(){const t=S(pi.getDefaults(),arguments,["smoothing"]);super(t),this.name="Follower",this._abs=this.input=new sf({context:this.context}),this._lowpass=this.output=new li({context:this.context,frequency:1/this.toSeconds(t.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=t.smoothing}static getDefaults(){return Object.assign(D.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(t){this._smoothing=t,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class Or extends bt{constructor(){const t=S(Or.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);super(t),this.name="AutoWah",this._follower=new pi({context:this.context,smoothing:t.follower}),this._sweepRange=new gr({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this._inputBoost=new I({context:this.context}),this._bandpass=new Lt({context:this.context,rolloff:-48,frequency:0,Q:t.Q}),this._peaking=new Lt({context:this.context,type:"peaking"}),this._peaking.gain.value=t.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=t.sensitivity,W(this,["gain","Q"])}static getDefaults(){return Object.assign(bt.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(t){this._follower.smoothing=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._setSweepRange()}get sensitivity(){return ti(1/this._inputBoost.gain.value)}set sensitivity(t){this._inputBoost.gain.value=1/Cn(t)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const ja="bit-crusher",lf=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;za(ja,lf);class Nr extends bt{constructor(){const t=S(Nr.getDefaults(),arguments,["bits"]);super(t),this.name="BitCrusher",this._bitCrusherWorklet=new Mr({context:this.context,bits:t.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(bt.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class Mr extends Mi{constructor(){const t=S(Mr.getDefaults(),arguments);super(t),this.name="BitCrusherWorklet",this.input=new I({context:this.context}),this.output=new I({context:this.context}),this.bits=new H({context:this.context,value:t.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(Mi.getDefaults(),{bits:12})}_audioWorkletName(){return ja}onReady(t){se(this.input,t,this.output);const e=t.parameters.get("bits");this.bits.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Rr extends bt{constructor(){const t=S(Rr.getDefaults(),arguments,["order"]);super(t),this.name="Chebyshev",this._shaper=new we({context:this.context,length:4096}),this._order=t.order,this.connectEffect(this._shaper),this.order=t.order,this.oversample=t.oversample}static getDefaults(){return Object.assign(bt.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(t,e,s){return s.has(e)||(e===0?s.set(e,0):e===1?s.set(e,t):s.set(e,2*t*this._getCoefficient(t,e-1,s)-this._getCoefficient(t,e-2,s))),s.get(e)}get order(){return this._order}set order(t){P(Number.isInteger(t),"'order' must be an integer"),this._order=t,this._shaper.setMap(e=>this._getCoefficient(e,t,new Map))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Ts extends D{constructor(){const t=S(Ts.getDefaults(),arguments,["channels"]);super(t),this.name="Split",this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(D.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Ss extends D{constructor(){const t=S(Ss.getDefaults(),arguments,["channels"]);super(t),this.name="Merge",this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(D.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class Le extends D{constructor(t){super(t),this.name="StereoEffect",this.input=new I({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new on({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new Ts({context:this.context,channels:2}),this._merge=new Ss({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),W(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),se(...t),ne(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),se(...t),ne(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(D.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class Ri extends Le{constructor(t){super(t),this.feedback=new j({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new I({context:this.context}),this._feedbackR=new I({context:this.context}),this._feedbackSplit=new Ts({context:this.context,channels:2}),this._feedbackMerge=new Ss({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),W(this,["feedback"])}static getDefaults(){return Object.assign(Le.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Fr extends Ri{constructor(){const t=S(Fr.getDefaults(),arguments,["frequency","delayTime","depth"]);super(t),this.name="Chorus",this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new Wt({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new Wt({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new te({context:this.context}),this._delayNodeR=new te({context:this.context}),this.frequency=this._lfoL.frequency,W(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(Ri.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return this._delayTime*1e3}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Ir extends bt{constructor(){const t=S(Ir.getDefaults(),arguments,["distortion"]);super(t),this.name="Distortion",this._shaper=new we({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(bt.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=t*100,s=Math.PI/180;this._shaper.setMap(i=>Math.abs(i)<.001?0:(3+e)*i*20*s/(Math.PI+e*Math.abs(i)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class xo extends bt{constructor(t){super(t),this.name="FeedbackEffect",this._feedbackGain=new I({context:this.context,gain:t.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,W(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(bt.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class uf extends D{constructor(t){super(t),this.name="PhaseShiftAllpass",this.input=new I({context:this.context}),this.output=new I({context:this.context}),this.offset90=new I({context:this.context});const e=[.6923878,.9360654322959,.988229522686,.9987488452737],s=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(e),this._bank1=this._createAllPassFilterBank(s),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),se(this.input,...this._bank0,this._oneSampleDelay,this.output),se(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(t){return t.map(s=>{const i=[[s*s,0,-1],[1,0,-(s*s)]];return this.context.createIIRFilter(i[0],i[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(t=>t.disconnect()),this._bank1.forEach(t=>t.disconnect()),this._oneSampleDelay.disconnect(),this}}class qr extends bt{constructor(){const t=S(qr.getDefaults(),arguments,["frequency"]);super(t),this.name="FrequencyShifter",this.frequency=new j({context:this.context,units:"frequency",value:t.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new ri({context:this.context,type:"sine"}),this._cosine=new ht({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new ut({context:this.context}),this._cosineMultiply=new ut({context:this.context}),this._negate=new La({context:this.context}),this._add=new ws({context:this.context}),this._phaseShifter=new uf({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const e=this.immediate();this._sine.start(e),this._cosine.start(e)}static getDefaults(){return Object.assign(bt.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const To=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],So=[225,556,441,341];class Vr extends Le{constructor(){const t=S(Vr.getDefaults(),arguments,["roomSize","dampening"]);super(t),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[],this.roomSize=new j({context:this.context,value:t.roomSize,units:"normalRange"}),this._allpassFiltersL=So.map(e=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=e,s}),this._allpassFiltersR=So.map(e=>{const s=this.context.createBiquadFilter();return s.type="allpass",s.frequency.value=e,s}),this._combFilters=To.map((e,s)=>{const i=new ui({context:this.context,dampening:t.dampening,delayTime:e});return s<To.length/2?this.connectEffectLeft(i,...this._allpassFiltersL):this.connectEffectRight(i,...this._allpassFiltersR),this.roomSize.connect(i.resonance),i}),W(this,["roomSize"])}static getDefaults(){return Object.assign(Le.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(t){this._combFilters.forEach(e=>e.dampening=t)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(t=>t.disconnect()),this._allpassFiltersR.forEach(t=>t.disconnect()),this._combFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this}}class ko extends Ri{constructor(t){super(t),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),W(this,["feedback"])}}class Pr extends ko{constructor(){const t=S(Pr.getDefaults(),arguments,["delayTime","feedback"]);super(t),this.name="PingPongDelay",this._leftDelay=new te({context:this.context,maxDelay:t.maxDelay}),this._rightDelay=new te({context:this.context,maxDelay:t.maxDelay}),this._rightPreDelay=new te({context:this.context,maxDelay:t.maxDelay}),this.delayTime=new j({context:this.context,units:"time",value:t.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),W(this,["delayTime"])}static getDefaults(){return Object.assign(ko.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class Lr extends xo{constructor(){const t=S(Lr.getDefaults(),arguments,["pitch"]);super(t),this.name="PitchShift",this._frequency=new j({context:this.context}),this._delayA=new te({maxDelay:1,context:this.context}),this._lfoA=new Wt({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new te({maxDelay:1,context:this.context}),this._lfoB=new Wt({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new on({context:this.context}),this._crossFadeLFO=new Wt({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new te({delayTime:t.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,W(this,"delayTime"),this._pitch=t.pitch,this._windowSize=t.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const e=this.now();this._lfoA.start(e),this._lfoB.start(e),this._crossFadeLFO.start(e),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(xo.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(t){this._pitch=t;let e=0;t<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,e=An(t-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,e=An(t)-1),this._frequency.value=e*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(t){this._windowSize=this.toSeconds(t),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Wr extends Le{constructor(){const t=S(Wr.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);super(t),this.name="Phaser",this._lfoL=new Wt({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new Wt({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this.Q=new j({context:this.context,value:t.Q,units:"positive"}),this._filtersL=this._makeFilters(t.stages,this._lfoL),this._filtersR=this._makeFilters(t.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=t.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=t.baseFrequency,this.octaves=t.octaves,this._lfoL.start(),this._lfoR.start(),W(this,["frequency","Q"])}static getDefaults(){return Object.assign(Le.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(t,e){const s=[];for(let i=0;i<t;i++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),e.connect(r.frequency),s.push(r)}return s}get octaves(){return this._octaves}set octaves(t){this._octaves=t;const e=this._baseFrequency*Math.pow(2,t);this._lfoL.max=e,this._lfoR.max=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(t=>t.disconnect()),this._filtersR.forEach(t=>t.disconnect()),this.frequency.dispose(),this}}class zr extends bt{constructor(){const t=S(zr.getDefaults(),arguments,["decay"]);super(t),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve(),this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(bt.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){t=this.toSeconds(t),ee(t,.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){t=this.toSeconds(t),ee(t,0),this._preDelay=t,this.generate()}generate(){return lt(this,void 0,void 0,function*(){const t=this.ready,e=new Kn(2,this._decay+this._preDelay,this.context.sampleRate),s=new Ze({context:e}),i=new Ze({context:e}),r=new Ss({context:e});s.connect(r,0,0),i.connect(r,0,1);const o=new I({context:e}).toDestination();r.connect(o),s.start(0),i.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(Y),yield t,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class fi extends D{constructor(){super(S(fi.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new Ts({channels:2,context:this.context}),this._midAdd=new ws({context:this.context}),this.mid=new ut({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new xs({context:this.context}),this.side=new ut({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class mi extends D{constructor(){super(S(mi.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new I({context:this.context}),this.side=new I({context:this.context}),this._left=new ws({context:this.context}),this._leftMult=new ut({context:this.context,value:Math.SQRT1_2}),this._right=new xs({context:this.context}),this._rightMult=new ut({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Ss({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class Co extends bt{constructor(t){super(t),this.name="MidSideEffect",this._midSideMerge=new mi({context:this.context}),this._midSideSplit=new fi({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...t){this._midSend.chain(...t,this._midReturn)}connectEffectSide(...t){this._sideSend.chain(...t,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class Br extends Co{constructor(){const t=S(Br.getDefaults(),arguments,["width"]);super(t),this.name="StereoWidener",this.width=new j({context:this.context,value:t.width,units:"normalRange"}),W(this,["width"]),this._twoTimesWidthMid=new ut({context:this.context,value:2}),this._twoTimesWidthSide=new ut({context:this.context,value:2}),this._midMult=new ut({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new xs({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),ne(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new ut({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(Co.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class jr extends Le{constructor(){const t=S(jr.getDefaults(),arguments,["frequency","depth"]);super(t),this.name="Tremolo",this._lfoL=new Wt({context:this.context,type:t.type,min:1,max:0}),this._lfoR=new Wt({context:this.context,type:t.type,min:1,max:0}),this._amplitudeL=new I({context:this.context}),this._amplitudeR=new I({context:this.context}),this.frequency=new j({context:this.context,value:t.frequency,units:"frequency"}),this.depth=new j({context:this.context,value:t.depth,units:"normalRange"}),W(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=t.spread}static getDefaults(){return Object.assign(Le.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Ur extends bt{constructor(){const t=S(Ur.getDefaults(),arguments,["frequency","depth"]);super(t),this.name="Vibrato",this._delayNode=new te({context:this.context,delayTime:0,maxDelay:t.maxDelay}),this._lfo=new Wt({context:this.context,type:t.type,min:0,max:t.maxDelay,frequency:t.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=t.depth,W(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(bt.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class cn extends D{constructor(){const t=S(cn.getDefaults(),arguments,["type","size"]);super(t),this.name="Analyser",this._analysers=[],this._buffers=[],this.input=this.output=this._gain=new I({context:this.context}),this._split=new Ts({context:this.context,channels:t.channels}),this.input.connect(this._split),ee(t.channels,1);for(let e=0;e<t.channels;e++)this._analysers[e]=this.context.createAnalyser(),this._split.connect(this._analysers[e],e,0);this.size=t.size,this.type=t.type,this.smoothing=t.smoothing}static getDefaults(){return Object.assign(D.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((t,e)=>{const s=this._buffers[e];this._type==="fft"?t.getFloatFrequencyData(s):this._type==="waveform"&&t.getFloatTimeDomainData(s)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach((e,s)=>{e.fftSize=t*2,this._buffers[s]=new Float32Array(t)})}get channels(){return this._analysers.length}get type(){return this._type}set type(t){P(t==="waveform"||t==="fft",`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach(e=>e.smoothingTimeConstant=t)}dispose(){return super.dispose(),this._analysers.forEach(t=>t.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class fs extends D{constructor(){super(S(fs.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new cn({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class $r extends fs{constructor(){const t=S($r.getDefaults(),arguments,["smoothing"]);super(t),this.name="Meter",this.input=this.output=this._analyser=new cn({context:this.context,size:256,type:"waveform",channels:t.channelCount}),this.smoothing=t.smoothing,this.normalRange=t.normalRange,this._rms=new Array(t.channelCount),this._rms.fill(0)}static getDefaults(){return Object.assign(fs.getDefaults(),{smoothing:.8,normalRange:!1,channelCount:1})}getLevel(){return Qs("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const t=this._analyser.getValue(),s=(this.channels===1?[t]:t).map((i,r)=>{const o=i.reduce((c,h)=>c+h*h,0),a=Math.sqrt(o/i.length);return this._rms[r]=Math.max(a,this._rms[r]*this.smoothing),this.normalRange?this._rms[r]:ti(this._rms[r])});return this.channels===1?s[0]:s}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Gr extends fs{constructor(){const t=S(Gr.getDefaults(),arguments,["size"]);super(t),this.name="Waveform",this._analyser.type="waveform",this.size=t.size}static getDefaults(){return Object.assign(fs.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(t){this._analyser.size=t}}class gt extends D{constructor(){const t=S(gt.getDefaults(),arguments,["solo"]);super(t),this.name="Solo",this.input=this.output=new I({context:this.context}),gt._allSolos.has(this.context)||gt._allSolos.set(this.context,new Set),gt._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(D.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),gt._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){gt._soloed.has(this.context)||gt._soloed.set(this.context,new Set),gt._soloed.get(this.context).add(this)}_removeSolo(){gt._soloed.has(this.context)&&gt._soloed.get(this.context).delete(this)}_isSoloed(){return gt._soloed.has(this.context)&&gt._soloed.get(this.context).has(this)}_noSolos(){return!gt._soloed.has(this.context)||gt._soloed.has(this.context)&&gt._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),gt._allSolos.get(this.context).delete(this),this._removeSolo(),this}}gt._allSolos=new Map;gt._soloed=new Map;class Hr extends D{constructor(){const t=S(Hr.getDefaults(),arguments,["pan","volume"]);super(t),this.name="PanVol",this._panner=this.input=new an({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new Ke({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,W(this,["pan","volume"])}static getDefaults(){return Object.assign(D.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class as extends D{constructor(){const t=S(as.getDefaults(),arguments,["volume","pan"]);super(t),this.name="Channel",this._solo=this.input=new gt({solo:t.solo,context:this.context}),this._panVol=this.output=new Hr({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),W(this,["pan","volume"])}static getDefaults(){return Object.assign(D.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return as.buses.has(t)||as.buses.set(t,new I({context:this.context})),as.buses.get(t)}send(t,e=0){const s=this._getBus(t),i=new I({context:this.context,units:"decibels",gain:e});return this.connect(i),i.connect(s),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}as.buses=new Map;class gi extends D{constructor(){const t=S(gi.getDefaults(),arguments,["lowFrequency","highFrequency"]);super(t),this.name="MultibandSplit",this.input=new I({context:this.context}),this.output=void 0,this.low=new Lt({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new Lt({context:this.context,frequency:0,type:"highpass"}),this.mid=new Lt({context:this.context,frequency:0,type:"lowpass"}),this.high=new Lt({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high],this.lowFrequency=new j({context:this.context,units:"frequency",value:t.lowFrequency}),this.highFrequency=new j({context:this.context,units:"frequency",value:t.highFrequency}),this.Q=new j({context:this.context,units:"positive",value:t.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),W(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(D.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),Ys(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}class Rn extends D{constructor(){const t=S(Rn.getDefaults(),arguments);super(t),this.name="Recorder",this.input=new I({context:this.context}),P(Rn.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:t.mimeType})}static getDefaults(){return D.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return Ft!==null&&Reflect.has(Ft,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return lt(this,void 0,void 0,function*(){P(this.state!=="started","Recorder is already started");const t=new Promise(e=>{const s=()=>{this._recorder.removeEventListener("start",s,!1),e()};this._recorder.addEventListener("start",s,!1)});return this._recorder.start(),yield t})}stop(){return lt(this,void 0,void 0,function*(){P(this.state!=="stopped","Recorder is not started");const t=new Promise(e=>{const s=i=>{this._recorder.removeEventListener("dataavailable",s,!1),e(i.data)};this._recorder.addEventListener("dataavailable",s,!1)});return this._recorder.stop(),yield t})}pause(){return P(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class ke extends D{constructor(){const t=S(ke.getDefaults(),arguments,["threshold","ratio"]);super(t),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor,this.threshold=new H({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:t.threshold}),this.attack=new H({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:t.attack}),this.release=new H({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:t.release}),this.knee=new H({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:t.knee}),this.ratio=new H({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:t.ratio}),W(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(D.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Qr extends D{constructor(){const t=S(Qr.getDefaults(),arguments,["threshold","smoothing"]);super(t),this.name="Gate",this._follower=new pi({context:this.context,smoothing:t.smoothing}),this._gt=new mr({context:this.context,value:Cn(t.threshold)}),this.input=new I({context:this.context}),this._gate=this.output=new I({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(D.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return ti(this._gt.value)}set threshold(t){this._gt.value=Cn(t)}get smoothing(){return this._follower.smoothing}set smoothing(t){this._follower.smoothing=t}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Zr extends D{constructor(){const t=S(Zr.getDefaults(),arguments,["threshold"]);super(t),this.name="Limiter",this._compressor=this.input=this.output=new ke({context:this.context,ratio:20,attack:.003,release:.01,threshold:t.threshold}),this.threshold=this._compressor.threshold,W(this,"threshold")}static getDefaults(){return Object.assign(D.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class Xr extends D{constructor(){const t=S(Xr.getDefaults(),arguments);super(t),this.name="MidSideCompressor",this._midSideSplit=this.input=new fi({context:this.context}),this._midSideMerge=this.output=new mi({context:this.context}),this.mid=new ke(Object.assign(t.mid,{context:this.context})),this.side=new ke(Object.assign(t.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),W(this,["mid","side"])}static getDefaults(){return Object.assign(D.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class Yr extends D{constructor(){const t=S(Yr.getDefaults(),arguments);super(t),this.name="MultibandCompressor",this._splitter=this.input=new gi({context:this.context,lowFrequency:t.lowFrequency,highFrequency:t.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new I({context:this.context}),this.low=new ke(Object.assign(t.low,{context:this.context})),this.mid=new ke(Object.assign(t.mid,{context:this.context})),this.high=new ke(Object.assign(t.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),W(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(D.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class Jr extends D{constructor(){const t=S(Jr.getDefaults(),arguments,["low","mid","high"]);super(t),this.name="EQ3",this.output=new I({context:this.context}),this._internalChannels=[],this.input=this._multibandSplit=new gi({context:this.context,highFrequency:t.highFrequency,lowFrequency:t.lowFrequency}),this._lowGain=new I({context:this.context,gain:t.low,units:"decibels"}),this._midGain=new I({context:this.context,gain:t.mid,units:"decibels"}),this._highGain=new I({context:this.context,gain:t.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),W(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(D.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),Ys(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}const df=Ht().transport;function wi(){return Ht().transport}Ht().destination;Ht().destination;function _i(){return Ht().destination}Ht().listener;Ht().draw;Ht();class pf{static async convertWebMToWAV(t){const s=await new AudioContext().decodeAudioData(t),i=s.numberOfChannels,r=s.sampleRate,o=1;let a;if(i===2){const _=s.getChannelData(0),x=s.getChannelData(1);a=new Float32Array(_.length+x.length);for(let T=0,C=0;T<_.length;T++,C+=2)a[C]=_[T],a[C+1]=x[T]}else a=s.getChannelData(0);const c=16,h=r*i*(c/8),l=i*(c/8),u=new ArrayBuffer(44+a.length*2),p=new DataView(u);let f=0;function d(_){for(let x=0;x<_.length;x++)p.setUint8(f++,_.charCodeAt(x))}function m(_){p.setUint32(f,_,!0),f+=4}function g(_){p.setUint16(f,_,!0),f+=2}d("RIFF"),m(36+a.length*2),d("WAVE"),d("fmt "),m(16),g(o),g(i),m(r),m(h),g(l),g(c),d("data"),m(a.length*2);for(let _=0;_<a.length;_++,f+=2){let x=Math.max(-1,Math.min(1,a[_]));x=x<0?x*32768:x*32767,p.setInt16(f,x,!0)}return u}}const Pt=class Pt{static set bpm(t){df.bpm.value=t}static get hasAudio(){return!!Pt.blob}static prepareRecorder(){_i().connect(Pt.Recorder)}static async start(){Pt.Recorder.state!="stopped"&&Pt.stop(),Pt.Recorder.start(),wi().setLoopPoints(0,"16"),wi().start()}static async stop(){wi().stop(),Pt.Recorder.state=="started"&&(Pt.blob=await Pt.Recorder.stop(),At.dispatch(new uc),console.log("✅ Aufnahme abgeschlossen"))}static async download(){if(Pt.blob){const t=await Pt.blob.arrayBuffer(),e=await pf.convertWebMToWAV(t),s=new Blob([e],{type:"audio/wav"}),i=URL.createObjectURL(s),r=document.createElement("a");r.href=i,r.download="aufnahme.wav",document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(i)}}};M(Pt,"Recorder",new Rn),M(Pt,"blob");let ie=Pt;var Vs=(n=>(n.goTo="left-sidebar-go-to",n.show="left-sidebar-show",n.hide="left-sidebar-hide",n))(Vs||{});class Ua extends CustomEvent{constructor(){super("left-sidebar-show")}}class ff extends CustomEvent{constructor(){super("left-sidebar-hide")}}var Ue=(n=>(n.update="right-sidebar-update",n.show="right-sidebar-show",n.hide="right-sidebar-hide",n))(Ue||{});class mf extends CustomEvent{constructor(){super("right-sidebar-update")}}class gf extends CustomEvent{constructor(){super("right-sidebar-show")}}const Pn=class Pn extends qt{constructor(){super();M(this,"logo");M(this,"toggleLeftSidebarButton");M(this,"toggleRightSidebarButton");M(this,"downloadButton");this.logo=hs.create(),this.toggleLeftSidebarButton=Tt.create(oe.arrowRightdouble,()=>At.dispatch(new Ua)),this.toggleRightSidebarButton=Tt.create(oe.arrowLeftDouble,()=>At.dispatch(new gf));const e=Tt.create(oe.play,()=>{ie.start()}),s=Tt.create(oe.stop,()=>{ie.stop(),this.downloadButton.disabled=!ie.hasAudio});this.downloadButton=Tt.create(oe.download,()=>ie.download()),this.downloadButton.disabled=!0,this.attachShadow({mode:"closed"}).append(Tc(),this.toggleLeftSidebarButton,this.logo,nt.createElement(),e,s,nt.createElement(),this.downloadButton,this.toggleRightSidebarButton)}static create(){return document.createElement(Pn.tag)}connectedCallback(){ie.bpm=160,ie.prepareRecorder(),this.handleEvents()}disconnectedCallback(){ie.stop()}handleEvents(){At.listenTo(Vs.show).subscribe(()=>{this.logo.style.visibility="hidden",this.toggleLeftSidebarButton.style.visibility="hidden"}),At.listenTo(Vs.hide).subscribe(()=>{this.logo.style.visibility="visible",this.toggleLeftSidebarButton.style.visibility="visible"}),At.listenTo(Pi.onDownloadStateChange).subscribe(()=>{this.downloadButton.disabled=!ie.hasAudio})}};M(Pn,"tag","bb-controls");let Ps=Pn;const $a=document.createElement("template");$a.innerHTML=`
<style>
:host {
  display: grid;
  grid-template-columns: minmax(0, 1fr) 400px;
  grid-template-rows: min-content minmax(0, 1fr);

  width: 100vw;
  height: 100vh;
}

${Ps.tag} {
  grid-column: span 2;
}

[part="content"] {
  margin: 25px;
  padding: 20px;

  font-size: 1rem;
  line-height: 1.5;
  background: var(--grey);
  outline: none;
  border: none;
  resize: none;

  overflow: auto;
  box-sizing: border-box;
}

[part="nodes"] {
  position: relative;

  display: grid;
  grid-template-columns: minmax(0, 1fr);
  align-content: flex-start;
  gap: 16px;

  padding: 25px 25px 25px 0;

  overflow: auto;
  box-sizing: border-box;
}

</style>`;const _f=()=>$a.content.cloneNode(!0);class yf{constructor(){M(this,"sequence",new Ar((t,e)=>{},[],"8n"))}set keys(t){this.sequence.events=t}get keys(){return this.sequence.events}connect(t){this.sequence.callback=(e,s)=>{s!="break"&&s.split(",").forEach((i,r)=>t.triggerAttackRelease(i,"8n",r>0?`+0.${r}`:e))}}start(){this.sequence.state=="stopped"&&this.sequence.start()}get(){return this.sequence}}const Ga=["autofilter","autopanner","autowah","bitcrusher","chebyshev","chorus","delay","distortion","feeverb","frequencyshifter","phaser","pingpongdelay","pitchshift","reverb","stereowidener","trembolo","vibrato","compressor","eq","highpass","lowpass","gate","limiter","midsidecompressor","multibandcompressor","gain","panner","volume"];var $t=(n=>(n.amSynth="am",n.duoSynth="duo",n.fmSynth="fm",n.membraneSynth="membrane",n.metalSynth="metal",n.monoSynth="mono",n.noiseSynth="noise",n.pluckSynth="pluck",n.polySynth="poly",n.synth="synth",n))($t||{});class vf{constructor(t){M(this,"_instrument");this.type=t}set type(t){switch(this._instrument&&this.dispose(),t){case $t.amSynth:this._instrument=new _r;break;case $t.duoSynth:this._instrument=new yr;break;case $t.fmSynth:this._instrument=new vr;break;case $t.membraneSynth:this._instrument=new rn;break;case $t.metalSynth:this._instrument=new br;break;case $t.monoSynth:this._instrument=new Ge;break;case $t.noiseSynth:this._instrument=new wr;break;case $t.pluckSynth:this._instrument=new kr;break;case $t.polySynth:this._instrument=new Cr;break;case $t.synth:this._instrument=new Pe;break}}set(t){this._instrument.set(t)}get(){return this._instrument}chain(t){this._instrument.disconnect(),this._instrument.chain(...t)}dispose(){this._instrument.disconnect(),this._instrument.dispose()}}const Ha=n=>{switch(n){case"autofilter":return new Er("4n");case"autopanner":return new Dr("4n");case"autowah":return new Or(50,6,-30);case"bitcrusher":return new Nr(4);case"chebyshev":return new Rr(50);case"chorus":return new Fr(4,2.5,.5);case"delay":return new te;case"distortion":return new Ir(.5);case"feeverb":return new Vr;case"frequencyshifter":return new qr(42);case"phaser":return new Wr({frequency:15,octaves:5,baseFrequency:1e3});case"pingpongdelay":return new Pr("4n",.2);case"pitchshift":return new Lr;case"reverb":return new zr(10);case"stereowidener":return new Br(.5);case"trembolo":return new jr(9,.75);case"vibrato":return new Ur(50,.2);case"compressor":return new ke(-30,3);case"eq":return new Jr;case"highpass":return new Lt(40,"highpass",-12);case"lowpass":return new Lt(40,"lowpass",-12);case"gate":return new Qr(-30,.2);case"limiter":return new Zr(-20);case"midsidecompressor":return new Xr;case"multibandcompressor":return new Yr;case"gain":return new I;case"panner":return new an(1);case"volume":return new Ke(-12)}},K=class K{static wire(t){const e=K.parse(t);K.resetChain(),[...Object.keys(e)].forEach(s=>{s=="bpm"?ie.bpm=e[s]:s=="keys"?K.keys.keys=e.keys.split(" "):s=="instrument"?(e[s].hasOwnProperty("synth")&&(K.instrument.type=e[s].synth),K.instrument.set(e[s])):Ga.includes(s)&&K.chain.push(Ha(s).set({...e[s]}))}),K.keys.connect(K.instrument.get()),K.chain.length>0?(K.instrument.chain(K.chain),K.chain[K.chain.length-1].toDestination()):K.instrument.get().toDestination(),K.keys.start()}static getNodes(){return[nt.createElement({innerHTML:`<h1>Keys</h1>
        <span><b>${K.keys.keys.join(" ")}</b></span>`}),nt.createElement({innerHTML:`<h1>${K.instrument.get().name}</h1>${K.format(K.instrument.get().get(),!0,"instrument.")}`}),...K.chain.map(t=>nt.createElement({innerHTML:`<h1>${t.name}</h1>${K.format(t.get())}`}))]}static format(t,e=!0,s=""){return Object.entries(t).map(([i,r])=>typeof r=="object"&&r!==null?K.format(r,e,`${s}${i}.`):e?`<span>${s}${i}: ${r}</span>`:`${s}${i}: ${r}`).flat().join(`
`)}static resetChain(){K.chain.forEach(t=>{t.disconnect(),t.dispose()}),K.chain=[]}static parse(t){const e=t.split(`
`).map(i=>i.trim()).filter(i=>i&&!i.startsWith("#")),s={};for(const i of e){const[r,o]=i.split(":").map(c=>c.trim()),a=K.parseValue(o);a&&K.setDeepValue(s,r.split("."),a)}return s}static parseValue(t){try{if(t.startsWith("[")&&t.endsWith("]"))return JSON.parse(t);const e=Number(t);return isNaN(e)?t:e}catch{return}}static setDeepValue(t,e,s){let i=t;for(let r=0;r<e.length-1;r++)i[e[r]]||(i[e[r]]={}),i=i[e[r]];i[e[e.length-1]]=s}};M(K,"keys",new yf),M(K,"instrument",new vf($t.synth)),M(K,"chain",[]);let Ls=K;const Qa=document.createElement("template");Qa.innerHTML=`
<style>
:host {
  display: grid;
  grid-template-columns: minmax(0, 1fr);

  transition: all 0.1s ease-in-out;
}

canvas {
  width: inherit;
  height: inherit;

  background: var(--grey);
  border-radius: 2px;
  border: solid 2px var(--blue);
  
  box-sizing: border-box;
}
</style>`;const bf=()=>Qa.content.cloneNode(!0),Ln=class Ln extends qt{constructor(){super();M(this,"analyzer",new Gr(1024));M(this,"canvas",nt.createElement({tag:"canvas"}));this.attachShadow({mode:"closed"}).append(bf(),this.canvas)}static create(){return document.createElement(Ln.tag)}connectedCallback(){_i().connect(this.analyzer);const e=this.analyzer,s=this.canvas,i=this.canvas.getContext("2d");function r(){if(requestAnimationFrame(r),i){const o=e.getValue();i.clearRect(0,0,s.width,s.height),i.beginPath(),i.moveTo(0,s.height/2);for(let a=0;a<o.length;a++){const c=a/o.length*s.width,h=(.5-o[a]/2)*s.height;i.lineTo(c,h)}i.strokeStyle="#52b788",i.lineWidth=1,i.stroke()}}r()}};M(Ln,"tag","bb-audiowave");let Fn=Ln;const Za=document.createElement("template");Za.innerHTML=`
<style>
:host {
  display: grid;
  grid-template-columns: minmax(0, 1fr);

  transition: all 0.1s ease-in-out;
}

canvas {
  width: inherit;
  height: inherit;

  background: var(--white);
  border-radius: 2px;
  border: solid 2px var(--green);
  
  box-sizing: border-box;
}
</style>`;const wf=()=>Za.content.cloneNode(!0),Wn=class Wn extends qt{constructor(){super();M(this,"analyzer",new cn("fft",64));M(this,"canvas",nt.createElement({tag:"canvas"}));this.attachShadow({mode:"closed"}).append(wf(),this.canvas)}static create(){return document.createElement(Wn.tag)}connectedCallback(){_i().connect(this.analyzer);const e=this.analyzer,s=this.canvas,i=this.canvas.getContext("2d");function r(){if(requestAnimationFrame(r),i){const o=e.getValue();i.clearRect(0,0,s.width,s.height);const a=s.width/o.length;for(let c=0;c<o.length;c++){const h=o[c],l=(1+Number(h)/100)*s.height,u=c*a,p=s.height-l;i.fillStyle="#52b788",i.fillRect(u,p,a-1,l)}}}r()}};M(Wn,"tag","bb-frequency-spectrum");let In=Wn;const Xa=document.createElement("template");Xa.innerHTML=`
<style>
:host {
  position: relative;

  display: grid;
  grid-template-columns: minmax(0, 1fr);

  transition: all 0.1s ease-in-out;
}

span {
  position: absolute;

  left: 50%;
  top: 50%;

  color: var(--dark);
  font-size: 1.75rem;

  transform: translate(-50%, -50%);
}

canvas {
  width: inherit;
  height: inherit;

  background: var(--grey);
  border-radius: 2px;
  border: solid 2px var(--blue);
  
  box-sizing: border-box;
}
</style>`;const xf=()=>Xa.content.cloneNode(!0),zn=class zn extends qt{constructor(){super();M(this,"meter",new $r);M(this,"canvas",nt.createElement({tag:"canvas"}));M(this,"rms",nt.createElement({tag:"span"}));this.attachShadow({mode:"closed"}).append(xf(),this.rms,this.canvas)}static create(){return document.createElement(zn.tag)}connectedCallback(){this.meter.normalRange=!1,_i().connect(this.meter);const e=this.meter,s=this.canvas,i=s.getContext("2d"),r=this.rms;function o(){if(requestAnimationFrame(o),i){const a=e.getValue();r.textContent=`${a.toFixed(2)} dB`;const c=s.height,h=s.width,l=Math.max(0,1+a/60);i.clearRect(0,0,h,c);const u=l*c;i.fillStyle=l>.8?"#e82f3b":"#52b788",i.fillRect(0,c-u,h,u)}}o()}};M(zn,"tag","bb-rms");let qn=zn;class Ya extends qt{constructor(){super();M(this,"content",nt.createElement({tag:"textarea",part:"content"}));M(this,"nodes",nt.createElement({part:"nodes"}));this.attachShadow({mode:"closed"}).append(_f(),Ps.create(),this.content,this.nodes)}connectedCallback(){this.content.tabIndex=0,this.nodes.replaceChildren(qn.create(),Fn.create(),In.create()),[...this.nodes.children].forEach(s=>{s.style.width=`${this.nodes.getBoundingClientRect().width-25}px`,s.style.height=`${(this.nodes.getBoundingClientRect().height-50-32)/3}px`});const e=mn.select(s=>s.script);this.content.value=e??`
bpm: 80
keys: F#1 F#2 G1 G0

instrument.synth: synth
instrument.oscillator.type: sawtooth
instrument.envelope.attack: 0.01
instrument.envelope.decay: 0.2
instrument.envelope.sustain: 0.8
instrument.envelope.release: 1.0`,this.renderContent(),this.handleEvents()}renderContent(){Ls.wire(this.content.value??""),At.dispatch(new mf),At.dispatch(new dc(this.content.value))}handleEvents(){this.content.addEventListener("input",()=>{this.renderContent()}),this.content.addEventListener("dragover",e=>{var s;((s=e.dataTransfer)==null?void 0:s.effectAllowed)=="copy"&&(this.content.style.background="var(--drop)"),e.preventDefault()}),this.content.addEventListener("dragleave",()=>{this.content.style.background=""}),this.content.addEventListener("dragend",()=>{this.content.style.background=""}),this.content.addEventListener("drop",e=>{if(e.dataTransfer){const s=e.dataTransfer.getData("type");this.content.value+=`

# ${s.toUpperCase()}
`+Ls.format(Ha(s).get(),!1,`${s}.`),this.renderContent()}this.content.style.background=""})}}M(Ya,"tag","bb-beatmaker");const Ja=document.createElement("template");Ja.innerHTML=`
<style>
:host {
    --fontSize: 0.8rem;
    --padding: 0.5rem 0.75rem;

    display: flex;
    justify-content: center;
    align-items: center;

    min-width: 125px;
    max-width: 200px;
    padding: var(--padding);
    text-transform: uppercase;

    font-size: var(--fontSize);
    font-family: 'Poppins', serif;
    font-weight: 400;
    font-style: normal;
    border-radius: 5px;
    border: solid 2px transparent;

    box-sizing: border-box;

    transition: all 0.15s ease-in-out;
    cursor: pointer;
}

:host([variant="primary"]) {
    background: var(--blue);
    color: var(--white);
}

:host([variant="secondary"]) {
    background: transparent;
    color: var(--dark);
}

:host([variant="danger"]) {
    background: var(--red);
    color: var(--white);
}

:host([variant="primary"]:not([disabled]):hover) {
    background: var(--white);
    color: var(--blue);    
    border: solid 2px var(--blue);
}

:host([variant="secondary"]:not([disabled]):hover) {
    background: var(--blue);
    color: var(--white);
    border: solid 2px var(--white);
}

:host([variant="danger"]:not([disabled]):hover) {
    background: var(--white);
    color: var(--red);
    border: solid 2px var(--red);
}

:host([disabled]) {
    background: transparent;
    color: var(--dark);
    border: solid 2px var(--dark);

    cursor: default;
}
</style>`;const Ao=()=>Ja.content.cloneNode(!0),Os=class Os extends qt{set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get disabled(){return!!this.getAttribute("disabled")}set text(t){this.setAttribute("text",t)}get text(){return this.getAttribute("text")??""}set variant(t){this.setAttribute("variant",t)}get variant(){return this.getAttribute("variant")??"primary"}static create(t,e,s="primary",i=""){const r=document.createElement(Os.tag);return r.text=t,r.setAttribute("variant",s),r.setAttribute("title",i),r.addEventListener("click",e),r}constructor(){super(),this.attachShadow({mode:"open"}).append(Ao())}connectedCallback(){this.setAttribute("type","button"),this.variant=this.variant,this.disabled=this.disabled}attributeChangedCallback(t,e,s){e!==s&&this.update()}update(){var t;(t=this.shadowRoot)==null||t.replaceChildren(Ao(),this.text)}};M(Os,"tag","bb-button"),M(Os,"observedAttributes",Object.values(["text","variant"]));let Fi=Os;const Ka=document.createElement("template");Ka.innerHTML=`
<style>
:host {
    --width: 400px;

    position: relative;

    display: flex;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;

    height: auto;
    width: 0px;

    padding: 60px 0 0 0;
    
    background: var(--white);
    
    pointer-events: none;
    visibility: hidden;
    opacity: 0;

    transform: translateX(calc(-1 * var(--width))) translateY(60px);
    transition-duration: 250ms;
    transition-timing-function: ease;
    transition-property: width, opacity, transform;

    box-sizing: border-box;
    z-index: 10;
}

${hs.tag} {
    position: absolute;
    top: 16px;
    left: 16px;
}

${Tt.tag} {
    position: absolute;
    top: 16px;
    right: 16px;
}

[part="drag-handle"] {
    position: absolute;
    right: -5px;
    top: 0;

    height: 100%;
    width: 10px;

    background: transparent;

    cursor: col-resize;
}

[part="drag-handle-indicator"] {
    position: absolute;
    left: 3px;

    height: 100%;
    width: 2px;

    background: var(--background);

    transition: all 0.1s ease-in-out;
}

[part="drag-handle"]:hover [part="drag-handle-indicator"],
[part="drag-handle"][active] [part="drag-handle-indicator"] {
    background: var(--blue);
}

[part="drag-ghost"] {
    width: 1px;
    height: 1px;

    background: transparent;
}

:host([visible]) {
    height: 100vh;
    width: var(--width);

    visibility: visible;
    opacity: 1;

    transform: translateX(0) translateY(0);
    pointer-events: all;
}

[part="content"] {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: 1rem;
    
    align-items: center;
    justify-items: center;
    width: var(--width);
    color: var(--dark);

    overflow: hidden auto;
    scrollbar-color: var(--background) transparent;
    scrollbar-width: thin;
}

[part="content"] > div {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    
    width: 100%;
    
    padding: 10px;
    box-sizing: border-box;
    transition: all 0.1s ease-in-out;
}

[part="content"] > div h1 {
    margin: 0;

    color: var(--blue);
    font-size: 0.8rem;
    text-transform: uppercase;
}

[part="content"] > div p {
    margin: 0;

    font-size: 0.8rem;
}

[part="content"] > div:hover {
    background: var(--grey);
}
</style>`;const Tf=()=>Ka.content.cloneNode(!0);class Sf{static getDocs(t){return{autofilter:"AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency. Setting the LFO rate and depth allows for control over the filter modulation rate and depth.",autopanner:"AutoPanner is a Panner with an LFO connected to the pan amount",autowah:"AutoWah connects a Follower to a Filter. The frequency of the filter, follows the input amplitude curve.",bitcrusher:"BitCrusher down-samples the incoming signal to a different bit depth. Lowering the bit depth of the signal creates distortion.",chebyshev:"Chebyshev is a waveshaper which is good for making different types of distortion sounds. Note that odd orders sound very different from even ones, and order = 1 is no change.",chorus:"Chorus is a stereo chorus effect composed of a left and right delay with an LFO applied to the delayTime of each channel. When feedback is set to a value larger than 0, you also get Flanger-type effects.",delay:"Wrapper around Web Audio's native DelayNode.",distortion:"A simple distortion effect using Tone.WaveShaper",feeverb:"Freeverb is a reverb based on Freeverb.",frequencyshifter:"FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount. The amount can be changed at audio rate and the effect is applied in real time. The frequency shifting is implemented with a technique called single side band modulation using a ring modulator. Note: Contrary to pitch shifting, all frequencies are shifted by the same amount, destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion. The algorithm will produces some aliasing towards the high end, especially if your source material contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling buffers in real time, so it is not possible to fix it properly. Depending on the use case it might be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.",phaser:"Phaser is a phaser effect. Phasers work by changing the phase of different frequency components of an incoming signal.",pingpongdelay:"PingPongDelay is a feedback delay effect where the echo is heard first in one channel and next in the opposite channel. In a stereo system these are the right and left channels. PingPongDelay in more simplified terms is two Tone.FeedbackDelays with independent delay values. Each delay is routed to one channel (left or right), and the channel triggered second will always trigger at the same interval after the first.",pitchshift:"PitchShift does near-realtime pitch shifting to the incoming signal. The effect is achieved by speeding up or slowing down the delayTime of a DelayNode using a sawtooth wave.",reverb:"Simple convolution created with decaying noise. Generates an Impulse Response Buffer with Tone.Offline then feeds the IR into ConvolverNode. The impulse response generation is async, so you have to wait until ready resolves before it will make a sound.",stereowidener:"Applies a width factor to the mid/side seperation. 0 is all mid and 1 is all side.",trembolo:"Tremolo modulates the amplitude of an incoming signal using an LFO. The effect is a stereo effect where the modulation phase is inverted in each channel.",vibrato:"A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO modulates the delayTime of the delay, causing the pitch to rise and fall.",compressor:"Compressor is a thin wrapper around the Web Audio DynamicsCompressorNode. Compression reduces the volume of loud sounds or amplifies quiet sounds by narrowing or 'compressing' an audio signal's dynamic range.",eq:"EQ3 provides 3 equalizer bins: Low/Mid/High.",highpass:"Tone.Filter is a filter which allows for all of the same native methods as the BiquadFilterNode. Tone.Filter has the added ability to set the filter rolloff at -12 (default), -24 and -48.",lowpass:"Tone.Filter is a filter which allows for all of the same native methods as the BiquadFilterNode. Tone.Filter has the added ability to set the filter rolloff at -12 (default), -24 and -48.",gate:"Gate only passes a signal through when the incoming signal exceeds a specified threshold. It uses Follower to follow the ampltiude of the incoming signal and compares it to the threshold value using GreaterThan.",limiter:"Limiter will limit the loudness of an incoming signal. Under the hood it's composed of a Compressor with a fast attack and release and max compression ratio.",midsidecompressor:"MidSideCompressor applies two different compressors to the mid and side signal components of the input.",multibandcompressor:"A compressor with separate controls over low/mid/high dynamics.",gain:"A thin wrapper around the Native Web Audio GainNode. The GainNode is a basic building block of the Web Audio API and is useful for routing audio and adjusting gains.",panner:"Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode",volume:"Volume is a simple volume node, useful for creating a volume fader."}[t]}}const Bn=class Bn extends qt{constructor(){super();M(this,"toggle");M(this,"dragHandle");M(this,"dragGhost");M(this,"content",nt.createElement({part:"content"}));this.toggle=Tt.create(oe.arrowLeftDouble,()=>this.onToggleSidebar()),this.dragHandle=nt.createElement({part:"drag-handle"}),this.dragHandle.draggable=!0,this.dragHandle.append(nt.createElement({part:"drag-handle-indicator"})),this.dragGhost=nt.createElement({part:"drag-ghost"}),this.attachShadow({mode:"open"}).append(Tf())}set visible(e){if(e){this.setAttribute("visible","");return}this.removeAttribute("visible")}get visible(){return this.getAttribute("visible")==""}set width(e){this.style.setProperty("--width",`${Math.max(350,Math.min(window.innerWidth-650,e))}px`)}static create(){return document.createElement(Bn.tag)}connectedCallback(){this.shadowRoot&&this.shadowRoot.append(hs.create(),this.toggle,this.dragHandle,this.dragGhost,this.content),this.visible=!1,this.width=400,this.handleEvents(),this.renderContent()}renderContent(){this.content.append(nt.createElement({innerHTML:`
        <h1>instrument</h1>
        <p>Mögliche Werte für Instruments: ${Object.values($t)}</p>`}),...[...Ga].sort((e,s)=>e.localeCompare(s)).map(e=>{const s=nt.createElement({innerHTML:`
          <h1>${e}</h1>
          <p>${Sf.getDocs(e)}</p>`});return s.draggable=!0,s.addEventListener("dragstart",i=>{i.dataTransfer&&(i.dataTransfer.setData("type",e),i.dataTransfer.setDragImage(s,10,10),i.dataTransfer.effectAllowed="copy",i.dataTransfer.dropEffect="copy")}),s}))}handleEvents(){At.listenTo(Vs.goTo).subscribe(e=>{this.visible||At.dispatch(new Ua)}),At.listenTo(Vs.show).subscribe(()=>{this.visible=!0})}onToggleSidebar(){this.visible&&At.dispatch(new ff),this.visible=!this.visible}};M(Bn,"tag","bb-left-sidebar");let Ii=Bn;const tc=document.createElement("template");tc.innerHTML=`
<style>
:host {
    --position: fixed;
    --width: 325px;
    --minWidth: 300px;

    position: var(--position);

    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: 0.25rem;
    
    width: var(--width);
    min-width: var(--minWidth);
    padding: 1rem;

    background: var(--white);
    border-radius: 10px;
    box-shadow:
        rgba(15, 15, 15, 0.05) 0px 0px 0px 1px,
        rgba(15, 15, 15, 0.1) 0px 3px 6px,
        rgba(15, 15, 15, 0.2) 0px 9px 24px;

    box-sizing: border-box;
    overflow: hidden auto;
    scrollbar-color: var(--background) transparent;
    scrollbar-width: thin;

    visibility: hidden;
    z-index: 200;
}

[part="context-menu-item"] {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    grid-template-rows: minmax(0, 1fr);
    align-items: center;
    
    color: var(--dark);
    font-size: 0.75rem;
    border-radius: 6px;

    transition: background 0.1s ease-in-out;
    cursor: default;
    box-sizing: border-box;
}  

[part="context-menu-item"][type="button"] {
    height: 40px;
    cursor: pointer;
}

[part="context-menu-item"] ${fe.tag} {
    align-self: center;
    justify-self: center;

    height: 20px;
    width: 20px;

    fill: var(--dark);
}

:host hr {
    height: 1px;
    width: 100%;
    margin: 0;

    background: var(--background);
    border: none;
}

:host([visible]) {
    visibility: visible;
}

[part="context-menu-item"][type="button"]:not([disabled]):hover {
    background: var(--grey);
}

[part="context-menu-item"][type="button"][disabled] {
    color: var(--grey);

    cursor: default;
}

[part="context-menu-item"][type="button"][disabled] ${fe.tag} {
    fill: var(--grey);
}
</style>`;const Eo=()=>tc.content.cloneNode(!0),kf=(n,t,e,s=!1)=>{const i=document.createElement("div");return i.setAttribute("part","context-menu-item"),s&&i.setAttribute("disabled",""),t&&(i.append(fe.create(t)),i.style.gridTemplateColumns="2rem minmax(0, 1fr)"),e&&(i.setAttribute("type","button"),i.addEventListener("click",()=>{s||e()}),t||(i.style.padding="0 1rem")),i.append(n),i};var ec=(n=>(n[n.text=0]="text",n[n.button=1]="button",n[n.separator=2]="separator",n))(ec||{});const jn=class jn extends qt{constructor(){super();M(this,"shadowDom");this.shadowDom=this.attachShadow({mode:"open"}),this.shadowDom.append(Eo())}set items(e){this.update(e)}set visible(e){if(e){this.setAttribute("visible",""),this.updateHeight();return}this.removeAttribute("visible")}get visible(){return this.getAttribute("visible")==""}static create(){return document.createElement(jn.tag)}connectedCallback(){this.visible=!1,this.handleEvents()}handleEvents(){this.addEventListener("contextmenu",e=>{e.preventDefault()})}show(e,s){const{width:i,height:r}=this.getBoundingClientRect(),o=20;let a=e-o,c=s-o;a+i>window.innerWidth&&(a=a-i+2*o),c+r>window.innerHeight&&(c=c-r+2*o),this.style.left=`${a}px`,this.style.top=`${c}px`,this.visible=!0}showRelativeTo(e,s){let i=e,r=s;this.style.left=`${i}px`,this.style.top=`${r}px`,this.visible=!0}update(e){this.shadowDom.replaceChildren(Eo(),...e.map(s=>{switch(s.type){case 0:case 1:return kf(s.text??"",s.icon??null,s.onClick?()=>{s.onClick&&s.onClick(),s.stayOpen||setTimeout(()=>{this.visible=!1},10)}:null,s.disabled??!1);case 2:return document.createElement("hr")}})),this.updateHeight()}updateHeight(){if(this.shadowDom.children.length>8){let e=0;[...this.shadowDom.children].slice(0,Math.min(this.shadowDom.children.length,8)).forEach(s=>e+=s.getBoundingClientRect().height),this.style.height=`${Math.max(350,e)}px`,this.scrollTo({top:0});return}this.style.height="auto"}};M(jn,"tag","wb-context-menu");let ms=jn;const sc=document.createElement("template");sc.innerHTML=`
<style>
:host {
   --fontSize: 1rem;
   --borderRadius: 2rem;
   --padding: 0.75rem 1.25rem;

   --fontFamily: 'Poppins', serif;
   --color: var(--dark);

   display: flex;
   flex-direction: row;
   align-items: center;

   height: min-content;
   min-height: 60px;

   font-size: var(--fonstSize);
   font-family: 'Bebas Neue', serif;
   font-weight: 400;
   font-style: normal;
   background: transparent;

   border-bottom: 2px solid transparent;
   border-radius: 2px;
   outline: none;

   transition: background 0.15s ease-in-out;
   box-sizing: border-box;
}

label {
   color: var(--background);
}

[part="select"] {
   display: flex;
   align-items: baseline;

   padding: 0;

   font-size: inherit;
   font-family: inherit;
   font-weight: inherit;
   font-style: inherit;

   background: transparent;
   color: var(--color);
   
   border-radius: 2px;
   border: none;
   outline: none !important;
   text-align: center;

   transition: all 0.15s ease-in-out;
   box-sizing: border-box;

   cursor: pointer;
   appearance: auto;
}

${ms.tag} {
   --minWidth: auto;
}

${ms.tag}::part(context-menu-item) {
   padding: 0 !important;

   text-align: center;
   font-size: 1rem;
}

[part="select"] ${fe.tag} {
   --size: 18px;
}

[part="select"]:hover {
   color: var(--blue);
   fill: var(--blue);
}
</style>`;const Cf=()=>sc.content.cloneNode(!0);class Af extends CustomEvent{constructor(t){super("selection-value-change",{detail:t})}}const Ns=class Ns extends qt{constructor(){super();M(this,"valueElement");M(this,"contextMenu");M(this,"_options",[]);this.valueElement=nt.createElement({tag:"div",part:"select"}),this.contextMenu=ms.create(),this.attachShadow({mode:"open"}).append(Cf(),this.valueElement,this.contextMenu)}set options(e){this._options=e}get options(){return this._options}set value(e){this.setAttribute("value",e)}get value(){return this.getAttribute("value")??""}static create(e){const s=document.createElement(Ns.tag);return s.options=e,s}connectedCallback(){this.options.length>0&&this.value==""&&(this.value=this.options[0]),this.renderContent(),this.handleEvents()}attributeChangedCallback(e,s,i){s!==i&&this.renderContent()}handleEvents(){this.addEventListener("click",()=>{const{x:e,y:s,width:i}=this.getBoundingClientRect();this.contextMenu.style.width=`${2.5*i}px`,this.options.length>2&&console.error("IMPORTANT! When more than two elements will break"),this.contextMenu.addEventListener("mouseleave",()=>{},{once:!0}),this.contextMenu.showRelativeTo(e-1.25*i/2,s-27)})}renderContent(){this.tabIndex=0,this.contextMenu.items=this.options.map(e=>({type:ec.button,text:e,onClick:()=>this.updateValue(e)})),this.updateValueElement()}updateValue(e){this.value!=e&&(this.value=e,this.dispatchEvent(new Af(this.value)))}updateValueElement(){this.valueElement.replaceChildren(this.value,fe.create(oe.arrowDown))}};M(Ns,"tag","wb-selection"),M(Ns,"observedAttributes",["options","label","value"]);let qi=Ns;const nc=document.createElement("template");nc.innerHTML=`
<style>
:host {
    --width: 400px;

    position: fixed;
    top: 0;
    right: 0;

    display: grid;
    grid-template-columns: minmax(0, 1fr);
    grid-template-rows: minmax(0, 1fr);

    height: auto;
    width: 0px;

    padding: 40px 0 0 0;
    
    background: var(--white);
    box-shadow: rgba(15, 15, 15, 0.04) 0px 0px 0px 1px, rgba(15, 15, 15, 0.03) 0px 3px 6px, rgba(15, 15, 15, 0.06) 0px 9px 24px;
    
    pointer-events: none;
    visibility: hidden;
    opacity: 0;

    transform: translateX(var(--width)) translateY(60px);
    transition-duration: 300ms;
    transition-timing-function: ease;
    transition-property: width, opacity, transform;

    z-index: 100;
    box-sizing: border-box;
}

[part="drag-handle"] {
    position: absolute;
    left: -5px;
    top: 0;

    height: 100%;
    width: 10px;

    background: transparent;

    cursor: col-resize;
}

[part="drag-handle-indicator"] {
    position: absolute;
    right: 3px;

    height: 100%;
    width: 2px;

    background: transparent;

    transition: all 0.1s ease-in-out;
}

[part="drag-handle"]:hover [part="drag-handle-indicator"],
[part="drag-handle"][active] [part="drag-handle-indicator"] {
    background: var(--blue);
}

[part="drag-ghost"] {
    width: 1px;
    height: 1px;

    background: transparent;
}

[part="content"] {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    align-content: flex-start;
    gap: 1rem;

    box-sizing: border-box;

    overflow: hidden auto;
    scrollbar-color: var(--background) transparent;
    scrollbar-width: thin;
}

${Tt.tag} {
    position: absolute;
    top: 7px;
    left: 7px;
}

[part="content"] > div {
    height: min-content;
    padding: 10px;
    
    background: var(--white);
    font-size: 0.8rem;
    color: var(--dark);
    border-radius: 2px;
  
    transition: all 0.1s ease-in-out;
    box-sizing: border-box;
}

[part="content"] > div h1 {
    margin: 0;
  
    color: var(--blue);
    font-size: 0.8rem;
    text-transform: uppercase;
}
  
[part="content"]  > div span {
    display: block;

    color: var(--dark);
    font-size: 0.8rem;
}

[part="content"] > div:hover {
    background: var(--grey);
}

:host([visible]) {
    height: 100%;
    width: var(--width);

    visibility: visible;
    opacity: 1;

    transform: translateX(0) translateY(0);
    pointer-events: all;
}
</style>`;const Ef=()=>nc.content.cloneNode(!0),Un=class Un extends qt{constructor(){super();M(this,"observers",{[Ue.update]:At.listenTo(Ue.update),[Ue.hide]:At.listenTo(Ue.hide),[Ue.show]:At.listenTo(Ue.show)});M(this,"content");M(this,"toggle");M(this,"dragHandle");M(this,"dragGhost");M(this,"_buttons",[]);this.content=nt.createElement({part:"content"}),this.toggle=Tt.create(oe.arrowRightdouble,()=>{this.visible=!1}),this.dragHandle=nt.createElement({part:"drag-handle"}),this.dragHandle.draggable=!0,this.dragHandle.append(nt.createElement({part:"drag-handle-indicator"})),this.dragGhost=nt.createElement({part:"drag-ghost"}),this.attachShadow({mode:"open"}).append(Ef(),this.toggle,...this._buttons,this.content,this.dragHandle,this.dragGhost)}set visible(e){if(e){this.setAttribute("visible","");return}this.removeAttribute("visible")}get visible(){return this.getAttribute("visible")==""}set width(e){this.style.setProperty("--width",`${Math.max(350,Math.min(600,e))}px`)}static create(){return document.createElement(Un.tag)}connectedCallback(){this.visible=!1,this.width=400,this.handleEvents(),this.renderContent()}disconnectedCallback(){[...Object.values(this.observers)].forEach(e=>e.destroy())}handleEvents(){this.observers["right-sidebar-update"].subscribe(()=>{this.renderContent()}),this.observers["right-sidebar-hide"].subscribe(()=>{this.visible=!1}),this.observers["right-sidebar-show"].subscribe(()=>{this.visible=!0,this.renderContent()}),this.dragHandle.addEventListener("dragstart",e=>{e.dataTransfer&&(e.dataTransfer.effectAllowed="move",e.dataTransfer.setDragImage(this.dragGhost,0,0)),this.style.setProperty("transition-property","opacity, transform"),this.dragHandle.setAttribute("active","")}),this.dragHandle.addEventListener("drag",e=>{e.clientX>0&&(this.width=window.innerWidth-e.clientX)}),this.dragHandle.addEventListener("dragend",()=>{this.style.setProperty("transition-property","width, opacity, transform"),this.dragHandle.removeAttribute("active")})}renderContent(){this.content.replaceChildren(...Ls.getNodes())}};M(Un,"tag","bb-right-sidebar");let Vi=Un;(async()=>await Promise.all([hs,Fi,fe,Tt,ms,Ms,Ii,Vi,Ps,qi,Fn,In,qn,Ya].map(n=>(customElements.define(n.tag,n),customElements.whenDefined(n.tag)))))();
